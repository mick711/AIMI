// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.automation.triggers;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.interfaces.ActivePluginProvider;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobCalculatorPlugin;
import info.nightscout.androidaps.plugins.treatments.TreatmentsPlugin;
import info.nightscout.androidaps.receivers.ReceiverStatusStore;
import info.nightscout.androidaps.services.LastLocationDataContainer;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TriggerWifiSsid_MembersInjector implements MembersInjector<TriggerWifiSsid> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<SP> spProvider;

  private final Provider<LastLocationDataContainer> locationDataContainerProvider;

  private final Provider<TreatmentsPlugin> treatmentsPluginProvider;

  private final Provider<ActivePluginProvider> activePluginProvider;

  private final Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider;

  private final Provider<ReceiverStatusStore> receiverStatusStoreProvider;

  public TriggerWifiSsid_MembersInjector(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<ProfileFunction> profileFunctionProvider, Provider<SP> spProvider,
      Provider<LastLocationDataContainer> locationDataContainerProvider,
      Provider<TreatmentsPlugin> treatmentsPluginProvider,
      Provider<ActivePluginProvider> activePluginProvider,
      Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider,
      Provider<ReceiverStatusStore> receiverStatusStoreProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.rxBusProvider = rxBusProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.spProvider = spProvider;
    this.locationDataContainerProvider = locationDataContainerProvider;
    this.treatmentsPluginProvider = treatmentsPluginProvider;
    this.activePluginProvider = activePluginProvider;
    this.iobCobCalculatorPluginProvider = iobCobCalculatorPluginProvider;
    this.receiverStatusStoreProvider = receiverStatusStoreProvider;
  }

  public static MembersInjector<TriggerWifiSsid> create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<ProfileFunction> profileFunctionProvider, Provider<SP> spProvider,
      Provider<LastLocationDataContainer> locationDataContainerProvider,
      Provider<TreatmentsPlugin> treatmentsPluginProvider,
      Provider<ActivePluginProvider> activePluginProvider,
      Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider,
      Provider<ReceiverStatusStore> receiverStatusStoreProvider) {
    return new TriggerWifiSsid_MembersInjector(aapsLoggerProvider, rxBusProvider, resourceHelperProvider, profileFunctionProvider, spProvider, locationDataContainerProvider, treatmentsPluginProvider, activePluginProvider, iobCobCalculatorPluginProvider, receiverStatusStoreProvider);
  }

  @Override
  public void injectMembers(TriggerWifiSsid instance) {
    Trigger_MembersInjector.injectAapsLogger(instance, aapsLoggerProvider.get());
    Trigger_MembersInjector.injectRxBus(instance, rxBusProvider.get());
    Trigger_MembersInjector.injectResourceHelper(instance, resourceHelperProvider.get());
    Trigger_MembersInjector.injectProfileFunction(instance, profileFunctionProvider.get());
    Trigger_MembersInjector.injectSp(instance, spProvider.get());
    Trigger_MembersInjector.injectLocationDataContainer(instance, locationDataContainerProvider.get());
    Trigger_MembersInjector.injectTreatmentsPlugin(instance, treatmentsPluginProvider.get());
    Trigger_MembersInjector.injectActivePlugin(instance, activePluginProvider.get());
    Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, iobCobCalculatorPluginProvider.get());
    injectReceiverStatusStore(instance, receiverStatusStoreProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.automation.triggers.TriggerWifiSsid.receiverStatusStore")
  public static void injectReceiverStatusStore(TriggerWifiSsid instance,
      ReceiverStatusStore receiverStatusStore) {
    instance.receiverStatusStore = receiverStatusStore;
  }
}
