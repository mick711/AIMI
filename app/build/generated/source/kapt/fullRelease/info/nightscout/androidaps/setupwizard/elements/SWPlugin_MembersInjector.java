// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.setupwizard.elements;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.configBuilder.ConfigBuilderPlugin;
import info.nightscout.androidaps.plugins.configBuilder.PluginStore;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SWPlugin_MembersInjector implements MembersInjector<SWPlugin> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<SP> spProvider;

  private final Provider<PluginStore> pluginStoreProvider;

  private final Provider<ConfigBuilderPlugin> configBuilderPluginProvider;

  public SWPlugin_MembersInjector(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<SP> spProvider, Provider<PluginStore> pluginStoreProvider,
      Provider<ConfigBuilderPlugin> configBuilderPluginProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.rxBusProvider = rxBusProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.spProvider = spProvider;
    this.pluginStoreProvider = pluginStoreProvider;
    this.configBuilderPluginProvider = configBuilderPluginProvider;
  }

  public static MembersInjector<SWPlugin> create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<SP> spProvider, Provider<PluginStore> pluginStoreProvider,
      Provider<ConfigBuilderPlugin> configBuilderPluginProvider) {
    return new SWPlugin_MembersInjector(aapsLoggerProvider, rxBusProvider, resourceHelperProvider, spProvider, pluginStoreProvider, configBuilderPluginProvider);
  }

  @Override
  public void injectMembers(SWPlugin instance) {
    SWItem_MembersInjector.injectAapsLogger(instance, aapsLoggerProvider.get());
    SWItem_MembersInjector.injectRxBus(instance, rxBusProvider.get());
    SWItem_MembersInjector.injectResourceHelper(instance, resourceHelperProvider.get());
    SWItem_MembersInjector.injectSp(instance, spProvider.get());
    injectPluginStore(instance, pluginStoreProvider.get());
    injectConfigBuilderPlugin(instance, configBuilderPluginProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.setupwizard.elements.SWPlugin.pluginStore")
  public static void injectPluginStore(SWPlugin instance, PluginStore pluginStore) {
    instance.pluginStore = pluginStore;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.setupwizard.elements.SWPlugin.configBuilderPlugin")
  public static void injectConfigBuilderPlugin(SWPlugin instance,
      ConfigBuilderPlugin configBuilderPlugin) {
    instance.configBuilderPlugin = configBuilderPlugin;
  }
}
