// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.source;

import dagger.android.HasAndroidInjector;
import dagger.internal.Factory;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GlimpPlugin_Factory implements Factory<GlimpPlugin> {
  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  public GlimpPlugin_Factory(Provider<HasAndroidInjector> injectorProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<AAPSLogger> aapsLoggerProvider) {
    this.injectorProvider = injectorProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
  }

  @Override
  public GlimpPlugin get() {
    return newInstance(injectorProvider.get(), resourceHelperProvider.get(), aapsLoggerProvider.get());
  }

  public static GlimpPlugin_Factory create(Provider<HasAndroidInjector> injectorProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<AAPSLogger> aapsLoggerProvider) {
    return new GlimpPlugin_Factory(injectorProvider, resourceHelperProvider, aapsLoggerProvider);
  }

  public static GlimpPlugin newInstance(HasAndroidInjector injector, ResourceHelper resourceHelper,
      AAPSLogger aapsLogger) {
    return new GlimpPlugin(injector, resourceHelper, aapsLogger);
  }
}
