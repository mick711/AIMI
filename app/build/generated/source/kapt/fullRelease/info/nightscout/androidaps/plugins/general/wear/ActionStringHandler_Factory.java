// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.wear;

import android.content.Context;
import dagger.android.HasAndroidInjector;
import dagger.internal.Factory;
import info.nightscout.androidaps.Config;
import info.nightscout.androidaps.dana.DanaPump;
import info.nightscout.androidaps.danaRKorean.DanaRKoreanPlugin;
import info.nightscout.androidaps.danaRv2.DanaRv2Plugin;
import info.nightscout.androidaps.danar.DanaRPlugin;
import info.nightscout.androidaps.danars.DanaRSPlugin;
import info.nightscout.androidaps.interfaces.ActivePluginProvider;
import info.nightscout.androidaps.interfaces.CommandQueueProvider;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.plugins.aps.loop.LoopPlugin;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.configBuilder.ConstraintChecker;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobCalculatorPlugin;
import info.nightscout.androidaps.plugins.pump.insight.LocalInsightPlugin;
import info.nightscout.androidaps.plugins.treatments.CarbsGenerator;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.HardLimits;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActionStringHandler_Factory implements Factory<ActionStringHandler> {
  private final Provider<SP> spProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<Context> contextProvider;

  private final Provider<ConstraintChecker> constraintCheckerProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<LoopPlugin> loopPluginProvider;

  private final Provider<WearPlugin> wearPluginProvider;

  private final Provider<CommandQueueProvider> commandQueueProvider;

  private final Provider<ActivePluginProvider> activePluginProvider;

  private final Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider;

  private final Provider<LocalInsightPlugin> localInsightPluginProvider;

  private final Provider<DanaRPlugin> danaRPluginProvider;

  private final Provider<DanaRKoreanPlugin> danaRKoreanPluginProvider;

  private final Provider<DanaRv2Plugin> danaRv2PluginProvider;

  private final Provider<DanaRSPlugin> danaRSPluginProvider;

  private final Provider<DanaPump> danaPumpProvider;

  private final Provider<HardLimits> hardLimitsProvider;

  private final Provider<CarbsGenerator> carbsGeneratorProvider;

  private final Provider<DateUtil> dateUtilProvider;

  private final Provider<Config> configProvider;

  public ActionStringHandler_Factory(Provider<SP> spProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<ResourceHelper> resourceHelperProvider,
      Provider<HasAndroidInjector> injectorProvider, Provider<Context> contextProvider,
      Provider<ConstraintChecker> constraintCheckerProvider,
      Provider<ProfileFunction> profileFunctionProvider, Provider<LoopPlugin> loopPluginProvider,
      Provider<WearPlugin> wearPluginProvider, Provider<CommandQueueProvider> commandQueueProvider,
      Provider<ActivePluginProvider> activePluginProvider,
      Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider,
      Provider<LocalInsightPlugin> localInsightPluginProvider,
      Provider<DanaRPlugin> danaRPluginProvider,
      Provider<DanaRKoreanPlugin> danaRKoreanPluginProvider,
      Provider<DanaRv2Plugin> danaRv2PluginProvider, Provider<DanaRSPlugin> danaRSPluginProvider,
      Provider<DanaPump> danaPumpProvider, Provider<HardLimits> hardLimitsProvider,
      Provider<CarbsGenerator> carbsGeneratorProvider, Provider<DateUtil> dateUtilProvider,
      Provider<Config> configProvider) {
    this.spProvider = spProvider;
    this.rxBusProvider = rxBusProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.injectorProvider = injectorProvider;
    this.contextProvider = contextProvider;
    this.constraintCheckerProvider = constraintCheckerProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.loopPluginProvider = loopPluginProvider;
    this.wearPluginProvider = wearPluginProvider;
    this.commandQueueProvider = commandQueueProvider;
    this.activePluginProvider = activePluginProvider;
    this.iobCobCalculatorPluginProvider = iobCobCalculatorPluginProvider;
    this.localInsightPluginProvider = localInsightPluginProvider;
    this.danaRPluginProvider = danaRPluginProvider;
    this.danaRKoreanPluginProvider = danaRKoreanPluginProvider;
    this.danaRv2PluginProvider = danaRv2PluginProvider;
    this.danaRSPluginProvider = danaRSPluginProvider;
    this.danaPumpProvider = danaPumpProvider;
    this.hardLimitsProvider = hardLimitsProvider;
    this.carbsGeneratorProvider = carbsGeneratorProvider;
    this.dateUtilProvider = dateUtilProvider;
    this.configProvider = configProvider;
  }

  @Override
  public ActionStringHandler get() {
    return newInstance(spProvider.get(), rxBusProvider.get(), resourceHelperProvider.get(), injectorProvider.get(), contextProvider.get(), constraintCheckerProvider.get(), profileFunctionProvider.get(), loopPluginProvider.get(), wearPluginProvider.get(), commandQueueProvider.get(), activePluginProvider.get(), iobCobCalculatorPluginProvider.get(), localInsightPluginProvider.get(), danaRPluginProvider.get(), danaRKoreanPluginProvider.get(), danaRv2PluginProvider.get(), danaRSPluginProvider.get(), danaPumpProvider.get(), hardLimitsProvider.get(), carbsGeneratorProvider.get(), dateUtilProvider.get(), configProvider.get());
  }

  public static ActionStringHandler_Factory create(Provider<SP> spProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<HasAndroidInjector> injectorProvider, Provider<Context> contextProvider,
      Provider<ConstraintChecker> constraintCheckerProvider,
      Provider<ProfileFunction> profileFunctionProvider, Provider<LoopPlugin> loopPluginProvider,
      Provider<WearPlugin> wearPluginProvider, Provider<CommandQueueProvider> commandQueueProvider,
      Provider<ActivePluginProvider> activePluginProvider,
      Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider,
      Provider<LocalInsightPlugin> localInsightPluginProvider,
      Provider<DanaRPlugin> danaRPluginProvider,
      Provider<DanaRKoreanPlugin> danaRKoreanPluginProvider,
      Provider<DanaRv2Plugin> danaRv2PluginProvider, Provider<DanaRSPlugin> danaRSPluginProvider,
      Provider<DanaPump> danaPumpProvider, Provider<HardLimits> hardLimitsProvider,
      Provider<CarbsGenerator> carbsGeneratorProvider, Provider<DateUtil> dateUtilProvider,
      Provider<Config> configProvider) {
    return new ActionStringHandler_Factory(spProvider, rxBusProvider, resourceHelperProvider, injectorProvider, contextProvider, constraintCheckerProvider, profileFunctionProvider, loopPluginProvider, wearPluginProvider, commandQueueProvider, activePluginProvider, iobCobCalculatorPluginProvider, localInsightPluginProvider, danaRPluginProvider, danaRKoreanPluginProvider, danaRv2PluginProvider, danaRSPluginProvider, danaPumpProvider, hardLimitsProvider, carbsGeneratorProvider, dateUtilProvider, configProvider);
  }

  public static ActionStringHandler newInstance(SP sp, RxBusWrapper rxBus,
      ResourceHelper resourceHelper, HasAndroidInjector injector, Context context,
      ConstraintChecker constraintChecker, ProfileFunction profileFunction, LoopPlugin loopPlugin,
      WearPlugin wearPlugin, CommandQueueProvider commandQueue, ActivePluginProvider activePlugin,
      IobCobCalculatorPlugin iobCobCalculatorPlugin, LocalInsightPlugin localInsightPlugin,
      DanaRPlugin danaRPlugin, DanaRKoreanPlugin danaRKoreanPlugin, DanaRv2Plugin danaRv2Plugin,
      DanaRSPlugin danaRSPlugin, DanaPump danaPump, HardLimits hardLimits,
      CarbsGenerator carbsGenerator, DateUtil dateUtil, Config config) {
    return new ActionStringHandler(sp, rxBus, resourceHelper, injector, context, constraintChecker, profileFunction, loopPlugin, wearPlugin, commandQueue, activePlugin, iobCobCalculatorPlugin, localInsightPlugin, danaRPlugin, danaRKoreanPlugin, danaRv2Plugin, danaRSPlugin, danaPump, hardLimits, carbsGenerator, dateUtil, config);
  }
}
