// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.dependencyInjection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import info.nightscout.androidaps.skins.SkinButtonsOn;
import info.nightscout.androidaps.skins.SkinInterface;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SkinsModule_BindsSkinButtonsOnFactory implements Factory<SkinInterface> {
  private final SkinsModule module;

  private final Provider<SkinButtonsOn> skinButtonsOnProvider;

  public SkinsModule_BindsSkinButtonsOnFactory(SkinsModule module,
      Provider<SkinButtonsOn> skinButtonsOnProvider) {
    this.module = module;
    this.skinButtonsOnProvider = skinButtonsOnProvider;
  }

  @Override
  public SkinInterface get() {
    return bindsSkinButtonsOn(module, skinButtonsOnProvider.get());
  }

  public static SkinsModule_BindsSkinButtonsOnFactory create(SkinsModule module,
      Provider<SkinButtonsOn> skinButtonsOnProvider) {
    return new SkinsModule_BindsSkinButtonsOnFactory(module, skinButtonsOnProvider);
  }

  public static SkinInterface bindsSkinButtonsOn(SkinsModule instance,
      SkinButtonsOn skinButtonsOn) {
    return Preconditions.checkNotNullFromProvides(instance.bindsSkinButtonsOn(skinButtonsOn));
  }
}
