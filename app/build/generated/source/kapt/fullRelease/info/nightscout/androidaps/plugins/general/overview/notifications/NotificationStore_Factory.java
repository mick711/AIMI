// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.overview.notifications;

import android.content.Context;
import dagger.internal.Factory;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.services.AlarmSoundServiceHelper;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.resources.IconsProvider;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationStore_Factory implements Factory<NotificationStore> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<SP> spProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<Context> contextProvider;

  private final Provider<IconsProvider> iconsProvider;

  private final Provider<AlarmSoundServiceHelper> alarmSoundServiceHelperProvider;

  private final Provider<DateUtil> dateUtilProvider;

  public NotificationStore_Factory(Provider<AAPSLogger> aapsLoggerProvider, Provider<SP> spProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<Context> contextProvider, Provider<IconsProvider> iconsProvider,
      Provider<AlarmSoundServiceHelper> alarmSoundServiceHelperProvider,
      Provider<DateUtil> dateUtilProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.spProvider = spProvider;
    this.rxBusProvider = rxBusProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.contextProvider = contextProvider;
    this.iconsProvider = iconsProvider;
    this.alarmSoundServiceHelperProvider = alarmSoundServiceHelperProvider;
    this.dateUtilProvider = dateUtilProvider;
  }

  @Override
  public NotificationStore get() {
    return newInstance(aapsLoggerProvider.get(), spProvider.get(), rxBusProvider.get(), resourceHelperProvider.get(), contextProvider.get(), iconsProvider.get(), alarmSoundServiceHelperProvider.get(), dateUtilProvider.get());
  }

  public static NotificationStore_Factory create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<SP> spProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<Context> contextProvider,
      Provider<IconsProvider> iconsProvider,
      Provider<AlarmSoundServiceHelper> alarmSoundServiceHelperProvider,
      Provider<DateUtil> dateUtilProvider) {
    return new NotificationStore_Factory(aapsLoggerProvider, spProvider, rxBusProvider, resourceHelperProvider, contextProvider, iconsProvider, alarmSoundServiceHelperProvider, dateUtilProvider);
  }

  public static NotificationStore newInstance(AAPSLogger aapsLogger, SP sp, RxBusWrapper rxBus,
      ResourceHelper resourceHelper, Context context, IconsProvider iconsProvider,
      AlarmSoundServiceHelper alarmSoundServiceHelper, DateUtil dateUtil) {
    return new NotificationStore(aapsLogger, sp, rxBus, resourceHelper, context, iconsProvider, alarmSoundServiceHelper, dateUtil);
  }
}
