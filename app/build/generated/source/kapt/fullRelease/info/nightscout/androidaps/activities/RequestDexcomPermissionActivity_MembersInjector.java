// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.activities;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.plugins.source.DexcomPlugin;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RequestDexcomPermissionActivity_MembersInjector implements MembersInjector<RequestDexcomPermissionActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<DexcomPlugin> dexcomPluginProvider;

  public RequestDexcomPermissionActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<DexcomPlugin> dexcomPluginProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.dexcomPluginProvider = dexcomPluginProvider;
  }

  public static MembersInjector<RequestDexcomPermissionActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<DexcomPlugin> dexcomPluginProvider) {
    return new RequestDexcomPermissionActivity_MembersInjector(androidInjectorProvider, dexcomPluginProvider);
  }

  @Override
  public void injectMembers(RequestDexcomPermissionActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectDexcomPlugin(instance, dexcomPluginProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.RequestDexcomPermissionActivity.dexcomPlugin")
  public static void injectDexcomPlugin(RequestDexcomPermissionActivity instance,
      DexcomPlugin dexcomPlugin) {
    instance.dexcomPlugin = dexcomPlugin;
  }
}
