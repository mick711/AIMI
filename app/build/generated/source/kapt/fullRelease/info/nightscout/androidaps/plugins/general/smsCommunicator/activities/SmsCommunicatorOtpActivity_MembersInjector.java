// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.smsCommunicator.activities;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.activities.DaggerAppCompatActivityWithResult_MembersInjector;
import info.nightscout.androidaps.interfaces.ImportExportPrefsInterface;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorPlugin;
import info.nightscout.androidaps.plugins.general.smsCommunicator.otp.OneTimePassword;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.resources.ResourceHelperImplementation;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SmsCommunicatorOtpActivity_MembersInjector implements MembersInjector<SmsCommunicatorOtpActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ResourceHelperImplementation> resourceHelperProvider;

  private final Provider<ImportExportPrefsInterface> importExportPrefsProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<SmsCommunicatorPlugin> smsCommunicatorPluginProvider;

  private final Provider<OneTimePassword> otpProvider;

  public SmsCommunicatorOtpActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ResourceHelperImplementation> resourceHelperProvider,
      Provider<ImportExportPrefsInterface> importExportPrefsProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<SmsCommunicatorPlugin> smsCommunicatorPluginProvider,
      Provider<OneTimePassword> otpProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.importExportPrefsProvider = importExportPrefsProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
    this.rxBusProvider = rxBusProvider;
    this.smsCommunicatorPluginProvider = smsCommunicatorPluginProvider;
    this.otpProvider = otpProvider;
  }

  public static MembersInjector<SmsCommunicatorOtpActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ResourceHelperImplementation> resourceHelperProvider,
      Provider<ImportExportPrefsInterface> importExportPrefsProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<SmsCommunicatorPlugin> smsCommunicatorPluginProvider,
      Provider<OneTimePassword> otpProvider) {
    return new SmsCommunicatorOtpActivity_MembersInjector(androidInjectorProvider, resourceHelperProvider, importExportPrefsProvider, fabricPrivacyProvider, rxBusProvider, smsCommunicatorPluginProvider, otpProvider);
  }

  @Override
  public void injectMembers(SmsCommunicatorOtpActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperProvider.get());
    DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, importExportPrefsProvider.get());
    injectFabricPrivacy(instance, fabricPrivacyProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectSmsCommunicatorPlugin(instance, smsCommunicatorPluginProvider.get());
    injectOtp(instance, otpProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.smsCommunicator.activities.SmsCommunicatorOtpActivity.fabricPrivacy")
  public static void injectFabricPrivacy(SmsCommunicatorOtpActivity instance,
      FabricPrivacy fabricPrivacy) {
    instance.fabricPrivacy = fabricPrivacy;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.smsCommunicator.activities.SmsCommunicatorOtpActivity.rxBus")
  public static void injectRxBus(SmsCommunicatorOtpActivity instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.smsCommunicator.activities.SmsCommunicatorOtpActivity.smsCommunicatorPlugin")
  public static void injectSmsCommunicatorPlugin(SmsCommunicatorOtpActivity instance,
      SmsCommunicatorPlugin smsCommunicatorPlugin) {
    instance.smsCommunicatorPlugin = smsCommunicatorPlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.smsCommunicator.activities.SmsCommunicatorOtpActivity.otp")
  public static void injectOtp(SmsCommunicatorOtpActivity instance, OneTimePassword otp) {
    instance.otp = otp;
  }
}
