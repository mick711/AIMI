// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.queue.commands;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.interfaces.ActivePluginProvider;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CommandTempBasalAbsolute_MembersInjector implements MembersInjector<CommandTempBasalAbsolute> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<ActivePluginProvider> activePluginProvider;

  public CommandTempBasalAbsolute_MembersInjector(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<ResourceHelper> resourceHelperProvider,
      Provider<ActivePluginProvider> activePluginProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.activePluginProvider = activePluginProvider;
  }

  public static MembersInjector<CommandTempBasalAbsolute> create(
      Provider<AAPSLogger> aapsLoggerProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<ActivePluginProvider> activePluginProvider) {
    return new CommandTempBasalAbsolute_MembersInjector(aapsLoggerProvider, resourceHelperProvider, activePluginProvider);
  }

  @Override
  public void injectMembers(CommandTempBasalAbsolute instance) {
    Command_MembersInjector.injectAapsLogger(instance, aapsLoggerProvider.get());
    Command_MembersInjector.injectResourceHelper(instance, resourceHelperProvider.get());
    injectActivePlugin(instance, activePluginProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.queue.commands.CommandTempBasalAbsolute.activePlugin")
  public static void injectActivePlugin(CommandTempBasalAbsolute instance,
      ActivePluginProvider activePlugin) {
    instance.activePlugin = activePlugin;
  }
}
