// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.db;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.general.openhumans.OpenHumansUploader;
import info.nightscout.androidaps.plugins.pump.virtual.VirtualPumpPlugin;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseHelper_MembersInjector implements MembersInjector<DatabaseHelper> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<VirtualPumpPlugin> virtualPumpPluginProvider;

  private final Provider<OpenHumansUploader> openHumansUploaderProvider;

  public DatabaseHelper_MembersInjector(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<VirtualPumpPlugin> virtualPumpPluginProvider,
      Provider<OpenHumansUploader> openHumansUploaderProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.rxBusProvider = rxBusProvider;
    this.virtualPumpPluginProvider = virtualPumpPluginProvider;
    this.openHumansUploaderProvider = openHumansUploaderProvider;
  }

  public static MembersInjector<DatabaseHelper> create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<VirtualPumpPlugin> virtualPumpPluginProvider,
      Provider<OpenHumansUploader> openHumansUploaderProvider) {
    return new DatabaseHelper_MembersInjector(aapsLoggerProvider, rxBusProvider, virtualPumpPluginProvider, openHumansUploaderProvider);
  }

  @Override
  public void injectMembers(DatabaseHelper instance) {
    injectAapsLogger(instance, aapsLoggerProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectVirtualPumpPlugin(instance, virtualPumpPluginProvider.get());
    injectOpenHumansUploader(instance, openHumansUploaderProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.db.DatabaseHelper.aapsLogger")
  public static void injectAapsLogger(DatabaseHelper instance, AAPSLogger aapsLogger) {
    instance.aapsLogger = aapsLogger;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.db.DatabaseHelper.rxBus")
  public static void injectRxBus(DatabaseHelper instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.db.DatabaseHelper.virtualPumpPlugin")
  public static void injectVirtualPumpPlugin(DatabaseHelper instance,
      VirtualPumpPlugin virtualPumpPlugin) {
    instance.virtualPumpPlugin = virtualPumpPlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.db.DatabaseHelper.openHumansUploader")
  public static void injectOpenHumansUploader(DatabaseHelper instance,
      OpenHumansUploader openHumansUploader) {
    instance.openHumansUploader = openHumansUploader;
  }
}
