// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.dialogs;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.HasAndroidInjector;
import dagger.android.support.DaggerDialogFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.MainApp;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.general.nsclient.NSUpload;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.Translator;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CareDialog_MembersInjector implements MembersInjector<CareDialog> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<SP> spProvider;

  private final Provider<DateUtil> dateUtilProvider;

  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<MainApp> mainAppProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<NSUpload> nsUploadProvider;

  private final Provider<Translator> translatorProvider;

  public CareDialog_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<SP> spProvider,
      Provider<DateUtil> dateUtilProvider, Provider<HasAndroidInjector> injectorProvider,
      Provider<MainApp> mainAppProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<ProfileFunction> profileFunctionProvider, Provider<NSUpload> nsUploadProvider,
      Provider<Translator> translatorProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.spProvider = spProvider;
    this.dateUtilProvider = dateUtilProvider;
    this.injectorProvider = injectorProvider;
    this.mainAppProvider = mainAppProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.nsUploadProvider = nsUploadProvider;
    this.translatorProvider = translatorProvider;
  }

  public static MembersInjector<CareDialog> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<SP> spProvider,
      Provider<DateUtil> dateUtilProvider, Provider<HasAndroidInjector> injectorProvider,
      Provider<MainApp> mainAppProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<ProfileFunction> profileFunctionProvider, Provider<NSUpload> nsUploadProvider,
      Provider<Translator> translatorProvider) {
    return new CareDialog_MembersInjector(androidInjectorProvider, aapsLoggerProvider, spProvider, dateUtilProvider, injectorProvider, mainAppProvider, resourceHelperProvider, profileFunctionProvider, nsUploadProvider, translatorProvider);
  }

  @Override
  public void injectMembers(CareDialog instance) {
    DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, aapsLoggerProvider.get());
    DialogFragmentWithDate_MembersInjector.injectSp(instance, spProvider.get());
    DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, dateUtilProvider.get());
    injectInjector(instance, injectorProvider.get());
    injectMainApp(instance, mainAppProvider.get());
    injectResourceHelper(instance, resourceHelperProvider.get());
    injectProfileFunction(instance, profileFunctionProvider.get());
    injectNsUpload(instance, nsUploadProvider.get());
    injectTranslator(instance, translatorProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.dialogs.CareDialog.injector")
  public static void injectInjector(CareDialog instance, HasAndroidInjector injector) {
    instance.injector = injector;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.dialogs.CareDialog.mainApp")
  public static void injectMainApp(CareDialog instance, MainApp mainApp) {
    instance.mainApp = mainApp;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.dialogs.CareDialog.resourceHelper")
  public static void injectResourceHelper(CareDialog instance, ResourceHelper resourceHelper) {
    instance.resourceHelper = resourceHelper;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.dialogs.CareDialog.profileFunction")
  public static void injectProfileFunction(CareDialog instance, ProfileFunction profileFunction) {
    instance.profileFunction = profileFunction;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.dialogs.CareDialog.nsUpload")
  public static void injectNsUpload(CareDialog instance, NSUpload nsUpload) {
    instance.nsUpload = nsUpload;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.dialogs.CareDialog.translator")
  public static void injectTranslator(CareDialog instance, Translator translator) {
    instance.translator = translator;
  }
}
