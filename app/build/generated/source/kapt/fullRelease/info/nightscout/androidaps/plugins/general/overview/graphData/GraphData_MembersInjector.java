// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.overview.graphData;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.interfaces.ActivePluginProvider;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GraphData_MembersInjector implements MembersInjector<GraphData> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<ActivePluginProvider> activePluginProvider;

  public GraphData_MembersInjector(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<ResourceHelper> resourceHelperProvider,
      Provider<ActivePluginProvider> activePluginProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.activePluginProvider = activePluginProvider;
  }

  public static MembersInjector<GraphData> create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<ResourceHelper> resourceHelperProvider,
      Provider<ActivePluginProvider> activePluginProvider) {
    return new GraphData_MembersInjector(aapsLoggerProvider, profileFunctionProvider, resourceHelperProvider, activePluginProvider);
  }

  @Override
  public void injectMembers(GraphData instance) {
    injectAapsLogger(instance, aapsLoggerProvider.get());
    injectProfileFunction(instance, profileFunctionProvider.get());
    injectResourceHelper(instance, resourceHelperProvider.get());
    injectActivePlugin(instance, activePluginProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.overview.graphData.GraphData.aapsLogger")
  public static void injectAapsLogger(GraphData instance, AAPSLogger aapsLogger) {
    instance.aapsLogger = aapsLogger;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.overview.graphData.GraphData.profileFunction")
  public static void injectProfileFunction(GraphData instance, ProfileFunction profileFunction) {
    instance.profileFunction = profileFunction;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.overview.graphData.GraphData.resourceHelper")
  public static void injectResourceHelper(GraphData instance, ResourceHelper resourceHelper) {
    instance.resourceHelper = resourceHelper;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.overview.graphData.GraphData.activePlugin")
  public static void injectActivePlugin(GraphData instance, ActivePluginProvider activePlugin) {
    instance.activePlugin = activePlugin;
  }
}
