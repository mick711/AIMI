// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.utils.wizard;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.aps.loop.LoopPlugin;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobCalculatorPlugin;
import info.nightscout.androidaps.plugins.treatments.TreatmentsPlugin;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class QuickWizardEntry_MembersInjector implements MembersInjector<QuickWizardEntry> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<SP> spProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<TreatmentsPlugin> treatmentsPluginProvider;

  private final Provider<LoopPlugin> loopPluginProvider;

  private final Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider;

  public QuickWizardEntry_MembersInjector(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<SP> spProvider, Provider<ProfileFunction> profileFunctionProvider,
      Provider<TreatmentsPlugin> treatmentsPluginProvider, Provider<LoopPlugin> loopPluginProvider,
      Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.spProvider = spProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.treatmentsPluginProvider = treatmentsPluginProvider;
    this.loopPluginProvider = loopPluginProvider;
    this.iobCobCalculatorPluginProvider = iobCobCalculatorPluginProvider;
  }

  public static MembersInjector<QuickWizardEntry> create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<SP> spProvider, Provider<ProfileFunction> profileFunctionProvider,
      Provider<TreatmentsPlugin> treatmentsPluginProvider, Provider<LoopPlugin> loopPluginProvider,
      Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider) {
    return new QuickWizardEntry_MembersInjector(aapsLoggerProvider, spProvider, profileFunctionProvider, treatmentsPluginProvider, loopPluginProvider, iobCobCalculatorPluginProvider);
  }

  @Override
  public void injectMembers(QuickWizardEntry instance) {
    injectAapsLogger(instance, aapsLoggerProvider.get());
    injectSp(instance, spProvider.get());
    injectProfileFunction(instance, profileFunctionProvider.get());
    injectTreatmentsPlugin(instance, treatmentsPluginProvider.get());
    injectLoopPlugin(instance, loopPluginProvider.get());
    injectIobCobCalculatorPlugin(instance, iobCobCalculatorPluginProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.utils.wizard.QuickWizardEntry.aapsLogger")
  public static void injectAapsLogger(QuickWizardEntry instance, AAPSLogger aapsLogger) {
    instance.aapsLogger = aapsLogger;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.utils.wizard.QuickWizardEntry.sp")
  public static void injectSp(QuickWizardEntry instance, SP sp) {
    instance.sp = sp;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.utils.wizard.QuickWizardEntry.profileFunction")
  public static void injectProfileFunction(QuickWizardEntry instance,
      ProfileFunction profileFunction) {
    instance.profileFunction = profileFunction;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.utils.wizard.QuickWizardEntry.treatmentsPlugin")
  public static void injectTreatmentsPlugin(QuickWizardEntry instance,
      TreatmentsPlugin treatmentsPlugin) {
    instance.treatmentsPlugin = treatmentsPlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.utils.wizard.QuickWizardEntry.loopPlugin")
  public static void injectLoopPlugin(QuickWizardEntry instance, LoopPlugin loopPlugin) {
    instance.loopPlugin = loopPlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.utils.wizard.QuickWizardEntry.iobCobCalculatorPlugin")
  public static void injectIobCobCalculatorPlugin(QuickWizardEntry instance,
      IobCobCalculatorPlugin iobCobCalculatorPlugin) {
    instance.iobCobCalculatorPlugin = iobCobCalculatorPlugin;
  }
}
