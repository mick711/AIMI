// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.activities;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.interfaces.ImportExportPrefsInterface;
import info.nightscout.androidaps.plugins.configBuilder.PluginStore;
import info.nightscout.androidaps.utils.protection.ProtectionCheck;
import info.nightscout.androidaps.utils.resources.ResourceHelperImplementation;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SingleFragmentActivity_MembersInjector implements MembersInjector<SingleFragmentActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ResourceHelperImplementation> resourceHelperProvider;

  private final Provider<ImportExportPrefsInterface> importExportPrefsProvider;

  private final Provider<PluginStore> pluginStoreProvider;

  private final Provider<ProtectionCheck> protectionCheckProvider;

  public SingleFragmentActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ResourceHelperImplementation> resourceHelperProvider,
      Provider<ImportExportPrefsInterface> importExportPrefsProvider,
      Provider<PluginStore> pluginStoreProvider,
      Provider<ProtectionCheck> protectionCheckProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.importExportPrefsProvider = importExportPrefsProvider;
    this.pluginStoreProvider = pluginStoreProvider;
    this.protectionCheckProvider = protectionCheckProvider;
  }

  public static MembersInjector<SingleFragmentActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ResourceHelperImplementation> resourceHelperProvider,
      Provider<ImportExportPrefsInterface> importExportPrefsProvider,
      Provider<PluginStore> pluginStoreProvider,
      Provider<ProtectionCheck> protectionCheckProvider) {
    return new SingleFragmentActivity_MembersInjector(androidInjectorProvider, resourceHelperProvider, importExportPrefsProvider, pluginStoreProvider, protectionCheckProvider);
  }

  @Override
  public void injectMembers(SingleFragmentActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperProvider.get());
    DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, importExportPrefsProvider.get());
    injectPluginStore(instance, pluginStoreProvider.get());
    injectProtectionCheck(instance, protectionCheckProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.SingleFragmentActivity.pluginStore")
  public static void injectPluginStore(SingleFragmentActivity instance, PluginStore pluginStore) {
    instance.pluginStore = pluginStore;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.SingleFragmentActivity.protectionCheck")
  public static void injectProtectionCheck(SingleFragmentActivity instance,
      ProtectionCheck protectionCheck) {
    instance.protectionCheck = protectionCheck;
  }
}
