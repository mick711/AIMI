// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.overview;

import dagger.internal.Factory;
import info.nightscout.androidaps.Config;
import info.nightscout.androidaps.interfaces.ActivePluginProvider;
import info.nightscout.androidaps.utils.WarnColors;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StatusLightHandler_Factory implements Factory<StatusLightHandler> {
  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<SP> spProvider;

  private final Provider<ActivePluginProvider> activePluginProvider;

  private final Provider<WarnColors> warnColorsProvider;

  private final Provider<Config> configProvider;

  public StatusLightHandler_Factory(Provider<ResourceHelper> resourceHelperProvider,
      Provider<SP> spProvider, Provider<ActivePluginProvider> activePluginProvider,
      Provider<WarnColors> warnColorsProvider, Provider<Config> configProvider) {
    this.resourceHelperProvider = resourceHelperProvider;
    this.spProvider = spProvider;
    this.activePluginProvider = activePluginProvider;
    this.warnColorsProvider = warnColorsProvider;
    this.configProvider = configProvider;
  }

  @Override
  public StatusLightHandler get() {
    return newInstance(resourceHelperProvider.get(), spProvider.get(), activePluginProvider.get(), warnColorsProvider.get(), configProvider.get());
  }

  public static StatusLightHandler_Factory create(Provider<ResourceHelper> resourceHelperProvider,
      Provider<SP> spProvider, Provider<ActivePluginProvider> activePluginProvider,
      Provider<WarnColors> warnColorsProvider, Provider<Config> configProvider) {
    return new StatusLightHandler_Factory(resourceHelperProvider, spProvider, activePluginProvider, warnColorsProvider, configProvider);
  }

  public static StatusLightHandler newInstance(ResourceHelper resourceHelper, SP sp,
      ActivePluginProvider activePlugin, WarnColors warnColors, Config config) {
    return new StatusLightHandler(resourceHelper, sp, activePlugin, warnColors, config);
  }
}
