// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.utils;

import android.content.Context;
import dagger.internal.Factory;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class XdripCalibrations_Factory implements Factory<XdripCalibrations> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<Context> contextProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  public XdripCalibrations_Factory(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<Context> contextProvider,
      Provider<ProfileFunction> profileFunctionProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.contextProvider = contextProvider;
    this.profileFunctionProvider = profileFunctionProvider;
  }

  @Override
  public XdripCalibrations get() {
    return newInstance(aapsLoggerProvider.get(), resourceHelperProvider.get(), contextProvider.get(), profileFunctionProvider.get());
  }

  public static XdripCalibrations_Factory create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<Context> contextProvider,
      Provider<ProfileFunction> profileFunctionProvider) {
    return new XdripCalibrations_Factory(aapsLoggerProvider, resourceHelperProvider, contextProvider, profileFunctionProvider);
  }

  public static XdripCalibrations newInstance(AAPSLogger aapsLogger, ResourceHelper resourceHelper,
      Context context, ProfileFunction profileFunction) {
    return new XdripCalibrations(aapsLogger, resourceHelper, context, profileFunction);
  }
}
