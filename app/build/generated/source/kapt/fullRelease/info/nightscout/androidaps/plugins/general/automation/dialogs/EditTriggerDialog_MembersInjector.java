// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.automation.dialogs;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerDialogFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.MainApp;
import info.nightscout.androidaps.dialogs.DialogFragmentWithDate_MembersInjector;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EditTriggerDialog_MembersInjector implements MembersInjector<EditTriggerDialog> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<SP> spProvider;

  private final Provider<DateUtil> dateUtilProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<MainApp> mainAppProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  public EditTriggerDialog_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<SP> spProvider,
      Provider<DateUtil> dateUtilProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<MainApp> mainAppProvider, Provider<FabricPrivacy> fabricPrivacyProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.spProvider = spProvider;
    this.dateUtilProvider = dateUtilProvider;
    this.rxBusProvider = rxBusProvider;
    this.mainAppProvider = mainAppProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
  }

  public static MembersInjector<EditTriggerDialog> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<SP> spProvider,
      Provider<DateUtil> dateUtilProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<MainApp> mainAppProvider, Provider<FabricPrivacy> fabricPrivacyProvider) {
    return new EditTriggerDialog_MembersInjector(androidInjectorProvider, aapsLoggerProvider, spProvider, dateUtilProvider, rxBusProvider, mainAppProvider, fabricPrivacyProvider);
  }

  @Override
  public void injectMembers(EditTriggerDialog instance) {
    DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, aapsLoggerProvider.get());
    DialogFragmentWithDate_MembersInjector.injectSp(instance, spProvider.get());
    DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, dateUtilProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectMainApp(instance, mainAppProvider.get());
    injectFabricPrivacy(instance, fabricPrivacyProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.automation.dialogs.EditTriggerDialog.rxBus")
  public static void injectRxBus(EditTriggerDialog instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.automation.dialogs.EditTriggerDialog.mainApp")
  public static void injectMainApp(EditTriggerDialog instance, MainApp mainApp) {
    instance.mainApp = mainApp;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.automation.dialogs.EditTriggerDialog.fabricPrivacy")
  public static void injectFabricPrivacy(EditTriggerDialog instance, FabricPrivacy fabricPrivacy) {
    instance.fabricPrivacy = fabricPrivacy;
  }
}
