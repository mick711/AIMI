// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.persistentNotification;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.androidNotification.NotificationHolder;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DummyService_MembersInjector implements MembersInjector<DummyService> {
  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  private final Provider<NotificationHolder> notificationHolderProvider;

  public DummyService_MembersInjector(Provider<RxBusWrapper> rxBusProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<NotificationHolder> notificationHolderProvider) {
    this.rxBusProvider = rxBusProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
    this.notificationHolderProvider = notificationHolderProvider;
  }

  public static MembersInjector<DummyService> create(Provider<RxBusWrapper> rxBusProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<NotificationHolder> notificationHolderProvider) {
    return new DummyService_MembersInjector(rxBusProvider, aapsLoggerProvider, fabricPrivacyProvider, notificationHolderProvider);
  }

  @Override
  public void injectMembers(DummyService instance) {
    injectRxBus(instance, rxBusProvider.get());
    injectAapsLogger(instance, aapsLoggerProvider.get());
    injectFabricPrivacy(instance, fabricPrivacyProvider.get());
    injectNotificationHolder(instance, notificationHolderProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.persistentNotification.DummyService.rxBus")
  public static void injectRxBus(DummyService instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.persistentNotification.DummyService.aapsLogger")
  public static void injectAapsLogger(DummyService instance, AAPSLogger aapsLogger) {
    instance.aapsLogger = aapsLogger;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.persistentNotification.DummyService.fabricPrivacy")
  public static void injectFabricPrivacy(DummyService instance, FabricPrivacy fabricPrivacy) {
    instance.fabricPrivacy = fabricPrivacy;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.persistentNotification.DummyService.notificationHolder")
  public static void injectNotificationHolder(DummyService instance,
      NotificationHolder notificationHolder) {
    instance.notificationHolder = notificationHolder;
  }
}
