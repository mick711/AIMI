// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.constraints.objectives.objectives;

import dagger.android.HasAndroidInjector;
import dagger.internal.Factory;
import info.nightscout.androidaps.plugins.general.actions.ActionsPlugin;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Objective1_Factory implements Factory<Objective1> {
  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<SP> spProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<SP> spProvider2;

  private final Provider<ActionsPlugin> actionsPluginProvider;

  public Objective1_Factory(Provider<HasAndroidInjector> injectorProvider, Provider<SP> spProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<SP> spProvider2,
      Provider<ActionsPlugin> actionsPluginProvider) {
    this.injectorProvider = injectorProvider;
    this.spProvider = spProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.spProvider2 = spProvider2;
    this.actionsPluginProvider = actionsPluginProvider;
  }

  @Override
  public Objective1 get() {
    Objective1 instance = newInstance(injectorProvider.get());
    Objective_MembersInjector.injectSp(instance, spProvider.get());
    Objective_MembersInjector.injectResourceHelper(instance, resourceHelperProvider.get());
    Objective1_MembersInjector.injectSp(instance, spProvider2.get());
    Objective1_MembersInjector.injectActionsPlugin(instance, actionsPluginProvider.get());
    return instance;
  }

  public static Objective1_Factory create(Provider<HasAndroidInjector> injectorProvider,
      Provider<SP> spProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<SP> spProvider2, Provider<ActionsPlugin> actionsPluginProvider) {
    return new Objective1_Factory(injectorProvider, spProvider, resourceHelperProvider, spProvider2, actionsPluginProvider);
  }

  public static Objective1 newInstance(HasAndroidInjector injector) {
    return new Objective1(injector);
  }
}
