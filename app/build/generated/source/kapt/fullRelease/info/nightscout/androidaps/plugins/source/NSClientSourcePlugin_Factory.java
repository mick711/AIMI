// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.source;

import dagger.android.HasAndroidInjector;
import dagger.internal.Factory;
import info.nightscout.androidaps.Config;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NSClientSourcePlugin_Factory implements Factory<NSClientSourcePlugin> {
  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<SP> spProvider;

  private final Provider<Config> configProvider;

  public NSClientSourcePlugin_Factory(Provider<HasAndroidInjector> injectorProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<AAPSLogger> aapsLoggerProvider,
      Provider<SP> spProvider, Provider<Config> configProvider) {
    this.injectorProvider = injectorProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.spProvider = spProvider;
    this.configProvider = configProvider;
  }

  @Override
  public NSClientSourcePlugin get() {
    return newInstance(injectorProvider.get(), resourceHelperProvider.get(), aapsLoggerProvider.get(), spProvider.get(), configProvider.get());
  }

  public static NSClientSourcePlugin_Factory create(Provider<HasAndroidInjector> injectorProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<AAPSLogger> aapsLoggerProvider,
      Provider<SP> spProvider, Provider<Config> configProvider) {
    return new NSClientSourcePlugin_Factory(injectorProvider, resourceHelperProvider, aapsLoggerProvider, spProvider, configProvider);
  }

  public static NSClientSourcePlugin newInstance(HasAndroidInjector injector,
      ResourceHelper resourceHelper, AAPSLogger aapsLogger, SP sp, Config config) {
    return new NSClientSourcePlugin(injector, resourceHelper, aapsLogger, sp, config);
  }
}
