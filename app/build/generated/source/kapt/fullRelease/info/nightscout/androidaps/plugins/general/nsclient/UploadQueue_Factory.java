// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.nsclient;

import android.content.Context;
import dagger.internal.Factory;
import info.nightscout.androidaps.interfaces.DatabaseHelperInterface;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UploadQueue_Factory implements Factory<UploadQueue> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<DatabaseHelperInterface> databaseHelperProvider;

  private final Provider<Context> contextProvider;

  private final Provider<SP> spProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  public UploadQueue_Factory(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<DatabaseHelperInterface> databaseHelperProvider, Provider<Context> contextProvider,
      Provider<SP> spProvider, Provider<RxBusWrapper> rxBusProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.databaseHelperProvider = databaseHelperProvider;
    this.contextProvider = contextProvider;
    this.spProvider = spProvider;
    this.rxBusProvider = rxBusProvider;
  }

  @Override
  public UploadQueue get() {
    return newInstance(aapsLoggerProvider.get(), databaseHelperProvider.get(), contextProvider.get(), spProvider.get(), rxBusProvider.get());
  }

  public static UploadQueue_Factory create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<DatabaseHelperInterface> databaseHelperProvider, Provider<Context> contextProvider,
      Provider<SP> spProvider, Provider<RxBusWrapper> rxBusProvider) {
    return new UploadQueue_Factory(aapsLoggerProvider, databaseHelperProvider, contextProvider, spProvider, rxBusProvider);
  }

  public static UploadQueue newInstance(AAPSLogger aapsLogger,
      DatabaseHelperInterface databaseHelper, Context context, SP sp, RxBusWrapper rxBus) {
    return new UploadQueue(aapsLogger, databaseHelper, context, sp, rxBus);
  }
}
