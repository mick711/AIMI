// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.dependencyInjection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import info.nightscout.androidaps.skins.SkinClassic;
import info.nightscout.androidaps.skins.SkinInterface;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SkinsModule_BindsSkinClassicFactory implements Factory<SkinInterface> {
  private final SkinsModule module;

  private final Provider<SkinClassic> skinClassicProvider;

  public SkinsModule_BindsSkinClassicFactory(SkinsModule module,
      Provider<SkinClassic> skinClassicProvider) {
    this.module = module;
    this.skinClassicProvider = skinClassicProvider;
  }

  @Override
  public SkinInterface get() {
    return bindsSkinClassic(module, skinClassicProvider.get());
  }

  public static SkinsModule_BindsSkinClassicFactory create(SkinsModule module,
      Provider<SkinClassic> skinClassicProvider) {
    return new SkinsModule_BindsSkinClassicFactory(module, skinClassicProvider);
  }

  public static SkinInterface bindsSkinClassic(SkinsModule instance, SkinClassic skinClassic) {
    return Preconditions.checkNotNullFromProvides(instance.bindsSkinClassic(skinClassic));
  }
}
