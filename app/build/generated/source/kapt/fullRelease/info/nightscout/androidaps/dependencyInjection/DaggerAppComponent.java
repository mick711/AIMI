// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.dependencyInjection;

import androidx.lifecycle.ViewModel;
import androidx.lifecycle.ViewModelProvider;
import com.google.common.collect.ImmutableMap;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import dagger.android.AndroidInjector;
import dagger.android.DaggerApplication_MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.DispatchingAndroidInjector_Factory;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.android.support.DaggerDialogFragment_MembersInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.DelegateFactory;
import dagger.internal.DoubleCheck;
import dagger.internal.InstanceFactory;
import dagger.internal.MapFactory;
import dagger.internal.Preconditions;
import info.nightscout.androidaps.Config;
import info.nightscout.androidaps.Config_Factory;
import info.nightscout.androidaps.MainActivity;
import info.nightscout.androidaps.MainActivity_MembersInjector;
import info.nightscout.androidaps.MainApp;
import info.nightscout.androidaps.MainApp_MembersInjector;
import info.nightscout.androidaps.activities.BolusProgressHelperActivity;
import info.nightscout.androidaps.activities.DaggerAppCompatActivityWithResult_MembersInjector;
import info.nightscout.androidaps.activities.ErrorHelperActivity;
import info.nightscout.androidaps.activities.ErrorHelperActivity_MembersInjector;
import info.nightscout.androidaps.activities.MyPreferenceFragment;
import info.nightscout.androidaps.activities.MyPreferenceFragment_MembersInjector;
import info.nightscout.androidaps.activities.PreferencesActivity;
import info.nightscout.androidaps.activities.ProfileHelperActivity;
import info.nightscout.androidaps.activities.ProfileHelperActivity_MembersInjector;
import info.nightscout.androidaps.activities.RequestDexcomPermissionActivity;
import info.nightscout.androidaps.activities.RequestDexcomPermissionActivity_MembersInjector;
import info.nightscout.androidaps.activities.SingleFragmentActivity;
import info.nightscout.androidaps.activities.SingleFragmentActivity_MembersInjector;
import info.nightscout.androidaps.activities.StatsActivity;
import info.nightscout.androidaps.activities.StatsActivity_MembersInjector;
import info.nightscout.androidaps.activities.SurveyActivity;
import info.nightscout.androidaps.activities.SurveyActivity_MembersInjector;
import info.nightscout.androidaps.activities.TDDStatsActivity;
import info.nightscout.androidaps.activities.TDDStatsActivity_MembersInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_ApsResultInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_AutosensDataInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_BgReadingInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_CareportalEventInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_ExtendedBolusInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_ProfileInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_ProfileStoreInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_ProfileSwitchInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_PumpEnactResultInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_TemporaryBasalInjector;
import info.nightscout.androidaps.core.di.CoreDataClassesModule_TreatmentInjector;
import info.nightscout.androidaps.core.di.CoreFragmentsModule_ContributeBolusProgressHelperActivity;
import info.nightscout.androidaps.core.di.CoreFragmentsModule_ContributeErrorHelperActivity;
import info.nightscout.androidaps.core.di.CoreFragmentsModule_ContributesBolusProgressDialog;
import info.nightscout.androidaps.core.di.CoreFragmentsModule_ContributesErrorDialog;
import info.nightscout.androidaps.core.di.CoreFragmentsModule_ContributesNtpProgressDialog;
import info.nightscout.androidaps.core.di.CoreFragmentsModule_ContributesPrefImportListActivity;
import info.nightscout.androidaps.core.di.CoreFragmentsModule_ContributesProfileViewerDialog;
import info.nightscout.androidaps.core.di.CoreFragmentsModule_ContributesTDDStatsActivity;
import info.nightscout.androidaps.core.di.CoreModule;
import info.nightscout.androidaps.core.di.CoreModule_ProvideAAPSLoggerFactory;
import info.nightscout.androidaps.core.di.CoreModule_ProvideProfileFunctionFactory;
import info.nightscout.androidaps.core.di.CoreModule_ProvideResourcesFactory;
import info.nightscout.androidaps.core.di.CoreModule_ProvideSharedPreferencesFactory;
import info.nightscout.androidaps.core.di.CoreReceiversModule_ContributesNetworkChangeReceiver;
import info.nightscout.androidaps.dana.DanaFragment;
import info.nightscout.androidaps.dana.DanaFragment_MembersInjector;
import info.nightscout.androidaps.dana.DanaPump;
import info.nightscout.androidaps.dana.DanaPump_Factory;
import info.nightscout.androidaps.dana.activities.DanaHistoryActivity;
import info.nightscout.androidaps.dana.activities.DanaHistoryActivity_MembersInjector;
import info.nightscout.androidaps.dana.activities.DanaUserOptionsActivity;
import info.nightscout.androidaps.dana.activities.DanaUserOptionsActivity_MembersInjector;
import info.nightscout.androidaps.dana.di.DanaModule_ContributeDanaRHistoryActivity;
import info.nightscout.androidaps.dana.di.DanaModule_ContributeDanaRUserOptionsActivity;
import info.nightscout.androidaps.dana.di.DanaModule_ContributesDanaRFragment;
import info.nightscout.androidaps.danaRKorean.DanaRKoreanPlugin;
import info.nightscout.androidaps.danaRKorean.DanaRKoreanPlugin_Factory;
import info.nightscout.androidaps.danaRKorean.comm.MessageHashTableRKorean;
import info.nightscout.androidaps.danaRKorean.comm.MessageHashTableRKorean_Factory;
import info.nightscout.androidaps.danaRKorean.comm.MsgCheckValue_k;
import info.nightscout.androidaps.danaRKorean.comm.MsgInitConnStatusBasic_k;
import info.nightscout.androidaps.danaRKorean.comm.MsgInitConnStatusBolus_k;
import info.nightscout.androidaps.danaRKorean.comm.MsgInitConnStatusTime_k;
import info.nightscout.androidaps.danaRKorean.comm.MsgSettingBasalProfileAll_k;
import info.nightscout.androidaps.danaRKorean.comm.MsgSettingBasal_k;
import info.nightscout.androidaps.danaRKorean.comm.MsgStatusBasic_k;
import info.nightscout.androidaps.danaRKorean.comm.MsgStatus_k;
import info.nightscout.androidaps.danaRKorean.services.DanaRKoreanExecutionService;
import info.nightscout.androidaps.danaRKorean.services.DanaRKoreanExecutionService_MembersInjector;
import info.nightscout.androidaps.danaRv2.DanaRv2Plugin;
import info.nightscout.androidaps.danaRv2.DanaRv2Plugin_Factory;
import info.nightscout.androidaps.danaRv2.comm.MessageHashTableRv2;
import info.nightscout.androidaps.danaRv2.comm.MessageHashTableRv2_Factory;
import info.nightscout.androidaps.danaRv2.comm.MsgCheckValue_v2;
import info.nightscout.androidaps.danaRv2.comm.MsgHistoryEvents_v2;
import info.nightscout.androidaps.danaRv2.comm.MsgSetAPSTempBasalStart_v2;
import info.nightscout.androidaps.danaRv2.comm.MsgSetHistoryEntry_v2;
import info.nightscout.androidaps.danaRv2.comm.MsgStatusAPS_v2;
import info.nightscout.androidaps.danaRv2.comm.MsgStatusBolusExtended_v2;
import info.nightscout.androidaps.danaRv2.comm.MsgStatusTempBasal_v2;
import info.nightscout.androidaps.danaRv2.services.DanaRv2ExecutionService;
import info.nightscout.androidaps.danaRv2.services.DanaRv2ExecutionService_MembersInjector;
import info.nightscout.androidaps.danar.DanaRPlugin;
import info.nightscout.androidaps.danar.DanaRPlugin_Factory;
import info.nightscout.androidaps.danar.comm.MessageBase;
import info.nightscout.androidaps.danar.comm.MessageBase_MembersInjector;
import info.nightscout.androidaps.danar.comm.MessageHashTableR;
import info.nightscout.androidaps.danar.comm.MessageHashTableR_Factory;
import info.nightscout.androidaps.danar.comm.MsgBolusProgress;
import info.nightscout.androidaps.danar.comm.MsgBolusStart;
import info.nightscout.androidaps.danar.comm.MsgBolusStartWithSpeed;
import info.nightscout.androidaps.danar.comm.MsgBolusStop;
import info.nightscout.androidaps.danar.comm.MsgCheckValue;
import info.nightscout.androidaps.danar.comm.MsgError;
import info.nightscout.androidaps.danar.comm.MsgHistoryAlarm;
import info.nightscout.androidaps.danar.comm.MsgHistoryAll;
import info.nightscout.androidaps.danar.comm.MsgHistoryAllDone;
import info.nightscout.androidaps.danar.comm.MsgHistoryBasalHour;
import info.nightscout.androidaps.danar.comm.MsgHistoryBolus;
import info.nightscout.androidaps.danar.comm.MsgHistoryCarbo;
import info.nightscout.androidaps.danar.comm.MsgHistoryDailyInsulin;
import info.nightscout.androidaps.danar.comm.MsgHistoryDone;
import info.nightscout.androidaps.danar.comm.MsgHistoryError;
import info.nightscout.androidaps.danar.comm.MsgHistoryGlucose;
import info.nightscout.androidaps.danar.comm.MsgHistoryNew;
import info.nightscout.androidaps.danar.comm.MsgHistoryNewDone;
import info.nightscout.androidaps.danar.comm.MsgHistoryRefill;
import info.nightscout.androidaps.danar.comm.MsgHistorySuspend;
import info.nightscout.androidaps.danar.comm.MsgInitConnStatusBasic;
import info.nightscout.androidaps.danar.comm.MsgInitConnStatusBolus;
import info.nightscout.androidaps.danar.comm.MsgInitConnStatusOption;
import info.nightscout.androidaps.danar.comm.MsgInitConnStatusTime;
import info.nightscout.androidaps.danar.comm.MsgPCCommStart;
import info.nightscout.androidaps.danar.comm.MsgPCCommStop;
import info.nightscout.androidaps.danar.comm.MsgSetActivateBasalProfile;
import info.nightscout.androidaps.danar.comm.MsgSetBasalProfile;
import info.nightscout.androidaps.danar.comm.MsgSetCarbsEntry;
import info.nightscout.androidaps.danar.comm.MsgSetExtendedBolusStart;
import info.nightscout.androidaps.danar.comm.MsgSetExtendedBolusStop;
import info.nightscout.androidaps.danar.comm.MsgSetSingleBasalProfile;
import info.nightscout.androidaps.danar.comm.MsgSetTempBasalStart;
import info.nightscout.androidaps.danar.comm.MsgSetTempBasalStop;
import info.nightscout.androidaps.danar.comm.MsgSetTime;
import info.nightscout.androidaps.danar.comm.MsgSetUserOptions;
import info.nightscout.androidaps.danar.comm.MsgSettingActiveProfile;
import info.nightscout.androidaps.danar.comm.MsgSettingBasal;
import info.nightscout.androidaps.danar.comm.MsgSettingBasalProfileAll;
import info.nightscout.androidaps.danar.comm.MsgSettingGlucose;
import info.nightscout.androidaps.danar.comm.MsgSettingMaxValues;
import info.nightscout.androidaps.danar.comm.MsgSettingMeal;
import info.nightscout.androidaps.danar.comm.MsgSettingProfileRatios;
import info.nightscout.androidaps.danar.comm.MsgSettingProfileRatiosAll;
import info.nightscout.androidaps.danar.comm.MsgSettingPumpTime;
import info.nightscout.androidaps.danar.comm.MsgSettingShippingInfo;
import info.nightscout.androidaps.danar.comm.MsgSettingUserOptions;
import info.nightscout.androidaps.danar.comm.MsgStatus;
import info.nightscout.androidaps.danar.comm.MsgStatusBasic;
import info.nightscout.androidaps.danar.comm.MsgStatusBolusExtended;
import info.nightscout.androidaps.danar.comm.MsgStatusProfile;
import info.nightscout.androidaps.danar.comm.MsgStatusTempBasal;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMessageBase;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgBolusProgress;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgBolusStart;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgBolusStartWithSpeed;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgBolusStop;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgCheckValue;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgCheckValue_k;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgCheckValue_v2;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgError;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryAlarm;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryAll;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryAllDone;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryBasalHour;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryBolus;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryCarbo;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryDailyInsulin;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryDone;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryError;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryEvents_v2;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryGlucose;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryNew;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryNewDone;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistoryRefill;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgHistorySuspend;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgInitConnStatusBasic;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgInitConnStatusBasic_k;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgInitConnStatusBolus;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgInitConnStatusBolus_k;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgInitConnStatusOption;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgInitConnStatusTime;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgInitConnStatusTime_k;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgPCCommStart;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgPCCommStop;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetAPSTempBasalStart_v2;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetActivateBasalProfile;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetBasalProfile;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetCarbsEntry;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetExtendedBolusStart;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetExtendedBolusStop;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetHistoryEntry_v2;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetSingleBasalProfile;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetTempBasalStart;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetTempBasalStop;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetTime;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSetUserOptions;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingActiveProfile;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingBasal;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingBasalProfileAll;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingBasalProfileAll_k;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingBasal_k;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingGlucose;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingMaxValues;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingMeal;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingProfileRatios;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingProfileRatiosAll;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingPumpTime;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingShippingInfo;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgSettingUserOptions;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatus;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatusAPS_v2;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatusBasic;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatusBasic_k;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatusBolusExtended;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatusBolusExtended_v2;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatusProfile;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatusTempBasal;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatusTempBasal_v2;
import info.nightscout.androidaps.danar.di.DanaRCommModule_ContributesMsgStatus_k;
import info.nightscout.androidaps.danar.di.DanaRServicesModule_ContributesAbstractDanaRExecutionService;
import info.nightscout.androidaps.danar.di.DanaRServicesModule_ContributesDanaRExecutionService;
import info.nightscout.androidaps.danar.di.DanaRServicesModule_ContributesDanaRKoreanExecutionService;
import info.nightscout.androidaps.danar.di.DanaRServicesModule_ContributesDanaRv2ExecutionService;
import info.nightscout.androidaps.danar.services.AbstractDanaRExecutionService;
import info.nightscout.androidaps.danar.services.AbstractDanaRExecutionService_MembersInjector;
import info.nightscout.androidaps.danar.services.DanaRExecutionService;
import info.nightscout.androidaps.danar.services.DanaRExecutionService_MembersInjector;
import info.nightscout.androidaps.danars.DanaRSPlugin;
import info.nightscout.androidaps.danars.DanaRSPlugin_Factory;
import info.nightscout.androidaps.danars.activities.BLEScanActivity;
import info.nightscout.androidaps.danars.activities.BLEScanActivity_MembersInjector;
import info.nightscout.androidaps.danars.activities.EnterPinActivity;
import info.nightscout.androidaps.danars.activities.EnterPinActivity_MembersInjector;
import info.nightscout.androidaps.danars.activities.PairingHelperActivity;
import info.nightscout.androidaps.danars.comm.DanaRSMessageHashTable;
import info.nightscout.androidaps.danars.comm.DanaRSMessageHashTable_Factory;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_APS_Basal_Set_Temporary_Basal;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_APS_History_Events;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_APS_History_Events_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_APS_Set_Event_History;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_APS_Set_Event_History_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Get_Basal_Rate;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Get_Basal_Rate_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Get_Profile_Basal_Rate;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Get_Profile_Basal_Rate_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Get_Profile_Number;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Get_Profile_Number_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Get_Temporary_Basal_State;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Get_Temporary_Basal_State_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Set_Basal_Rate;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Set_Profile_Basal_Rate;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Set_Profile_Number;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Set_Suspend_Off;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Set_Suspend_On;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Basal_Set_Temporary_Basal;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_24_CIR_CF_Array;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_24_CIR_CF_Array_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Bolus_Option;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Bolus_Option_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_CIR_CF_Array;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_CIR_CF_Array_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Calculation_Information;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Calculation_Information_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Dual_Bolus;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Dual_Bolus_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Extended_Bolus;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Extended_Bolus_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Extended_Bolus_State;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Extended_Bolus_State_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Initial_Bolus;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Step_Bolus_Information;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Get_Step_Bolus_Information_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_24_CIR_CF_Array;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_24_CIR_CF_Array_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Bolus_Option;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_CIR_CF_Array;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Dual_Bolus;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Extended_Bolus;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Initial_Bolus;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Step_Bolus_Start;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Step_Bolus_Start_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Step_Bolus_Stop;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Bolus_Set_Step_Bolus_Stop_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Etc_Keep_Connection;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Etc_Set_History_Save;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Delivery_Status;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_More_Information;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_More_Information_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Password;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Password_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Pump_Check;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Pump_Check_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Shipping_Information;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Shipping_Information_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Shipping_Version;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Shipping_Version_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Today_Delivery_Total;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_Today_Delivery_Total_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Get_User_Time_Change_Flag;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Initial_Screen_Information;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Initial_Screen_Information_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Set_History_Upload_Mode;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Alarm;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_All_History;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Basal;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Blood_Glucose;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Bolus;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Carbohydrate;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Daily;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Prime;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Refill;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Suspend;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History_Temporary;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_History__MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Notify_Alarm;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Notify_Alarm_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Notify_Delivery_Complete;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Notify_Delivery_Complete_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Notify_Delivery_Rate_Display;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Notify_Delivery_Rate_Display_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Notify_Missed_Bolus_Alarm;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Get_Pump_Time;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Get_Pump_Time_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Get_User_Option;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Get_User_Option_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Set_Pump_Time;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Set_User_Option;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Option_Set_User_Option_MembersInjector;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Review_Bolus_Avg;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Review_Get_Pump_Dec_Ratio;
import info.nightscout.androidaps.danars.comm.DanaRS_Packet_Review_Get_Pump_Dec_Ratio_MembersInjector;
import info.nightscout.androidaps.danars.di.DanaRSActivitiesModule_ContributeEnterPinActivity;
import info.nightscout.androidaps.danars.di.DanaRSActivitiesModule_ContributesBLEScanActivity;
import info.nightscout.androidaps.danars.di.DanaRSActivitiesModule_ContributesPairingHelperActivity;
import info.nightscout.androidaps.danars.di.DanaRSActivitiesModule_ContributesPairingProgressDialog;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_APS_Basal_Set_Temporary_Basal;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_APS_History_Events;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_APS_Set_Event_History;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Basal_Rate;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Basal_Rate;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Number;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Temporary_Basal_State;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Basal_Rate;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Basal_Rate;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Number;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_Off;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_On;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Temporary_Basal;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_24_CIR_CF_Array;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Bolus_Option;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_CIR_CF_Array;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Calculation_Information;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Dual_Bolus;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus_State;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Initial_Bolus;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Step_Bolus_Information;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_24_CIR_CF_Array;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Bolus_Option;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_CIR_CF_Array;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Dual_Bolus;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Initial_Bolus;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Start;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Stop;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Etc_Keep_Connection;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Etc_Set_History_Save;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Delivery_Status;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Get_More_Information;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Password;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Pump_Check;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Information;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Version;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Today_Delivery_Total;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Get_User_Time_Change_Flag;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Initial_Screen_Information;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Set_History_Upload_Mode;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Alarm;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_All_History;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Basal;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Blood_Glucose;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Bolus;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Carbohydrate;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Daily;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Prime;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Refill;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Suspend;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_History_Temporary;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Notify_Alarm;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Complete;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Rate_Display;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Notify_Missed_Bolus_Alarm;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_Time;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_User_Option;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_Time;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_User_Option;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Review_Bolus_Avg;
import info.nightscout.androidaps.danars.di.DanaRSCommModule_ContributesDanaRS_Packet_Review_Get_Pump_Dec_Ratio;
import info.nightscout.androidaps.danars.di.DanaRSServicesModule_ContributesDanaRSService;
import info.nightscout.androidaps.danars.dialogs.PairingProgressDialog;
import info.nightscout.androidaps.danars.dialogs.PairingProgressDialog_MembersInjector;
import info.nightscout.androidaps.danars.encryption.BleEncryption;
import info.nightscout.androidaps.danars.encryption.BleEncryption_Factory;
import info.nightscout.androidaps.danars.services.BLEComm;
import info.nightscout.androidaps.danars.services.BLEComm_Factory;
import info.nightscout.androidaps.danars.services.DanaRSService;
import info.nightscout.androidaps.danars.services.DanaRSService_MembersInjector;
import info.nightscout.androidaps.data.Profile;
import info.nightscout.androidaps.data.Profile_MembersInjector;
import info.nightscout.androidaps.data.PumpEnactResult;
import info.nightscout.androidaps.data.PumpEnactResult_MembersInjector;
import info.nightscout.androidaps.data.defaultProfile.DefaultProfile;
import info.nightscout.androidaps.data.defaultProfile.DefaultProfileDPV;
import info.nightscout.androidaps.data.defaultProfile.DefaultProfileDPV_Factory;
import info.nightscout.androidaps.data.defaultProfile.DefaultProfile_Factory;
import info.nightscout.androidaps.db.BgReading;
import info.nightscout.androidaps.db.BgReading_MembersInjector;
import info.nightscout.androidaps.db.CareportalEvent;
import info.nightscout.androidaps.db.CareportalEvent_MembersInjector;
import info.nightscout.androidaps.db.DatabaseHelper;
import info.nightscout.androidaps.db.DatabaseHelperProvider;
import info.nightscout.androidaps.db.DatabaseHelperProvider_Factory;
import info.nightscout.androidaps.db.DatabaseHelper_MembersInjector;
import info.nightscout.androidaps.db.ExtendedBolus;
import info.nightscout.androidaps.db.ExtendedBolus_MembersInjector;
import info.nightscout.androidaps.db.ProfileSwitch;
import info.nightscout.androidaps.db.ProfileSwitch_MembersInjector;
import info.nightscout.androidaps.db.StaticInjector;
import info.nightscout.androidaps.db.StaticInjector_Factory;
import info.nightscout.androidaps.db.TemporaryBasal;
import info.nightscout.androidaps.db.TemporaryBasal_MembersInjector;
import info.nightscout.androidaps.db.Treatment;
import info.nightscout.androidaps.db.Treatment_MembersInjector;
import info.nightscout.androidaps.dialogs.BolusProgressDialog;
import info.nightscout.androidaps.dialogs.BolusProgressDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.CalibrationDialog;
import info.nightscout.androidaps.dialogs.CalibrationDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.CarbsDialog;
import info.nightscout.androidaps.dialogs.CarbsDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.CareDialog;
import info.nightscout.androidaps.dialogs.CareDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.DialogFragmentWithDate_MembersInjector;
import info.nightscout.androidaps.dialogs.ErrorDialog;
import info.nightscout.androidaps.dialogs.ErrorDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.ExtendedBolusDialog;
import info.nightscout.androidaps.dialogs.ExtendedBolusDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.FillDialog;
import info.nightscout.androidaps.dialogs.FillDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.InsulinDialog;
import info.nightscout.androidaps.dialogs.InsulinDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.LoopDialog;
import info.nightscout.androidaps.dialogs.LoopDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.NtpProgressDialog;
import info.nightscout.androidaps.dialogs.NtpProgressDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.ProfileSwitchDialog;
import info.nightscout.androidaps.dialogs.ProfileSwitchDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.ProfileViewerDialog;
import info.nightscout.androidaps.dialogs.ProfileViewerDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.TempBasalDialog;
import info.nightscout.androidaps.dialogs.TempBasalDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.TempTargetDialog;
import info.nightscout.androidaps.dialogs.TempTargetDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.TreatmentDialog;
import info.nightscout.androidaps.dialogs.TreatmentDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.UAMDialog;
import info.nightscout.androidaps.dialogs.UAMDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.WizardDialog;
import info.nightscout.androidaps.dialogs.WizardDialog_MembersInjector;
import info.nightscout.androidaps.dialogs.WizardInfoDialog;
import info.nightscout.androidaps.dialogs.WizardInfoDialog_MembersInjector;
import info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity;
import info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity_MembersInjector;
import info.nightscout.androidaps.historyBrowser.IobCobCalculatorPluginHistory;
import info.nightscout.androidaps.historyBrowser.IobCobCalculatorPluginHistory_Factory;
import info.nightscout.androidaps.historyBrowser.TreatmentsPluginHistory;
import info.nightscout.androidaps.historyBrowser.TreatmentsPluginHistory_Factory;
import info.nightscout.androidaps.interfaces.PluginBase;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.interfaces.ProfileStore;
import info.nightscout.androidaps.interfaces.ProfileStore_MembersInjector;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.logging.L;
import info.nightscout.androidaps.logging.L_Factory;
import info.nightscout.androidaps.plugins.aps.logger.LoggerCallback;
import info.nightscout.androidaps.plugins.aps.logger.LoggerCallback_MembersInjector;
import info.nightscout.androidaps.plugins.aps.loop.APSResult;
import info.nightscout.androidaps.plugins.aps.loop.APSResult_MembersInjector;
import info.nightscout.androidaps.plugins.aps.loop.CarbSuggestionReceiver;
import info.nightscout.androidaps.plugins.aps.loop.CarbSuggestionReceiver_MembersInjector;
import info.nightscout.androidaps.plugins.aps.loop.LoopFragment;
import info.nightscout.androidaps.plugins.aps.loop.LoopFragment_MembersInjector;
import info.nightscout.androidaps.plugins.aps.loop.LoopPlugin;
import info.nightscout.androidaps.plugins.aps.loop.LoopPlugin_Factory;
import info.nightscout.androidaps.plugins.aps.openAPSAMA.DetermineBasalAdapterAMAJS;
import info.nightscout.androidaps.plugins.aps.openAPSAMA.DetermineBasalAdapterAMAJS_MembersInjector;
import info.nightscout.androidaps.plugins.aps.openAPSAMA.DetermineBasalResultAMA;
import info.nightscout.androidaps.plugins.aps.openAPSAMA.OpenAPSAMAFragment;
import info.nightscout.androidaps.plugins.aps.openAPSAMA.OpenAPSAMAFragment_MembersInjector;
import info.nightscout.androidaps.plugins.aps.openAPSAMA.OpenAPSAMAPlugin;
import info.nightscout.androidaps.plugins.aps.openAPSAMA.OpenAPSAMAPlugin_Factory;
import info.nightscout.androidaps.plugins.aps.openAPSSMB.DetermineBasalAdapterSMBJS;
import info.nightscout.androidaps.plugins.aps.openAPSSMB.DetermineBasalAdapterSMBJS_MembersInjector;
import info.nightscout.androidaps.plugins.aps.openAPSSMB.DetermineBasalResultSMB;
import info.nightscout.androidaps.plugins.aps.openAPSSMB.DetermineBasalResultSMB_MembersInjector;
import info.nightscout.androidaps.plugins.aps.openAPSSMB.OpenAPSSMBFragment;
import info.nightscout.androidaps.plugins.aps.openAPSSMB.OpenAPSSMBFragment_MembersInjector;
import info.nightscout.androidaps.plugins.aps.openAPSSMB.OpenAPSSMBPlugin;
import info.nightscout.androidaps.plugins.aps.openAPSSMB.OpenAPSSMBPlugin_Factory;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper_Factory;
import info.nightscout.androidaps.plugins.configBuilder.ConfigBuilderFragment;
import info.nightscout.androidaps.plugins.configBuilder.ConfigBuilderFragment_MembersInjector;
import info.nightscout.androidaps.plugins.configBuilder.ConfigBuilderPlugin;
import info.nightscout.androidaps.plugins.configBuilder.ConfigBuilderPlugin_Factory;
import info.nightscout.androidaps.plugins.configBuilder.ConstraintChecker;
import info.nightscout.androidaps.plugins.configBuilder.ConstraintChecker_Factory;
import info.nightscout.androidaps.plugins.configBuilder.PluginStore;
import info.nightscout.androidaps.plugins.configBuilder.PluginStore_Factory;
import info.nightscout.androidaps.plugins.configBuilder.RunningConfiguration;
import info.nightscout.androidaps.plugins.configBuilder.RunningConfiguration_Factory;
import info.nightscout.androidaps.plugins.constraints.dstHelper.DstHelperPlugin;
import info.nightscout.androidaps.plugins.constraints.dstHelper.DstHelperPlugin_Factory;
import info.nightscout.androidaps.plugins.constraints.objectives.ObjectivesFragment;
import info.nightscout.androidaps.plugins.constraints.objectives.ObjectivesFragment_MembersInjector;
import info.nightscout.androidaps.plugins.constraints.objectives.ObjectivesPlugin;
import info.nightscout.androidaps.plugins.constraints.objectives.ObjectivesPlugin_Factory;
import info.nightscout.androidaps.plugins.constraints.objectives.activities.ObjectivesExamDialog;
import info.nightscout.androidaps.plugins.constraints.objectives.activities.ObjectivesExamDialog_MembersInjector;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective0;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective0_MembersInjector;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective1;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective10;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective1_MembersInjector;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective2;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective3;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective3_MembersInjector;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective4;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective5;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective5_MembersInjector;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective6;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective6_MembersInjector;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective7;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective8;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective9;
import info.nightscout.androidaps.plugins.constraints.objectives.objectives.Objective_MembersInjector;
import info.nightscout.androidaps.plugins.constraints.safety.SafetyPlugin;
import info.nightscout.androidaps.plugins.constraints.safety.SafetyPlugin_Factory;
import info.nightscout.androidaps.plugins.constraints.signatureVerifier.SignatureVerifierPlugin;
import info.nightscout.androidaps.plugins.constraints.signatureVerifier.SignatureVerifierPlugin_Factory;
import info.nightscout.androidaps.plugins.constraints.storage.StorageConstraintPlugin;
import info.nightscout.androidaps.plugins.constraints.storage.StorageConstraintPlugin_Factory;
import info.nightscout.androidaps.plugins.constraints.versionChecker.VersionCheckerPlugin;
import info.nightscout.androidaps.plugins.constraints.versionChecker.VersionCheckerPlugin_Factory;
import info.nightscout.androidaps.plugins.constraints.versionChecker.VersionCheckerUtils;
import info.nightscout.androidaps.plugins.constraints.versionChecker.VersionCheckerUtils_Factory;
import info.nightscout.androidaps.plugins.general.actions.ActionsFragment;
import info.nightscout.androidaps.plugins.general.actions.ActionsFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.actions.ActionsPlugin;
import info.nightscout.androidaps.plugins.general.actions.ActionsPlugin_Factory;
import info.nightscout.androidaps.plugins.general.automation.AutomationEvent;
import info.nightscout.androidaps.plugins.general.automation.AutomationEvent_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.AutomationFragment;
import info.nightscout.androidaps.plugins.general.automation.AutomationFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.AutomationPlugin;
import info.nightscout.androidaps.plugins.general.automation.AutomationPlugin_Factory;
import info.nightscout.androidaps.plugins.general.automation.actions.Action;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionAlarm;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionAlarm_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionDummy;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionLoopDisable;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionLoopDisable_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionLoopEnable;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionLoopEnable_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionLoopResume;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionLoopResume_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionLoopSuspend;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionLoopSuspend_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionNotification;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionNotification_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionProfileSwitch;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionProfileSwitchPercent;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionProfileSwitchPercent_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionProfileSwitch_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionSendSMS;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionSendSMS_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionStartTempTarget;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionStartTempTarget_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionStopTempTarget;
import info.nightscout.androidaps.plugins.general.automation.actions.ActionStopTempTarget_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.actions.Action_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.dialogs.ChooseActionDialog;
import info.nightscout.androidaps.plugins.general.automation.dialogs.ChooseActionDialog_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.dialogs.ChooseTriggerDialog;
import info.nightscout.androidaps.plugins.general.automation.dialogs.ChooseTriggerDialog_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.dialogs.EditActionDialog;
import info.nightscout.androidaps.plugins.general.automation.dialogs.EditActionDialog_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.dialogs.EditEventDialog;
import info.nightscout.androidaps.plugins.general.automation.dialogs.EditEventDialog_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.dialogs.EditTriggerDialog;
import info.nightscout.androidaps.plugins.general.automation.dialogs.EditTriggerDialog_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.Comparator;
import info.nightscout.androidaps.plugins.general.automation.elements.ComparatorConnect;
import info.nightscout.androidaps.plugins.general.automation.elements.ComparatorConnect_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.ComparatorExists;
import info.nightscout.androidaps.plugins.general.automation.elements.ComparatorExists_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.Comparator_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.Element;
import info.nightscout.androidaps.plugins.general.automation.elements.InputBg;
import info.nightscout.androidaps.plugins.general.automation.elements.InputBg_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputButton;
import info.nightscout.androidaps.plugins.general.automation.elements.InputDateTime;
import info.nightscout.androidaps.plugins.general.automation.elements.InputDateTime_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputDelta;
import info.nightscout.androidaps.plugins.general.automation.elements.InputDelta_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputDouble;
import info.nightscout.androidaps.plugins.general.automation.elements.InputDropdownMenu;
import info.nightscout.androidaps.plugins.general.automation.elements.InputDropdownMenu_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputDuration;
import info.nightscout.androidaps.plugins.general.automation.elements.InputInsulin;
import info.nightscout.androidaps.plugins.general.automation.elements.InputLocationMode;
import info.nightscout.androidaps.plugins.general.automation.elements.InputLocationMode_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputPercent;
import info.nightscout.androidaps.plugins.general.automation.elements.InputProfileName;
import info.nightscout.androidaps.plugins.general.automation.elements.InputProfileName_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputString;
import info.nightscout.androidaps.plugins.general.automation.elements.InputTempTarget;
import info.nightscout.androidaps.plugins.general.automation.elements.InputTempTarget_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputTime;
import info.nightscout.androidaps.plugins.general.automation.elements.InputTimeRange;
import info.nightscout.androidaps.plugins.general.automation.elements.InputTimeRange_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputTime_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.InputWeekDay;
import info.nightscout.androidaps.plugins.general.automation.elements.LabelWithElement;
import info.nightscout.androidaps.plugins.general.automation.elements.LabelWithElement_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.elements.StaticLabel;
import info.nightscout.androidaps.plugins.general.automation.elements.StaticLabel_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.triggers.Trigger;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerAutosensValue;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerBTDevice;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerBTDevice_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerBg;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerBolusAgo;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerCOB;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerConnector;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerDelta;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerDummy;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerIob;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerLocation;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerProfilePercent;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerPumpLastConnection;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerRecurringTime;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerRecurringTime_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerTempTarget;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerTime;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerTimeRange;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerTimeRange_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerTime_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerWifiSsid;
import info.nightscout.androidaps.plugins.general.automation.triggers.TriggerWifiSsid_MembersInjector;
import info.nightscout.androidaps.plugins.general.automation.triggers.Trigger_MembersInjector;
import info.nightscout.androidaps.plugins.general.dataBroadcaster.DataBroadcastPlugin;
import info.nightscout.androidaps.plugins.general.dataBroadcaster.DataBroadcastPlugin_Factory;
import info.nightscout.androidaps.plugins.general.food.FoodFragment;
import info.nightscout.androidaps.plugins.general.food.FoodFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.food.FoodPlugin;
import info.nightscout.androidaps.plugins.general.food.FoodPlugin_Factory;
import info.nightscout.androidaps.plugins.general.food.FoodService;
import info.nightscout.androidaps.plugins.general.food.FoodService_MembersInjector;
import info.nightscout.androidaps.plugins.general.maintenance.ImportExportPrefs;
import info.nightscout.androidaps.plugins.general.maintenance.ImportExportPrefs_Factory;
import info.nightscout.androidaps.plugins.general.maintenance.MaintenanceFragment;
import info.nightscout.androidaps.plugins.general.maintenance.MaintenanceFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.maintenance.MaintenancePlugin;
import info.nightscout.androidaps.plugins.general.maintenance.MaintenancePlugin_Factory;
import info.nightscout.androidaps.plugins.general.maintenance.PrefFileListProvider;
import info.nightscout.androidaps.plugins.general.maintenance.PrefFileListProvider_Factory;
import info.nightscout.androidaps.plugins.general.maintenance.activities.LogSettingActivity;
import info.nightscout.androidaps.plugins.general.maintenance.activities.LogSettingActivity_MembersInjector;
import info.nightscout.androidaps.plugins.general.maintenance.activities.PrefImportListActivity;
import info.nightscout.androidaps.plugins.general.maintenance.activities.PrefImportListActivity_MembersInjector;
import info.nightscout.androidaps.plugins.general.maintenance.formats.ClassicPrefsFormat;
import info.nightscout.androidaps.plugins.general.maintenance.formats.ClassicPrefsFormat_Factory;
import info.nightscout.androidaps.plugins.general.maintenance.formats.EncryptedPrefsFormat;
import info.nightscout.androidaps.plugins.general.maintenance.formats.EncryptedPrefsFormat_Factory;
import info.nightscout.androidaps.plugins.general.nsclient.NSClientFragment;
import info.nightscout.androidaps.plugins.general.nsclient.NSClientFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.nsclient.NSClientPlugin;
import info.nightscout.androidaps.plugins.general.nsclient.NSClientPlugin_Factory;
import info.nightscout.androidaps.plugins.general.nsclient.NSUpload;
import info.nightscout.androidaps.plugins.general.nsclient.NSUpload_Factory;
import info.nightscout.androidaps.plugins.general.nsclient.NsClientReceiverDelegate_Factory;
import info.nightscout.androidaps.plugins.general.nsclient.UploadQueue;
import info.nightscout.androidaps.plugins.general.nsclient.UploadQueue_Factory;
import info.nightscout.androidaps.plugins.general.nsclient.data.NSDeviceStatus;
import info.nightscout.androidaps.plugins.general.nsclient.data.NSDeviceStatus_Factory;
import info.nightscout.androidaps.plugins.general.nsclient.data.NSSettingsStatus;
import info.nightscout.androidaps.plugins.general.nsclient.data.NSSettingsStatus_Factory;
import info.nightscout.androidaps.plugins.general.nsclient.services.NSClientService;
import info.nightscout.androidaps.plugins.general.nsclient.services.NSClientService_MembersInjector;
import info.nightscout.androidaps.plugins.general.openhumans.OHUploadWorker;
import info.nightscout.androidaps.plugins.general.openhumans.OHUploadWorker_MembersInjector;
import info.nightscout.androidaps.plugins.general.openhumans.OpenHumansFragment;
import info.nightscout.androidaps.plugins.general.openhumans.OpenHumansFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.openhumans.OpenHumansLoginActivity;
import info.nightscout.androidaps.plugins.general.openhumans.OpenHumansLoginActivity_ExchangeAuthTokenDialog_MembersInjector;
import info.nightscout.androidaps.plugins.general.openhumans.OpenHumansUploader;
import info.nightscout.androidaps.plugins.general.openhumans.OpenHumansUploader_Factory;
import info.nightscout.androidaps.plugins.general.overview.OverviewFragment;
import info.nightscout.androidaps.plugins.general.overview.OverviewFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.overview.OverviewMenus;
import info.nightscout.androidaps.plugins.general.overview.OverviewMenus_Factory;
import info.nightscout.androidaps.plugins.general.overview.OverviewPlugin;
import info.nightscout.androidaps.plugins.general.overview.OverviewPlugin_Factory;
import info.nightscout.androidaps.plugins.general.overview.StatusLightHandler;
import info.nightscout.androidaps.plugins.general.overview.StatusLightHandler_Factory;
import info.nightscout.androidaps.plugins.general.overview.activities.QuickWizardListActivity;
import info.nightscout.androidaps.plugins.general.overview.activities.QuickWizardListActivity_MembersInjector;
import info.nightscout.androidaps.plugins.general.overview.dialogs.EditQuickWizardDialog;
import info.nightscout.androidaps.plugins.general.overview.dialogs.EditQuickWizardDialog_MembersInjector;
import info.nightscout.androidaps.plugins.general.overview.graphData.GraphData;
import info.nightscout.androidaps.plugins.general.overview.graphData.GraphData_MembersInjector;
import info.nightscout.androidaps.plugins.general.overview.notifications.DismissNotificationService;
import info.nightscout.androidaps.plugins.general.overview.notifications.DismissNotificationService_MembersInjector;
import info.nightscout.androidaps.plugins.general.overview.notifications.NotificationStore;
import info.nightscout.androidaps.plugins.general.overview.notifications.NotificationStore_Factory;
import info.nightscout.androidaps.plugins.general.overview.notifications.NotificationWithAction;
import info.nightscout.androidaps.plugins.general.overview.notifications.NotificationWithAction_MembersInjector;
import info.nightscout.androidaps.plugins.general.persistentNotification.DummyService;
import info.nightscout.androidaps.plugins.general.persistentNotification.DummyServiceHelper;
import info.nightscout.androidaps.plugins.general.persistentNotification.DummyServiceHelper_Factory;
import info.nightscout.androidaps.plugins.general.persistentNotification.DummyService_MembersInjector;
import info.nightscout.androidaps.plugins.general.persistentNotification.PersistentNotificationPlugin;
import info.nightscout.androidaps.plugins.general.persistentNotification.PersistentNotificationPlugin_Factory;
import info.nightscout.androidaps.plugins.general.smsCommunicator.AuthRequest;
import info.nightscout.androidaps.plugins.general.smsCommunicator.AuthRequest_MembersInjector;
import info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorFragment;
import info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorPlugin;
import info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorPlugin_Factory;
import info.nightscout.androidaps.plugins.general.smsCommunicator.activities.SmsCommunicatorOtpActivity;
import info.nightscout.androidaps.plugins.general.smsCommunicator.activities.SmsCommunicatorOtpActivity_MembersInjector;
import info.nightscout.androidaps.plugins.general.smsCommunicator.otp.OneTimePassword;
import info.nightscout.androidaps.plugins.general.smsCommunicator.otp.OneTimePassword_Factory;
import info.nightscout.androidaps.plugins.general.tidepool.TidepoolFragment;
import info.nightscout.androidaps.plugins.general.tidepool.TidepoolFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.tidepool.TidepoolPlugin;
import info.nightscout.androidaps.plugins.general.tidepool.TidepoolPlugin_Factory;
import info.nightscout.androidaps.plugins.general.tidepool.comm.TidepoolUploader;
import info.nightscout.androidaps.plugins.general.tidepool.comm.TidepoolUploader_Factory;
import info.nightscout.androidaps.plugins.general.tidepool.comm.UploadChunk;
import info.nightscout.androidaps.plugins.general.tidepool.comm.UploadChunk_Factory;
import info.nightscout.androidaps.plugins.general.tidepool.utils.RateLimit;
import info.nightscout.androidaps.plugins.general.tidepool.utils.RateLimit_Factory;
import info.nightscout.androidaps.plugins.general.wear.ActionStringHandler;
import info.nightscout.androidaps.plugins.general.wear.ActionStringHandler_Factory;
import info.nightscout.androidaps.plugins.general.wear.WearFragment;
import info.nightscout.androidaps.plugins.general.wear.WearFragment_MembersInjector;
import info.nightscout.androidaps.plugins.general.wear.WearPlugin;
import info.nightscout.androidaps.plugins.general.wear.WearPlugin_Factory;
import info.nightscout.androidaps.plugins.general.wear.wearintegration.WatchUpdaterService;
import info.nightscout.androidaps.plugins.general.wear.wearintegration.WatchUpdaterService_MembersInjector;
import info.nightscout.androidaps.plugins.general.xdripStatusline.StatusLinePlugin;
import info.nightscout.androidaps.plugins.general.xdripStatusline.StatusLinePlugin_Factory;
import info.nightscout.androidaps.plugins.insulin.InsulinFragment;
import info.nightscout.androidaps.plugins.insulin.InsulinFragment_MembersInjector;
import info.nightscout.androidaps.plugins.insulin.InsulinLyumjevPlugin;
import info.nightscout.androidaps.plugins.insulin.InsulinLyumjevPlugin_Factory;
import info.nightscout.androidaps.plugins.insulin.InsulinOrefFreePeakPlugin;
import info.nightscout.androidaps.plugins.insulin.InsulinOrefFreePeakPlugin_Factory;
import info.nightscout.androidaps.plugins.insulin.InsulinOrefRapidActingPlugin;
import info.nightscout.androidaps.plugins.insulin.InsulinOrefRapidActingPlugin_Factory;
import info.nightscout.androidaps.plugins.insulin.InsulinOrefUltraRapidActingPlugin;
import info.nightscout.androidaps.plugins.insulin.InsulinOrefUltraRapidActingPlugin_Factory;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.GlucoseStatus;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.GlucoseStatus_MembersInjector;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobCalculatorPlugin;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobCalculatorPlugin_Factory;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobOref1Thread;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobOref1Thread_MembersInjector;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobThread;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobThread_MembersInjector;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.data.AutosensData;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.data.AutosensData_MembersInjector;
import info.nightscout.androidaps.plugins.profile.local.LocalProfileFragment;
import info.nightscout.androidaps.plugins.profile.local.LocalProfileFragment_MembersInjector;
import info.nightscout.androidaps.plugins.profile.local.LocalProfilePlugin;
import info.nightscout.androidaps.plugins.profile.local.LocalProfilePlugin_Factory;
import info.nightscout.androidaps.plugins.profile.ns.NSProfileFragment;
import info.nightscout.androidaps.plugins.profile.ns.NSProfileFragment_MembersInjector;
import info.nightscout.androidaps.plugins.profile.ns.NSProfilePlugin;
import info.nightscout.androidaps.plugins.profile.ns.NSProfilePlugin_Factory;
import info.nightscout.androidaps.plugins.pump.combo.ComboFragment;
import info.nightscout.androidaps.plugins.pump.combo.ComboFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.combo.ComboPlugin;
import info.nightscout.androidaps.plugins.pump.combo.ComboPlugin_Factory;
import info.nightscout.androidaps.plugins.pump.common.ble.BlePreCheck;
import info.nightscout.androidaps.plugins.pump.common.ble.BlePreCheck_Factory;
import info.nightscout.androidaps.plugins.pump.common.bolusInfo.DetailedBolusInfoStorage;
import info.nightscout.androidaps.plugins.pump.common.bolusInfo.DetailedBolusInfoStorage_Factory;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_DiscoverGattServicesTaskProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_InitializePumpManagerTaskProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_PumpTaskProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_RadioPacketProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_RadioResponseProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_ResetRileyLinkConfigurationTaskProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_RfSpyProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_RileyLinkBLEProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_SendAndListenProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_ServiceTaskProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_SetPreambleProvider;
import info.nightscout.androidaps.plugins.pump.common.dagger.RileyLinkModule_WakeAndTuneTaskProvider;
import info.nightscout.androidaps.plugins.pump.common.dialog.RileyLinkBLEConfigActivity;
import info.nightscout.androidaps.plugins.pump.common.dialog.RileyLinkBLEConfigActivity_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.RileyLinkCommunicationManager_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.RileyLinkUtil;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.RileyLinkUtil_Factory;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.RFSpy;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.RFSpy_Factory;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.RFSpy_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.RileyLinkBLE;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.RileyLinkBLE_Factory;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.RileyLinkBLE_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.command.SendAndListen;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.command.SendAndListen_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.command.SetPreamble;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.command.SetPreamble_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.data.RadioPacket;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.data.RadioPacket_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.data.RadioResponse;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.ble.data.RadioResponse_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.dialog.RileyLinkStatusActivity;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.dialog.RileyLinkStatusActivity_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.dialog.RileyLinkStatusGeneralFragment;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.dialog.RileyLinkStatusGeneralFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.dialog.RileyLinkStatusHistoryFragment;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.dialog.RileyLinkStatusHistoryFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.RileyLinkBluetoothStateReceiver;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.RileyLinkBluetoothStateReceiver_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.RileyLinkBroadcastReceiver;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.RileyLinkBroadcastReceiver_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.RileyLinkService;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.RileyLinkServiceData;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.RileyLinkServiceData_Factory;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.RileyLinkService_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.DiscoverGattServicesTask;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.DiscoverGattServicesTask_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.InitializePumpManagerTask;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.InitializePumpManagerTask_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.PumpTask;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.ResetRileyLinkConfigurationTask;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.ResetRileyLinkConfigurationTask_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.ServiceTask;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.ServiceTaskExecutor;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.ServiceTaskExecutor_Factory;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.ServiceTask_MembersInjector;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.WakeAndTuneTask;
import info.nightscout.androidaps.plugins.pump.common.hw.rileylink.service.tasks.WakeAndTuneTask_MembersInjector;
import info.nightscout.androidaps.plugins.pump.insight.InsightAlertService;
import info.nightscout.androidaps.plugins.pump.insight.InsightAlertService_MembersInjector;
import info.nightscout.androidaps.plugins.pump.insight.LocalInsightFragment;
import info.nightscout.androidaps.plugins.pump.insight.LocalInsightFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.insight.LocalInsightPlugin;
import info.nightscout.androidaps.plugins.pump.insight.LocalInsightPlugin_Factory;
import info.nightscout.androidaps.plugins.pump.insight.activities.InsightAlertActivity;
import info.nightscout.androidaps.plugins.pump.insight.activities.InsightAlertActivity_MembersInjector;
import info.nightscout.androidaps.plugins.pump.insight.activities.InsightPairingActivity;
import info.nightscout.androidaps.plugins.pump.insight.activities.InsightPairingInformationActivity;
import info.nightscout.androidaps.plugins.pump.insight.connection_service.InsightConnectionService;
import info.nightscout.androidaps.plugins.pump.insight.connection_service.InsightConnectionService_MembersInjector;
import info.nightscout.androidaps.plugins.pump.insight.utils.AlertUtils;
import info.nightscout.androidaps.plugins.pump.insight.utils.AlertUtils_Factory;
import info.nightscout.androidaps.plugins.pump.mdi.MDIPlugin;
import info.nightscout.androidaps.plugins.pump.mdi.MDIPlugin_Factory;
import info.nightscout.androidaps.plugins.pump.medtronic.MedtronicFragment;
import info.nightscout.androidaps.plugins.pump.medtronic.MedtronicFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.medtronic.MedtronicPumpPlugin;
import info.nightscout.androidaps.plugins.pump.medtronic.MedtronicPumpPlugin_Factory;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.MedtronicCommunicationManager;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.MedtronicCommunicationManager_Factory;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.MedtronicCommunicationManager_MembersInjector;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.MedtronicConverter;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.MedtronicConverter_Factory;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.history.pump.MedtronicPumpHistoryDecoder;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.history.pump.MedtronicPumpHistoryDecoder_Factory;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.ui.MedtronicUIPostprocessor;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.ui.MedtronicUIPostprocessor_Factory;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.ui.MedtronicUITask;
import info.nightscout.androidaps.plugins.pump.medtronic.comm.ui.MedtronicUITask_MembersInjector;
import info.nightscout.androidaps.plugins.pump.medtronic.data.MedtronicHistoryData;
import info.nightscout.androidaps.plugins.pump.medtronic.data.MedtronicHistoryData_Factory;
import info.nightscout.androidaps.plugins.pump.medtronic.dialog.MedtronicHistoryActivity;
import info.nightscout.androidaps.plugins.pump.medtronic.dialog.MedtronicHistoryActivity_MembersInjector;
import info.nightscout.androidaps.plugins.pump.medtronic.dialog.RileyLinkStatusDeviceMedtronic;
import info.nightscout.androidaps.plugins.pump.medtronic.dialog.RileyLinkStatusDeviceMedtronic_MembersInjector;
import info.nightscout.androidaps.plugins.pump.medtronic.driver.MedtronicPumpStatus;
import info.nightscout.androidaps.plugins.pump.medtronic.driver.MedtronicPumpStatus_Factory;
import info.nightscout.androidaps.plugins.pump.medtronic.service.RileyLinkMedtronicService;
import info.nightscout.androidaps.plugins.pump.medtronic.service.RileyLinkMedtronicService_MembersInjector;
import info.nightscout.androidaps.plugins.pump.medtronic.util.MedtronicUtil;
import info.nightscout.androidaps.plugins.pump.medtronic.util.MedtronicUtil_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.OmnipodPumpPlugin;
import info.nightscout.androidaps.plugins.pump.omnipod.OmnipodPumpPlugin_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodModule_Companion_PodStateManagerProviderFactory;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodModule_ContributesActivationWizardActivity;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodModule_ContributesDeactivationWizardActivity;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodModule_ContributesPodHistoryActivity;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodModule_ContributesPodManagementActivity;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodModule_OmnipodCommunicationManagerProvider;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodModule_RlHistoryItemOmnipod;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_Companion_ProvidesViewModelFactoryFactory;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.dagger.OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release;
import info.nightscout.androidaps.plugins.pump.omnipod.data.RLHistoryItemOmnipod;
import info.nightscout.androidaps.plugins.pump.omnipod.data.RLHistoryItemOmnipod_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.driver.manager.PodStateManager;
import info.nightscout.androidaps.plugins.pump.omnipod.manager.AapsOmnipodManager;
import info.nightscout.androidaps.plugins.pump.omnipod.manager.AapsOmnipodManager_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.manager.AapsPodStateManager;
import info.nightscout.androidaps.plugins.pump.omnipod.manager.AapsPodStateManager_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.rileylink.manager.OmnipodRileyLinkCommunicationManager;
import info.nightscout.androidaps.plugins.pump.omnipod.rileylink.manager.OmnipodRileyLinkCommunicationManager_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.rileylink.service.RileyLinkOmnipodService;
import info.nightscout.androidaps.plugins.pump.omnipod.rileylink.service.RileyLinkOmnipodService_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.OmnipodOverviewFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.OmnipodOverviewFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.PodHistoryActivity;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.PodHistoryActivity_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.PodManagementActivity;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.PodManagementActivity_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.PodActivationWizardActivity;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.PodActivationWizardActivity_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.fragment.AttachPodInfoFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.fragment.FillPodInfoFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.fragment.InitializePodActionFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.fragment.InitializePodActionFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.fragment.InsertCannulaActionFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.fragment.InsertCannulaActionFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.fragment.PodActivatedInfoFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.fragment.PodActivationActionFragmentBase_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.viewmodel.InitializePodActionViewModel;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.viewmodel.InitializePodActionViewModel_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.viewmodel.InsertCannulaActionViewModel;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.activation.viewmodel.InsertCannulaActionViewModel_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.deactivation.PodDeactivationWizardActivity;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.deactivation.fragment.DeactivatePodActionFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.deactivation.fragment.DeactivatePodActionFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.deactivation.fragment.DeactivatePodInfoFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.deactivation.fragment.PodDeactivatedInfoFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.deactivation.fragment.PodDiscardedInfoFragment;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.deactivation.viewmodel.DeactivatePodActionViewModel;
import info.nightscout.androidaps.plugins.pump.omnipod.ui.wizard.deactivation.viewmodel.DeactivatePodActionViewModel_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.util.AapsOmnipodUtil;
import info.nightscout.androidaps.plugins.pump.omnipod.util.AapsOmnipodUtil_Factory;
import info.nightscout.androidaps.plugins.pump.omnipod.util.OmnipodAlertUtil;
import info.nightscout.androidaps.plugins.pump.omnipod.util.OmnipodAlertUtil_Factory;
import info.nightscout.androidaps.plugins.pump.virtual.VirtualPumpFragment;
import info.nightscout.androidaps.plugins.pump.virtual.VirtualPumpFragment_MembersInjector;
import info.nightscout.androidaps.plugins.pump.virtual.VirtualPumpPlugin;
import info.nightscout.androidaps.plugins.pump.virtual.VirtualPumpPlugin_Factory;
import info.nightscout.androidaps.plugins.sensitivity.SensitivityAAPSPlugin;
import info.nightscout.androidaps.plugins.sensitivity.SensitivityAAPSPlugin_Factory;
import info.nightscout.androidaps.plugins.sensitivity.SensitivityOref1Plugin;
import info.nightscout.androidaps.plugins.sensitivity.SensitivityOref1Plugin_Factory;
import info.nightscout.androidaps.plugins.sensitivity.SensitivityWeightedAveragePlugin;
import info.nightscout.androidaps.plugins.sensitivity.SensitivityWeightedAveragePlugin_Factory;
import info.nightscout.androidaps.plugins.source.BGSourceFragment;
import info.nightscout.androidaps.plugins.source.BGSourceFragment_MembersInjector;
import info.nightscout.androidaps.plugins.source.DexcomPlugin;
import info.nightscout.androidaps.plugins.source.DexcomPlugin_Factory;
import info.nightscout.androidaps.plugins.source.EversensePlugin;
import info.nightscout.androidaps.plugins.source.EversensePlugin_Factory;
import info.nightscout.androidaps.plugins.source.GlimpPlugin;
import info.nightscout.androidaps.plugins.source.GlimpPlugin_Factory;
import info.nightscout.androidaps.plugins.source.MM640gPlugin;
import info.nightscout.androidaps.plugins.source.MM640gPlugin_Factory;
import info.nightscout.androidaps.plugins.source.NSClientSourcePlugin;
import info.nightscout.androidaps.plugins.source.NSClientSourcePlugin_Factory;
import info.nightscout.androidaps.plugins.source.PoctechPlugin;
import info.nightscout.androidaps.plugins.source.PoctechPlugin_Factory;
import info.nightscout.androidaps.plugins.source.RandomBgPlugin;
import info.nightscout.androidaps.plugins.source.RandomBgPlugin_Factory;
import info.nightscout.androidaps.plugins.source.TomatoPlugin;
import info.nightscout.androidaps.plugins.source.TomatoPlugin_Factory;
import info.nightscout.androidaps.plugins.source.XdripPlugin;
import info.nightscout.androidaps.plugins.source.XdripPlugin_Factory;
import info.nightscout.androidaps.plugins.treatments.CarbsGenerator;
import info.nightscout.androidaps.plugins.treatments.CarbsGenerator_Factory;
import info.nightscout.androidaps.plugins.treatments.TreatmentService;
import info.nightscout.androidaps.plugins.treatments.TreatmentService_MembersInjector;
import info.nightscout.androidaps.plugins.treatments.TreatmentsFragment;
import info.nightscout.androidaps.plugins.treatments.TreatmentsFragment_MembersInjector;
import info.nightscout.androidaps.plugins.treatments.TreatmentsPlugin;
import info.nightscout.androidaps.plugins.treatments.TreatmentsPlugin_Factory;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsBolusFragment;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsBolusFragment_MembersInjector;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment_MembersInjector;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsExtendedBolusesFragment;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsExtendedBolusesFragment_MembersInjector;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsProfileSwitchFragment;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsProfileSwitchFragment_MembersInjector;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsTempTargetFragment;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsTempTargetFragment_MembersInjector;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsTemporaryBasalsFragment;
import info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsTemporaryBasalsFragment_MembersInjector;
import info.nightscout.androidaps.queue.CommandQueue;
import info.nightscout.androidaps.queue.CommandQueue_Factory;
import info.nightscout.androidaps.queue.commands.CommandBolus;
import info.nightscout.androidaps.queue.commands.CommandBolus_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandCancelExtendedBolus;
import info.nightscout.androidaps.queue.commands.CommandCancelExtendedBolus_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandCancelTempBasal;
import info.nightscout.androidaps.queue.commands.CommandCancelTempBasal_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandCustomCommand;
import info.nightscout.androidaps.queue.commands.CommandCustomCommand_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandExtendedBolus;
import info.nightscout.androidaps.queue.commands.CommandExtendedBolus_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandInsightSetTBROverNotification;
import info.nightscout.androidaps.queue.commands.CommandInsightSetTBROverNotification_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandLoadEvents;
import info.nightscout.androidaps.queue.commands.CommandLoadEvents_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandLoadHistory;
import info.nightscout.androidaps.queue.commands.CommandLoadHistory_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandLoadTDDs;
import info.nightscout.androidaps.queue.commands.CommandLoadTDDs_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandReadStatus;
import info.nightscout.androidaps.queue.commands.CommandReadStatus_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandSMBBolus;
import info.nightscout.androidaps.queue.commands.CommandSMBBolus_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandSetProfile;
import info.nightscout.androidaps.queue.commands.CommandSetProfile_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandSetUserSettings;
import info.nightscout.androidaps.queue.commands.CommandSetUserSettings_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandStartPump;
import info.nightscout.androidaps.queue.commands.CommandStartPump_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandStopPump;
import info.nightscout.androidaps.queue.commands.CommandStopPump_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandTempBasalAbsolute;
import info.nightscout.androidaps.queue.commands.CommandTempBasalAbsolute_MembersInjector;
import info.nightscout.androidaps.queue.commands.CommandTempBasalPercent;
import info.nightscout.androidaps.queue.commands.CommandTempBasalPercent_MembersInjector;
import info.nightscout.androidaps.queue.commands.Command_MembersInjector;
import info.nightscout.androidaps.receivers.AutoStartReceiver;
import info.nightscout.androidaps.receivers.AutoStartReceiver_MembersInjector;
import info.nightscout.androidaps.receivers.BTReceiver;
import info.nightscout.androidaps.receivers.BTReceiver_MembersInjector;
import info.nightscout.androidaps.receivers.ChargingStateReceiver;
import info.nightscout.androidaps.receivers.ChargingStateReceiver_MembersInjector;
import info.nightscout.androidaps.receivers.DataReceiver;
import info.nightscout.androidaps.receivers.DataReceiver_MembersInjector;
import info.nightscout.androidaps.receivers.KeepAliveReceiver;
import info.nightscout.androidaps.receivers.KeepAliveReceiver_MembersInjector;
import info.nightscout.androidaps.receivers.NetworkChangeReceiver;
import info.nightscout.androidaps.receivers.NetworkChangeReceiver_MembersInjector;
import info.nightscout.androidaps.receivers.ReceiverStatusStore;
import info.nightscout.androidaps.receivers.ReceiverStatusStore_Factory;
import info.nightscout.androidaps.receivers.SmsReceiver;
import info.nightscout.androidaps.receivers.TimeDateOrTZChangeReceiver;
import info.nightscout.androidaps.receivers.TimeDateOrTZChangeReceiver_MembersInjector;
import info.nightscout.androidaps.services.AlarmSoundService;
import info.nightscout.androidaps.services.AlarmSoundServiceHelper;
import info.nightscout.androidaps.services.AlarmSoundServiceHelper_Factory;
import info.nightscout.androidaps.services.AlarmSoundService_MembersInjector;
import info.nightscout.androidaps.services.DataService;
import info.nightscout.androidaps.services.DataService_MembersInjector;
import info.nightscout.androidaps.services.LastLocationDataContainer;
import info.nightscout.androidaps.services.LastLocationDataContainer_Factory;
import info.nightscout.androidaps.services.LocationService;
import info.nightscout.androidaps.services.LocationServiceHelper;
import info.nightscout.androidaps.services.LocationServiceHelper_Factory;
import info.nightscout.androidaps.services.LocationService_MembersInjector;
import info.nightscout.androidaps.setupwizard.SWDefinition;
import info.nightscout.androidaps.setupwizard.SWDefinition_Factory;
import info.nightscout.androidaps.setupwizard.SWEventListener;
import info.nightscout.androidaps.setupwizard.SWScreen;
import info.nightscout.androidaps.setupwizard.SWScreen_MembersInjector;
import info.nightscout.androidaps.setupwizard.SetupWizardActivity;
import info.nightscout.androidaps.setupwizard.SetupWizardActivity_MembersInjector;
import info.nightscout.androidaps.setupwizard.elements.SWBreak;
import info.nightscout.androidaps.setupwizard.elements.SWButton;
import info.nightscout.androidaps.setupwizard.elements.SWEditEncryptedPassword;
import info.nightscout.androidaps.setupwizard.elements.SWEditNumberWithUnits;
import info.nightscout.androidaps.setupwizard.elements.SWEditNumberWithUnits_MembersInjector;
import info.nightscout.androidaps.setupwizard.elements.SWEditString;
import info.nightscout.androidaps.setupwizard.elements.SWEditUrl;
import info.nightscout.androidaps.setupwizard.elements.SWFragment;
import info.nightscout.androidaps.setupwizard.elements.SWHtmlLink;
import info.nightscout.androidaps.setupwizard.elements.SWInfotext;
import info.nightscout.androidaps.setupwizard.elements.SWItem;
import info.nightscout.androidaps.setupwizard.elements.SWItem_MembersInjector;
import info.nightscout.androidaps.setupwizard.elements.SWPlugin;
import info.nightscout.androidaps.setupwizard.elements.SWPlugin_MembersInjector;
import info.nightscout.androidaps.setupwizard.elements.SWRadioButton;
import info.nightscout.androidaps.skins.SkinButtonsOn;
import info.nightscout.androidaps.skins.SkinButtonsOn_Factory;
import info.nightscout.androidaps.skins.SkinClassic;
import info.nightscout.androidaps.skins.SkinClassic_Factory;
import info.nightscout.androidaps.skins.SkinInterface;
import info.nightscout.androidaps.skins.SkinLargeDisplay;
import info.nightscout.androidaps.skins.SkinLargeDisplay_Factory;
import info.nightscout.androidaps.skins.SkinListPreference;
import info.nightscout.androidaps.skins.SkinListPreference_MembersInjector;
import info.nightscout.androidaps.skins.SkinLowRes;
import info.nightscout.androidaps.skins.SkinLowRes_Factory;
import info.nightscout.androidaps.skins.SkinProvider;
import info.nightscout.androidaps.skins.SkinProvider_Factory;
import info.nightscout.androidaps.utils.ActivityMonitor;
import info.nightscout.androidaps.utils.ActivityMonitor_Factory;
import info.nightscout.androidaps.utils.AndroidPermission;
import info.nightscout.androidaps.utils.AndroidPermission_Factory;
import info.nightscout.androidaps.utils.CryptoUtil;
import info.nightscout.androidaps.utils.CryptoUtil_Factory;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.DateUtil_Factory;
import info.nightscout.androidaps.utils.DefaultValueHelper;
import info.nightscout.androidaps.utils.DefaultValueHelper_Factory;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.FabricPrivacy_Factory;
import info.nightscout.androidaps.utils.HardLimits;
import info.nightscout.androidaps.utils.HardLimits_Factory;
import info.nightscout.androidaps.utils.LocalAlertUtils;
import info.nightscout.androidaps.utils.LocalAlertUtils_Factory;
import info.nightscout.androidaps.utils.Profiler;
import info.nightscout.androidaps.utils.Profiler_Factory;
import info.nightscout.androidaps.utils.SntpClient;
import info.nightscout.androidaps.utils.SntpClient_Factory;
import info.nightscout.androidaps.utils.Translator;
import info.nightscout.androidaps.utils.Translator_Factory;
import info.nightscout.androidaps.utils.WarnColors;
import info.nightscout.androidaps.utils.WarnColors_Factory;
import info.nightscout.androidaps.utils.XdripCalibrations;
import info.nightscout.androidaps.utils.XdripCalibrations_Factory;
import info.nightscout.androidaps.utils.androidNotification.NotificationHolder;
import info.nightscout.androidaps.utils.androidNotification.NotificationHolder_Factory;
import info.nightscout.androidaps.utils.buildHelper.BuildHelper;
import info.nightscout.androidaps.utils.buildHelper.BuildHelper_Factory;
import info.nightscout.androidaps.utils.protection.PasswordCheck;
import info.nightscout.androidaps.utils.protection.PasswordCheck_Factory;
import info.nightscout.androidaps.utils.protection.ProtectionCheck;
import info.nightscout.androidaps.utils.protection.ProtectionCheck_Factory;
import info.nightscout.androidaps.utils.resources.IconsProvider;
import info.nightscout.androidaps.utils.resources.IconsProvider_Factory;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.resources.ResourceHelperImplementation;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import info.nightscout.androidaps.utils.stats.TddCalculator;
import info.nightscout.androidaps.utils.stats.TirCalculator;
import info.nightscout.androidaps.utils.stats.TirCalculator_Factory;
import info.nightscout.androidaps.utils.storage.Storage;
import info.nightscout.androidaps.utils.wizard.BolusWizard;
import info.nightscout.androidaps.utils.wizard.BolusWizard_MembersInjector;
import info.nightscout.androidaps.utils.wizard.QuickWizard;
import info.nightscout.androidaps.utils.wizard.QuickWizardEntry;
import info.nightscout.androidaps.utils.wizard.QuickWizardEntry_MembersInjector;
import info.nightscout.androidaps.utils.wizard.QuickWizard_Factory;
import java.util.List;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerAppComponent implements AppComponent {
  private final AppModule appModule;

  private final MainApp application;

  private Provider<ActivitiesModule_ContributesHistoryBrowseActivity.HistoryBrowseActivitySubcomponent.Factory> historyBrowseActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesInsightAlertActivity.InsightAlertActivitySubcomponent.Factory> insightAlertActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesInsightPairingActivity.InsightPairingActivitySubcomponent.Factory> insightPairingActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesInsightPairingInformationActivity.InsightPairingInformationActivitySubcomponent.Factory> insightPairingInformationActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesLogSettingActivity.LogSettingActivitySubcomponent.Factory> logSettingActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributeMainActivity.MainActivitySubcomponent.Factory> mainActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesMedtronicHistoryActivity.MedtronicHistoryActivitySubcomponent.Factory> medtronicHistoryActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesPreferencesActivity.PreferencesActivitySubcomponent.Factory> preferencesActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesQuickWizardListActivity.QuickWizardListActivitySubcomponent.Factory> quickWizardListActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesRequestDexcomPermissionActivity.RequestDexcomPermissionActivitySubcomponent.Factory> requestDexcomPermissionActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesRileyLinkStatusActivity.RileyLinkStatusActivitySubcomponent.Factory> rileyLinkStatusActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesRileyLinkBLEConfigActivity.RileyLinkBLEConfigActivitySubcomponent.Factory> rileyLinkBLEConfigActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesSetupWizardActivity.SetupWizardActivitySubcomponent.Factory> setupWizardActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesSingleFragmentActivity.SingleFragmentActivitySubcomponent.Factory> singleFragmentActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesSmsCommunicatorOtpActivity.SmsCommunicatorOtpActivitySubcomponent.Factory> smsCommunicatorOtpActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesStatsActivity.StatsActivitySubcomponent.Factory> statsActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesSurveyActivity.SurveyActivitySubcomponent.Factory> surveyActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesDefaultProfileActivity.ProfileHelperActivitySubcomponent.Factory> profileHelperActivitySubcomponentFactoryProvider;

  private Provider<ActivitiesModule_ContributesOpenHumansLoginActivity.OpenHumansLoginActivitySubcomponent.Factory> openHumansLoginActivitySubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesPreferencesFragment.MyPreferenceFragmentSubcomponent.Factory> myPreferenceFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesActionsFragment.ActionsFragmentSubcomponent.Factory> actionsFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesAutomationFragment.AutomationFragmentSubcomponent.Factory> automationFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesBGSourceFragment.BGSourceFragmentSubcomponent.Factory> bGSourceFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesComboFragment.ComboFragmentSubcomponent.Factory> comboFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesConfigBuilderFragment.ConfigBuilderFragmentSubcomponent.Factory> configBuilderFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesFoodFragment.FoodFragmentSubcomponent.Factory> foodFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesInsulinFragment.InsulinFragmentSubcomponent.Factory> insulinFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesLocalProfileFragment.LocalProfileFragmentSubcomponent.Factory> localProfileFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesObjectivesFragment.ObjectivesFragmentSubcomponent.Factory> objectivesFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesOpenAPSAMAFragment.OpenAPSAMAFragmentSubcomponent.Factory> openAPSAMAFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesOpenAPSSMBFragment.OpenAPSSMBFragmentSubcomponent.Factory> openAPSSMBFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesOverviewFragment.OverviewFragmentSubcomponent.Factory> overviewFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesLocalInsightFragment.LocalInsightFragmentSubcomponent.Factory> localInsightFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesLoopFragment.LoopFragmentSubcomponent.Factory> loopFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesMaintenanceFragment.MaintenanceFragmentSubcomponent.Factory> maintenanceFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesMedtronicFragment.MedtronicFragmentSubcomponent.Factory> medtronicFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesOmnipodFragment.OmnipodOverviewFragmentSubcomponent.Factory> omnipodOverviewFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesNSProfileFragment.NSProfileFragmentSubcomponent.Factory> nSProfileFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesNSClientFragment.NSClientFragmentSubcomponent.Factory> nSClientFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesSmsCommunicatorFragment.SmsCommunicatorFragmentSubcomponent.Factory> smsCommunicatorFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesWearFragment.WearFragmentSubcomponent.Factory> wearFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTidepoolFragment.TidepoolFragmentSubcomponent.Factory> tidepoolFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTreatmentsFragment.TreatmentsFragmentSubcomponent.Factory> treatmentsFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTreatmentsBolusFragment.TreatmentsBolusFragmentSubcomponent.Factory> treatmentsBolusFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTreatmentsTemporaryBasalsFragment.TreatmentsTemporaryBasalsFragmentSubcomponent.Factory> treatmentsTemporaryBasalsFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTreatmentsTempTargetFragment.TreatmentsTempTargetFragmentSubcomponent.Factory> treatmentsTempTargetFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTreatmentsExtendedBolusesFragment.TreatmentsExtendedBolusesFragmentSubcomponent.Factory> treatmentsExtendedBolusesFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTreatmentsCareportalFragment.TreatmentsCareportalFragmentSubcomponent.Factory> treatmentsCareportalFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTreatmentsProfileSwitchFragment.TreatmentsProfileSwitchFragmentSubcomponent.Factory> treatmentsProfileSwitchFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesVirtualPumpFragment.VirtualPumpFragmentSubcomponent.Factory> virtualPumpFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesOpenHumansFragment.OpenHumansFragmentSubcomponent.Factory> openHumansFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesCalibrationDialog.CalibrationDialogSubcomponent.Factory> calibrationDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesCarbsDialog.CarbsDialogSubcomponent.Factory> carbsDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesCareDialog.CareDialogSubcomponent.Factory> careDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesEditActionDialog.EditActionDialogSubcomponent.Factory> editActionDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesEditEventDialog.EditEventDialogSubcomponent.Factory> editEventDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesEditTriggerDialog.EditTriggerDialogSubcomponent.Factory> editTriggerDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesEditQuickWizardDialog.EditQuickWizardDialogSubcomponent.Factory> editQuickWizardDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesExtendedBolusDialog.ExtendedBolusDialogSubcomponent.Factory> extendedBolusDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesFillDialog.FillDialogSubcomponent.Factory> fillDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesChooseActionDialog.ChooseActionDialogSubcomponent.Factory> chooseActionDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesChooseTriggerDialog.ChooseTriggerDialogSubcomponent.Factory> chooseTriggerDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesInsulinDialog.InsulinDialogSubcomponent.Factory> insulinDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesUAMDialog.UAMDialogSubcomponent.Factory> uAMDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesLoopDialog.LoopDialogSubcomponent.Factory> loopDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesObjectivesExamDialog.ObjectivesExamDialogSubcomponent.Factory> objectivesExamDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesProfileSwitchDialog.ProfileSwitchDialogSubcomponent.Factory> profileSwitchDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTempBasalDialog.TempBasalDialogSubcomponent.Factory> tempBasalDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTempTargetDialog.TempTargetDialogSubcomponent.Factory> tempTargetDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesTreatmentDialog.TreatmentDialogSubcomponent.Factory> treatmentDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesWizardDialog.WizardDialogSubcomponent.Factory> wizardDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesWizardInfoDialog.WizardInfoDialogSubcomponent.Factory> wizardInfoDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesExchangeAuthTokenDialot.ExchangeAuthTokenDialogSubcomponent.Factory> exchangeAuthTokenDialogSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesPasswordCheck.PasswordCheckSubcomponent.Factory> passwordCheckSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesRileyLinkStatusGeneral.RileyLinkStatusGeneralFragmentSubcomponent.Factory> rileyLinkStatusGeneralFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesRileyLinkStatusHistoryFragment.RileyLinkStatusHistoryFragmentSubcomponent.Factory> rileyLinkStatusHistoryFragmentSubcomponentFactoryProvider;

  private Provider<FragmentsModule_ContributesRileyLinkStatusDeviceMedtronic.RileyLinkStatusDeviceMedtronicSubcomponent.Factory> rileyLinkStatusDeviceMedtronicSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesAutoStartReceiver.AutoStartReceiverSubcomponent.Factory> autoStartReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesBTReceiver.BTReceiverSubcomponent.Factory> bTReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesChargingStateReceiver.ChargingStateReceiverSubcomponent.Factory> chargingStateReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesDataReceiver.DataReceiverSubcomponent.Factory> dataReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesKeepAliveReceiver.KeepAliveReceiverSubcomponent.Factory> keepAliveReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesRileyLinkBluetoothStateReceiver.RileyLinkBluetoothStateReceiverSubcomponent.Factory> rileyLinkBluetoothStateReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesSmsReceiver.SmsReceiverSubcomponent.Factory> smsReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesTimeDateOrTZChangeReceiver.TimeDateOrTZChangeReceiverSubcomponent.Factory> timeDateOrTZChangeReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesCarbSuggestionReceiver.CarbSuggestionReceiverSubcomponent.Factory> carbSuggestionReceiverSubcomponentFactoryProvider;

  private Provider<ReceiversModule_ContributesRileyLinkBroadcastReceiver.RileyLinkBroadcastReceiverSubcomponent.Factory> rileyLinkBroadcastReceiverSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesAlarmSoundService.AlarmSoundServiceSubcomponent.Factory> alarmSoundServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesDataService.DataServiceSubcomponent.Factory> dataServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesDismissNotificationService.DismissNotificationServiceSubcomponent.Factory> dismissNotificationServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesDummyService.DummyServiceSubcomponent.Factory> dummyServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesLocationService.LocationServiceSubcomponent.Factory> locationServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesNSClientService.NSClientServiceSubcomponent.Factory> nSClientServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesWatchUpdaterService.WatchUpdaterServiceSubcomponent.Factory> watchUpdaterServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesInsightAlertService.InsightAlertServiceSubcomponent.Factory> insightAlertServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesInsightConnectionService.InsightConnectionServiceSubcomponent.Factory> insightConnectionServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesRileyLinkService.RileyLinkServiceSubcomponent.Factory> rileyLinkServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesRileyLinkMedtronicService.RileyLinkMedtronicServiceSubcomponent.Factory> rileyLinkMedtronicServiceSubcomponentFactoryProvider;

  private Provider<ServicesModule_ContributesRileyLinkOmnipodService.RileyLinkOmnipodServiceSubcomponent.Factory> rileyLinkOmnipodServiceSubcomponentFactoryProvider;

  private Provider<AutomationModule_AutomationEventInjector.AutomationEventSubcomponent.Factory> automationEventSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerInjector.TriggerSubcomponent.Factory> triggerSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerAutosensValueInjector.TriggerAutosensValueSubcomponent.Factory> triggerAutosensValueSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerBgInjector.TriggerBgSubcomponent.Factory> triggerBgSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerBolusAgoInjector.TriggerBolusAgoSubcomponent.Factory> triggerBolusAgoSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerCOBInjector.TriggerCOBSubcomponent.Factory> triggerCOBSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerConnectorInjector.TriggerConnectorSubcomponent.Factory> triggerConnectorSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerDeltaInjector.TriggerDeltaSubcomponent.Factory> triggerDeltaSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerDummyInjector.TriggerDummySubcomponent.Factory> triggerDummySubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerIobInjector.TriggerIobSubcomponent.Factory> triggerIobSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerLocationInjector.TriggerLocationSubcomponent.Factory> triggerLocationSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerProfilePercentInjector.TriggerProfilePercentSubcomponent.Factory> triggerProfilePercentSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerPumpLastConnectionInjector.TriggerPumpLastConnectionSubcomponent.Factory> triggerPumpLastConnectionSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerBTDeviceInjector.TriggerBTDeviceSubcomponent.Factory> triggerBTDeviceSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerRecurringTimeInjector.TriggerRecurringTimeSubcomponent.Factory> triggerRecurringTimeSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerTempTargetInjector.TriggerTempTargetSubcomponent.Factory> triggerTempTargetSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerTime.TriggerTimeSubcomponent.Factory> triggerTimeSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerTimeRangeInjector.TriggerTimeRangeSubcomponent.Factory> triggerTimeRangeSubcomponentFactoryProvider;

  private Provider<AutomationModule_TriggerWifiSsidInjector.TriggerWifiSsidSubcomponent.Factory> triggerWifiSsidSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionInjector.ActionSubcomponent.Factory> actionSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionLoopDisableInjector.ActionLoopDisableSubcomponent.Factory> actionLoopDisableSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionLoopEnableInjector.ActionLoopEnableSubcomponent.Factory> actionLoopEnableSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionLoopResumeInjector.ActionLoopResumeSubcomponent.Factory> actionLoopResumeSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionLoopSuspendInjector.ActionLoopSuspendSubcomponent.Factory> actionLoopSuspendSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionNotificationInjector.ActionNotificationSubcomponent.Factory> actionNotificationSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionAlarmInjector.ActionAlarmSubcomponent.Factory> actionAlarmSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionProfileSwitchInjector.ActionProfileSwitchSubcomponent.Factory> actionProfileSwitchSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionProfileSwitchPercentInjector.ActionProfileSwitchPercentSubcomponent.Factory> actionProfileSwitchPercentSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionSendSMSInjector.ActionSendSMSSubcomponent.Factory> actionSendSMSSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionStartTempTargetInjector.ActionStartTempTargetSubcomponent.Factory> actionStartTempTargetSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionStopTempTargetInjector.ActionStopTempTargetSubcomponent.Factory> actionStopTempTargetSubcomponentFactoryProvider;

  private Provider<AutomationModule_ActionDummyInjector.ActionDummySubcomponent.Factory> actionDummySubcomponentFactoryProvider;

  private Provider<AutomationModule_ElementInjector.ElementSubcomponent.Factory> elementSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputBgInjector.InputBgSubcomponent.Factory> inputBgSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputButtonInjector.InputButtonSubcomponent.Factory> inputButtonSubcomponentFactoryProvider;

  private Provider<AutomationModule_ComparatorInjector.ComparatorSubcomponent.Factory> comparatorSubcomponentFactoryProvider;

  private Provider<AutomationModule_ComparatorConnectInjector.ComparatorConnectSubcomponent.Factory> comparatorConnectSubcomponentFactoryProvider;

  private Provider<AutomationModule_ComparatorExistsInjector.ComparatorExistsSubcomponent.Factory> comparatorExistsSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputDateTimeInjector.InputDateTimeSubcomponent.Factory> inputDateTimeSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputDeltaInjector.InputDeltaSubcomponent.Factory> inputDeltaSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputDoubleInjector.InputDoubleSubcomponent.Factory> inputDoubleSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputDropdownMenuInjector.InputDropdownMenuSubcomponent.Factory> inputDropdownMenuSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputDurationInjector.InputDurationSubcomponent.Factory> inputDurationSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputInsulinInjector.InputInsulinSubcomponent.Factory> inputInsulinSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputLocationModeInjector.InputLocationModeSubcomponent.Factory> inputLocationModeSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputPercentInjector.InputPercentSubcomponent.Factory> inputPercentSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputProfileNameInjector.InputProfileNameSubcomponent.Factory> inputProfileNameSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputStringInjector.InputStringSubcomponent.Factory> inputStringSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputTempTargetInjector.InputTempTargetSubcomponent.Factory> inputTempTargetSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputTimeRangeInjector.InputTimeRangeSubcomponent.Factory> inputTimeRangeSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputTimeInjector.InputTimeSubcomponent.Factory> inputTimeSubcomponentFactoryProvider;

  private Provider<AutomationModule_InputWeekDayInjector.InputWeekDaySubcomponent.Factory> inputWeekDaySubcomponentFactoryProvider;

  private Provider<AutomationModule_LabelWithElementInjector.LabelWithElementSubcomponent.Factory> labelWithElementSubcomponentFactoryProvider;

  private Provider<AutomationModule_StaticLabelInjector.StaticLabelSubcomponent.Factory> staticLabelSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandQueueInjector.CommandQueueSubcomponent.Factory> commandQueueSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandBolusInjector.CommandBolusSubcomponent.Factory> commandBolusSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandCancelExtendedBolusInjector.CommandCancelExtendedBolusSubcomponent.Factory> commandCancelExtendedBolusSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandCancelTempBasalInjector.CommandCancelTempBasalSubcomponent.Factory> commandCancelTempBasalSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandExtendedBolusInjector.CommandExtendedBolusSubcomponent.Factory> commandExtendedBolusSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandInsightSetTBROverNotificationInjector.CommandInsightSetTBROverNotificationSubcomponent.Factory> commandInsightSetTBROverNotificationSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandLoadEventsInjector.CommandLoadEventsSubcomponent.Factory> commandLoadEventsSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandLoadHistoryInjector.CommandLoadHistorySubcomponent.Factory> commandLoadHistorySubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandLoadTDDsInjector.CommandLoadTDDsSubcomponent.Factory> commandLoadTDDsSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandReadStatusInjector.CommandReadStatusSubcomponent.Factory> commandReadStatusSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandSetProfileInjector.CommandSetProfileSubcomponent.Factory> commandSetProfileSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandCommandSMBBolusInjector.CommandSMBBolusSubcomponent.Factory> commandSMBBolusSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandStartPumpInjector.CommandStartPumpSubcomponent.Factory> commandStartPumpSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandStopPumpInjector.CommandStopPumpSubcomponent.Factory> commandStopPumpSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandTempBasalAbsoluteInjector.CommandTempBasalAbsoluteSubcomponent.Factory> commandTempBasalAbsoluteSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandTempBasalPercentInjector.CommandTempBasalPercentSubcomponent.Factory> commandTempBasalPercentSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandSetUserSettingsInjector.CommandSetUserSettingsSubcomponent.Factory> commandSetUserSettingsSubcomponentFactoryProvider;

  private Provider<CommandQueueModule_CommandCustomCommandInjector.CommandCustomCommandSubcomponent.Factory> commandCustomCommandSubcomponentFactoryProvider;

  private Provider<ObjectivesModule_ObjectiveInjector.ObjectiveSubcomponent.Factory> objectiveSubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective0Injector.Objective0Subcomponent.Factory> objective0SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective1Injector.Objective1Subcomponent.Factory> objective1SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective2Injector.Objective2Subcomponent.Factory> objective2SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective3Injector.Objective3Subcomponent.Factory> objective3SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective4Injector.Objective4Subcomponent.Factory> objective4SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective5Injector.Objective5Subcomponent.Factory> objective5SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective6Injector.Objective6Subcomponent.Factory> objective6SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective7Injector.Objective7Subcomponent.Factory> objective7SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective8Injector.Objective8Subcomponent.Factory> objective8SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective9Injector.Objective9Subcomponent.Factory> objective9SubcomponentFactoryProvider;

  private Provider<ObjectivesModule_Objective10Injector.Objective10Subcomponent.Factory> objective10SubcomponentFactoryProvider;

  private Provider<WizardModule_SwBreakInjector.SWBreakSubcomponent.Factory> sWBreakSubcomponentFactoryProvider;

  private Provider<WizardModule_SwButtonInjector.SWButtonSubcomponent.Factory> sWButtonSubcomponentFactoryProvider;

  private Provider<WizardModule_SwEditNumberWithUnitsInjector.SWEditNumberWithUnitsSubcomponent.Factory> sWEditNumberWithUnitsSubcomponentFactoryProvider;

  private Provider<WizardModule_SwEditStringInjector.SWEditStringSubcomponent.Factory> sWEditStringSubcomponentFactoryProvider;

  private Provider<WizardModule_SwEditEncryptedPasswordInjector.SWEditEncryptedPasswordSubcomponent.Factory> sWEditEncryptedPasswordSubcomponentFactoryProvider;

  private Provider<WizardModule_SwEditUrlInjector.SWEditUrlSubcomponent.Factory> sWEditUrlSubcomponentFactoryProvider;

  private Provider<WizardModule_SwFragmentInjector.SWFragmentSubcomponent.Factory> sWFragmentSubcomponentFactoryProvider;

  private Provider<WizardModule_SwHtmlLinkInjector.SWHtmlLinkSubcomponent.Factory> sWHtmlLinkSubcomponentFactoryProvider;

  private Provider<WizardModule_SwInfotextInjector.SWInfotextSubcomponent.Factory> sWInfotextSubcomponentFactoryProvider;

  private Provider<WizardModule_SwItemInjector.SWItemSubcomponent.Factory> sWItemSubcomponentFactoryProvider;

  private Provider<WizardModule_SwPluginInjector.SWPluginSubcomponent.Factory> sWPluginSubcomponentFactoryProvider;

  private Provider<WizardModule_SwRadioButtonInjector.SWRadioButtonSubcomponent.Factory> sWRadioButtonSubcomponentFactoryProvider;

  private Provider<WizardModule_SwScreenInjector.SWScreenSubcomponent.Factory> sWScreenSubcomponentFactoryProvider;

  private Provider<WizardModule_SwEventListenerInjector.SWEventListenerSubcomponent.Factory> sWEventListenerSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_ServiceTaskProvider.ServiceTaskSubcomponent.Factory> serviceTaskSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_PumpTaskProvider.PumpTaskSubcomponent.Factory> pumpTaskSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_DiscoverGattServicesTaskProvider.DiscoverGattServicesTaskSubcomponent.Factory> discoverGattServicesTaskSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_InitializePumpManagerTaskProvider.InitializePumpManagerTaskSubcomponent.Factory> initializePumpManagerTaskSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_ResetRileyLinkConfigurationTaskProvider.ResetRileyLinkConfigurationTaskSubcomponent.Factory> resetRileyLinkConfigurationTaskSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_WakeAndTuneTaskProvider.WakeAndTuneTaskSubcomponent.Factory> wakeAndTuneTaskSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_RadioResponseProvider.RadioResponseSubcomponent.Factory> radioResponseSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_RileyLinkBLEProvider.RileyLinkBLESubcomponent.Factory> rileyLinkBLESubcomponentFactoryProvider;

  private Provider<RileyLinkModule_RfSpyProvider.RFSpySubcomponent.Factory> rFSpySubcomponentFactoryProvider;

  private Provider<RileyLinkModule_SendAndListenProvider.SendAndListenSubcomponent.Factory> sendAndListenSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_SetPreambleProvider.SetPreambleSubcomponent.Factory> setPreambleSubcomponentFactoryProvider;

  private Provider<RileyLinkModule_RadioPacketProvider.RadioPacketSubcomponent.Factory> radioPacketSubcomponentFactoryProvider;

  private Provider<MedtronicModule_MedtronicCommunicationManagerProvider.MedtronicCommunicationManagerSubcomponent.Factory> medtronicCommunicationManagerSubcomponentFactoryProvider;

  private Provider<MedtronicModule_MedtronicUITaskProvider.MedtronicUITaskSubcomponent.Factory> medtronicUITaskSubcomponentFactoryProvider;

  private Provider<OmnipodModule_ContributesPodManagementActivity.PodManagementActivitySubcomponent.Factory> podManagementActivitySubcomponentFactoryProvider;

  private Provider<OmnipodModule_ContributesPodHistoryActivity.PodHistoryActivitySubcomponent.Factory> podHistoryActivitySubcomponentFactoryProvider;

  private Provider<OmnipodModule_ContributesActivationWizardActivity.PodActivationWizardActivitySubcomponent.Factory> podActivationWizardActivitySubcomponentFactoryProvider;

  private Provider<OmnipodModule_ContributesDeactivationWizardActivity.PodDeactivationWizardActivitySubcomponent.Factory> podDeactivationWizardActivitySubcomponentFactoryProvider;

  private Provider<OmnipodModule_OmnipodCommunicationManagerProvider.OmnipodRileyLinkCommunicationManagerSubcomponent.Factory> omnipodRileyLinkCommunicationManagerSubcomponentFactoryProvider;

  private Provider<OmnipodModule_RlHistoryItemOmnipod.RLHistoryItemOmnipodSubcomponent.Factory> rLHistoryItemOmnipodSubcomponentFactoryProvider;

  private Provider<APSModule_LoggerCallbackInjector.LoggerCallbackSubcomponent.Factory> loggerCallbackSubcomponentFactoryProvider;

  private Provider<APSModule_DetermineBasalResultSMBInjector.DetermineBasalResultSMBSubcomponent.Factory> determineBasalResultSMBSubcomponentFactoryProvider;

  private Provider<APSModule_DetermineBasalResultAMAInjector.DetermineBasalResultAMASubcomponent.Factory> determineBasalResultAMASubcomponentFactoryProvider;

  private Provider<APSModule_DetermineBasalAdapterAMAJSInjector.DetermineBasalAdapterAMAJSSubcomponent.Factory> determineBasalAdapterAMAJSSubcomponentFactoryProvider;

  private Provider<APSModule_DetermineBasalAdapterSMBJSInjector.DetermineBasalAdapterSMBJSSubcomponent.Factory> determineBasalAdapterSMBJSSubcomponentFactoryProvider;

  private Provider<APSModule_IobCobThreadInjector.IobCobThreadSubcomponent.Factory> iobCobThreadSubcomponentFactoryProvider;

  private Provider<APSModule_IobCobOref1ThreadInjector.IobCobOref1ThreadSubcomponent.Factory> iobCobOref1ThreadSubcomponentFactoryProvider;

  private Provider<PreferencesModule_CryptoUtilInjector.CryptoUtilSubcomponent.Factory> cryptoUtilSubcomponentFactoryProvider;

  private Provider<PreferencesModule_EncryptedPrefsFormatInjector.EncryptedPrefsFormatSubcomponent.Factory> encryptedPrefsFormatSubcomponentFactoryProvider;

  private Provider<PreferencesModule_ClassicPrefsFormatInjector.ClassicPrefsFormatSubcomponent.Factory> classicPrefsFormatSubcomponentFactoryProvider;

  private Provider<PreferencesModule_PrefImportListProviderInjector.PrefFileListProviderSubcomponent.Factory> prefFileListProviderSubcomponentFactoryProvider;

  private Provider<OverviewModule_NotificationWithActionInjector.NotificationWithActionSubcomponent.Factory> notificationWithActionSubcomponentFactoryProvider;

  private Provider<OverviewModule_GraphDataInjector.GraphDataSubcomponent.Factory> graphDataSubcomponentFactoryProvider;

  private Provider<DataClassesModule_GlucoseStatusInjector.GlucoseStatusSubcomponent.Factory> glucoseStatusSubcomponentFactoryProvider;

  private Provider<DataClassesModule_DatabaseHelperInjector.DatabaseHelperSubcomponent.Factory> databaseHelperSubcomponentFactoryProvider;

  private Provider<DataClassesModule_TreatmentServiceInjector.TreatmentServiceSubcomponent.Factory> treatmentServiceSubcomponentFactoryProvider;

  private Provider<DataClassesModule_FoodServiceInjector.FoodServiceSubcomponent.Factory> foodServiceSubcomponentFactoryProvider;

  private Provider<DataClassesModule_BolusWizardInjector.BolusWizardSubcomponent.Factory> bolusWizardSubcomponentFactoryProvider;

  private Provider<DataClassesModule_QuickWizardEntryInjector.QuickWizardEntrySubcomponent.Factory> quickWizardEntrySubcomponentFactoryProvider;

  private Provider<SMSModule_AuthRequestInjector.AuthRequestSubcomponent.Factory> authRequestSubcomponentFactoryProvider;

  private Provider<UIModule_SkinListPreferenceInjector.SkinListPreferenceSubcomponent.Factory> skinListPreferenceSubcomponentFactoryProvider;

  private Provider<CoreReceiversModule_ContributesNetworkChangeReceiver.NetworkChangeReceiverSubcomponent.Factory> networkChangeReceiverSubcomponentFactoryProvider;

  private Provider<CoreFragmentsModule_ContributesPrefImportListActivity.PrefImportListActivitySubcomponent.Factory> prefImportListActivitySubcomponentFactoryProvider;

  private Provider<CoreFragmentsModule_ContributesTDDStatsActivity.TDDStatsActivitySubcomponent.Factory> tDDStatsActivitySubcomponentFactoryProvider;

  private Provider<CoreFragmentsModule_ContributeBolusProgressHelperActivity.BolusProgressHelperActivitySubcomponent.Factory> bolusProgressHelperActivitySubcomponentFactoryProvider;

  private Provider<CoreFragmentsModule_ContributeErrorHelperActivity.ErrorHelperActivitySubcomponent.Factory> errorHelperActivitySubcomponentFactoryProvider;

  private Provider<CoreFragmentsModule_ContributesBolusProgressDialog.BolusProgressDialogSubcomponent.Factory> bolusProgressDialogSubcomponentFactoryProvider;

  private Provider<CoreFragmentsModule_ContributesErrorDialog.ErrorDialogSubcomponent.Factory> errorDialogSubcomponentFactoryProvider;

  private Provider<CoreFragmentsModule_ContributesNtpProgressDialog.NtpProgressDialogSubcomponent.Factory> ntpProgressDialogSubcomponentFactoryProvider;

  private Provider<CoreFragmentsModule_ContributesProfileViewerDialog.ProfileViewerDialogSubcomponent.Factory> profileViewerDialogSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_PumpEnactResultInjector.PumpEnactResultSubcomponent.Factory> pumpEnactResultSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_ApsResultInjector.APSResultSubcomponent.Factory> aPSResultSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_AutosensDataInjector.AutosensDataSubcomponent.Factory> autosensDataSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_ProfileInjector.ProfileSubcomponent.Factory> profileSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_ProfileStoreInjector.ProfileStoreSubcomponent.Factory> profileStoreSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_BgReadingInjector.BgReadingSubcomponent.Factory> bgReadingSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_TreatmentInjector.TreatmentSubcomponent.Factory> treatmentSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_ProfileSwitchInjector.ProfileSwitchSubcomponent.Factory> profileSwitchSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_TemporaryBasalInjector.TemporaryBasalSubcomponent.Factory> temporaryBasalSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_CareportalEventInjector.CareportalEventSubcomponent.Factory> careportalEventSubcomponentFactoryProvider;

  private Provider<CoreDataClassesModule_ExtendedBolusInjector.ExtendedBolusSubcomponent.Factory> extendedBolusSubcomponentFactoryProvider;

  private Provider<DanaModule_ContributesDanaRFragment.DanaFragmentSubcomponent.Factory> danaFragmentSubcomponentFactoryProvider;

  private Provider<DanaModule_ContributeDanaRHistoryActivity.DanaHistoryActivitySubcomponent.Factory> danaHistoryActivitySubcomponentFactoryProvider;

  private Provider<DanaModule_ContributeDanaRUserOptionsActivity.DanaUserOptionsActivitySubcomponent.Factory> danaUserOptionsActivitySubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMessageBase.MessageBaseSubcomponent.Factory> messageBaseSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetTime.MsgSetTimeSubcomponent.Factory> msgSetTimeSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgBolusProgress.MsgBolusProgressSubcomponent.Factory> msgBolusProgressSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgBolusStart.MsgBolusStartSubcomponent.Factory> msgBolusStartSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgBolusStartWithSpeed.MsgBolusStartWithSpeedSubcomponent.Factory> msgBolusStartWithSpeedSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgBolusStop.MsgBolusStopSubcomponent.Factory> msgBolusStopSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgCheckValue.MsgCheckValueSubcomponent.Factory> msgCheckValueSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgError.MsgErrorSubcomponent.Factory> msgErrorSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryAll.MsgHistoryAllSubcomponent.Factory> msgHistoryAllSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryAllDone.MsgHistoryAllDoneSubcomponent.Factory> msgHistoryAllDoneSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryDone.MsgHistoryDoneSubcomponent.Factory> msgHistoryDoneSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryNewDone.MsgHistoryNewDoneSubcomponent.Factory> msgHistoryNewDoneSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgInitConnStatusBasic.MsgInitConnStatusBasicSubcomponent.Factory> msgInitConnStatusBasicSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgInitConnStatusBolus.MsgInitConnStatusBolusSubcomponent.Factory> msgInitConnStatusBolusSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgInitConnStatusOption.MsgInitConnStatusOptionSubcomponent.Factory> msgInitConnStatusOptionSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgInitConnStatusTime.MsgInitConnStatusTimeSubcomponent.Factory> msgInitConnStatusTimeSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgPCCommStart.MsgPCCommStartSubcomponent.Factory> msgPCCommStartSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgPCCommStop.MsgPCCommStopSubcomponent.Factory> msgPCCommStopSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetActivateBasalProfile.MsgSetActivateBasalProfileSubcomponent.Factory> msgSetActivateBasalProfileSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetBasalProfile.MsgSetBasalProfileSubcomponent.Factory> msgSetBasalProfileSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetCarbsEntry.MsgSetCarbsEntrySubcomponent.Factory> msgSetCarbsEntrySubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetExtendedBolusStart.MsgSetExtendedBolusStartSubcomponent.Factory> msgSetExtendedBolusStartSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetExtendedBolusStop.MsgSetExtendedBolusStopSubcomponent.Factory> msgSetExtendedBolusStopSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetSingleBasalProfile.MsgSetSingleBasalProfileSubcomponent.Factory> msgSetSingleBasalProfileSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetTempBasalStart.MsgSetTempBasalStartSubcomponent.Factory> msgSetTempBasalStartSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetTempBasalStop.MsgSetTempBasalStopSubcomponent.Factory> msgSetTempBasalStopSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetUserOptions.MsgSetUserOptionsSubcomponent.Factory> msgSetUserOptionsSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingActiveProfile.MsgSettingActiveProfileSubcomponent.Factory> msgSettingActiveProfileSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingBasal.MsgSettingBasalSubcomponent.Factory> msgSettingBasalSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingBasalProfileAll.MsgSettingBasalProfileAllSubcomponent.Factory> msgSettingBasalProfileAllSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingGlucose.MsgSettingGlucoseSubcomponent.Factory> msgSettingGlucoseSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingMaxValues.MsgSettingMaxValuesSubcomponent.Factory> msgSettingMaxValuesSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingMeal.MsgSettingMealSubcomponent.Factory> msgSettingMealSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingProfileRatios.MsgSettingProfileRatiosSubcomponent.Factory> msgSettingProfileRatiosSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingProfileRatiosAll.MsgSettingProfileRatiosAllSubcomponent.Factory> msgSettingProfileRatiosAllSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingPumpTime.MsgSettingPumpTimeSubcomponent.Factory> msgSettingPumpTimeSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingShippingInfo.MsgSettingShippingInfoSubcomponent.Factory> msgSettingShippingInfoSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingUserOptions.MsgSettingUserOptionsSubcomponent.Factory> msgSettingUserOptionsSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatus.MsgStatusSubcomponent.Factory> msgStatusSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatusBasic.MsgStatusBasicSubcomponent.Factory> msgStatusBasicSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatusBolusExtended.MsgStatusBolusExtendedSubcomponent.Factory> msgStatusBolusExtendedSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatusProfile.MsgStatusProfileSubcomponent.Factory> msgStatusProfileSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatusTempBasal.MsgStatusTempBasalSubcomponent.Factory> msgStatusTempBasalSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryBolus.MsgHistoryBolusSubcomponent.Factory> msgHistoryBolusSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryDailyInsulin.MsgHistoryDailyInsulinSubcomponent.Factory> msgHistoryDailyInsulinSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryGlucose.MsgHistoryGlucoseSubcomponent.Factory> msgHistoryGlucoseSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryAlarm.MsgHistoryAlarmSubcomponent.Factory> msgHistoryAlarmSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryError.MsgHistoryErrorSubcomponent.Factory> msgHistoryErrorSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryCarbo.MsgHistoryCarboSubcomponent.Factory> msgHistoryCarboSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryRefill.MsgHistoryRefillSubcomponent.Factory> msgHistoryRefillSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistorySuspend.MsgHistorySuspendSubcomponent.Factory> msgHistorySuspendSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryBasalHour.MsgHistoryBasalHourSubcomponent.Factory> msgHistoryBasalHourSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryNew.MsgHistoryNewSubcomponent.Factory> msgHistoryNewSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgCheckValue_v2.MsgCheckValue_v2Subcomponent.Factory> msgCheckValue_v2SubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgHistoryEvents_v2.MsgHistoryEvents_v2Subcomponent.Factory> msgHistoryEvents_v2SubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetAPSTempBasalStart_v2.MsgSetAPSTempBasalStart_v2Subcomponent.Factory> msgSetAPSTempBasalStart_v2SubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSetHistoryEntry_v2.MsgSetHistoryEntry_v2Subcomponent.Factory> msgSetHistoryEntry_v2SubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatusAPS_v2.MsgStatusAPS_v2Subcomponent.Factory> msgStatusAPS_v2SubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatusBolusExtended_v2.MsgStatusBolusExtended_v2Subcomponent.Factory> msgStatusBolusExtended_v2SubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatusTempBasal_v2.MsgStatusTempBasal_v2Subcomponent.Factory> msgStatusTempBasal_v2SubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgCheckValue_k.MsgCheckValue_kSubcomponent.Factory> msgCheckValue_kSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgInitConnStatusBasic_k.MsgInitConnStatusBasic_kSubcomponent.Factory> msgInitConnStatusBasic_kSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgInitConnStatusBolus_k.MsgInitConnStatusBolus_kSubcomponent.Factory> msgInitConnStatusBolus_kSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgInitConnStatusTime_k.MsgInitConnStatusTime_kSubcomponent.Factory> msgInitConnStatusTime_kSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingBasalProfileAll_k.MsgSettingBasalProfileAll_kSubcomponent.Factory> msgSettingBasalProfileAll_kSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgSettingBasal_k.MsgSettingBasal_kSubcomponent.Factory> msgSettingBasal_kSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatusBasic_k.MsgStatusBasic_kSubcomponent.Factory> msgStatusBasic_kSubcomponentFactoryProvider;

  private Provider<DanaRCommModule_ContributesMsgStatus_k.MsgStatus_kSubcomponent.Factory> msgStatus_kSubcomponentFactoryProvider;

  private Provider<DanaRServicesModule_ContributesAbstractDanaRExecutionService.AbstractDanaRExecutionServiceSubcomponent.Factory> abstractDanaRExecutionServiceSubcomponentFactoryProvider;

  private Provider<DanaRServicesModule_ContributesDanaRv2ExecutionService.DanaRv2ExecutionServiceSubcomponent.Factory> danaRv2ExecutionServiceSubcomponentFactoryProvider;

  private Provider<DanaRServicesModule_ContributesDanaRExecutionService.DanaRExecutionServiceSubcomponent.Factory> danaRExecutionServiceSubcomponentFactoryProvider;

  private Provider<DanaRServicesModule_ContributesDanaRKoreanExecutionService.DanaRKoreanExecutionServiceSubcomponent.Factory> danaRKoreanExecutionServiceSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet.DanaRS_PacketSubcomponent.Factory> danaRS_PacketSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponent.Factory> danaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Basal_Rate.DanaRS_Packet_Basal_Get_Basal_RateSubcomponent.Factory> danaRS_Packet_Basal_Get_Basal_RateSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Basal_Rate.DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponent.Factory> danaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Number.DanaRS_Packet_Basal_Get_Profile_NumberSubcomponent.Factory> danaRS_Packet_Basal_Get_Profile_NumberSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Basal_Rate.DanaRS_Packet_Basal_Set_Basal_RateSubcomponent.Factory> danaRS_Packet_Basal_Set_Basal_RateSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Basal_Rate.DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponent.Factory> danaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Number.DanaRS_Packet_Basal_Set_Profile_NumberSubcomponent.Factory> danaRS_Packet_Basal_Set_Profile_NumberSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_Off.DanaRS_Packet_Basal_Set_Suspend_OffSubcomponent.Factory> danaRS_Packet_Basal_Set_Suspend_OffSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_On.DanaRS_Packet_Basal_Set_Suspend_OnSubcomponent.Factory> danaRS_Packet_Basal_Set_Suspend_OnSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Temporary_Basal.DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponent.Factory> danaRS_Packet_Basal_Set_Temporary_BasalSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Temporary_Basal_State.DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponent.Factory> danaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Bolus_Option.DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponent.Factory> danaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Initial_Bolus.DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponent.Factory> danaRS_Packet_Bolus_Get_Initial_BolusSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Calculation_Information.DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponent.Factory> danaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponent.Factory> danaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_CIR_CF_Array.DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponent.Factory> danaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_24_CIR_CF_Array.DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponent.Factory> danaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Dual_Bolus.DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponent.Factory> danaRS_Packet_Bolus_Get_Dual_BolusSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus.DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponent.Factory> danaRS_Packet_Bolus_Get_Extended_BolusSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus_State.DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponent.Factory> danaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponent.Factory> danaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Step_Bolus_Information.DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponent.Factory> danaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Bolus_Option.DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponent.Factory> danaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Initial_Bolus.DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponent.Factory> danaRS_Packet_Bolus_Set_Initial_BolusSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_CIR_CF_Array.DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponent.Factory> danaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_24_CIR_CF_Array.DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponent.Factory> danaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Dual_Bolus.DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponent.Factory> danaRS_Packet_Bolus_Set_Dual_BolusSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus.DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponent.Factory> danaRS_Packet_Bolus_Set_Extended_BolusSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponent.Factory> danaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Start.DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponent.Factory> danaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Stop.DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponent.Factory> danaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Etc_Keep_Connection.DanaRS_Packet_Etc_Keep_ConnectionSubcomponent.Factory> danaRS_Packet_Etc_Keep_ConnectionSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Etc_Set_History_Save.DanaRS_Packet_Etc_Set_History_SaveSubcomponent.Factory> danaRS_Packet_Etc_Set_History_SaveSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Delivery_Status.DanaRS_Packet_General_Delivery_StatusSubcomponent.Factory> danaRS_Packet_General_Delivery_StatusSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Password.DanaRS_Packet_General_Get_PasswordSubcomponent.Factory> danaRS_Packet_General_Get_PasswordSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Initial_Screen_Information.DanaRS_Packet_General_Initial_Screen_InformationSubcomponent.Factory> danaRS_Packet_General_Initial_Screen_InformationSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Notify_Alarm.DanaRS_Packet_Notify_AlarmSubcomponent.Factory> danaRS_Packet_Notify_AlarmSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Complete.DanaRS_Packet_Notify_Delivery_CompleteSubcomponent.Factory> danaRS_Packet_Notify_Delivery_CompleteSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Rate_Display.DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponent.Factory> danaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Notify_Missed_Bolus_Alarm.DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponent.Factory> danaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_Time.DanaRS_Packet_Option_Get_Pump_TimeSubcomponent.Factory> danaRS_Packet_Option_Get_Pump_TimeSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_User_Option.DanaRS_Packet_Option_Get_User_OptionSubcomponent.Factory> danaRS_Packet_Option_Get_User_OptionSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_Time.DanaRS_Packet_Option_Set_Pump_TimeSubcomponent.Factory> danaRS_Packet_Option_Set_Pump_TimeSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_User_Option.DanaRS_Packet_Option_Set_User_OptionSubcomponent.Factory> danaRS_Packet_Option_Set_User_OptionSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_.DanaRS_Packet_History_Subcomponent.Factory> danaRS_Packet_History_SubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Alarm.DanaRS_Packet_History_AlarmSubcomponent.Factory> danaRS_Packet_History_AlarmSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_All_History.DanaRS_Packet_History_All_HistorySubcomponent.Factory> danaRS_Packet_History_All_HistorySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Basal.DanaRS_Packet_History_BasalSubcomponent.Factory> danaRS_Packet_History_BasalSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Blood_Glucose.DanaRS_Packet_History_Blood_GlucoseSubcomponent.Factory> danaRS_Packet_History_Blood_GlucoseSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Bolus.DanaRS_Packet_History_BolusSubcomponent.Factory> danaRS_Packet_History_BolusSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Review_Bolus_Avg.DanaRS_Packet_Review_Bolus_AvgSubcomponent.Factory> danaRS_Packet_Review_Bolus_AvgSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Carbohydrate.DanaRS_Packet_History_CarbohydrateSubcomponent.Factory> danaRS_Packet_History_CarbohydrateSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Daily.DanaRS_Packet_History_DailySubcomponent.Factory> danaRS_Packet_History_DailySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_More_Information.DanaRS_Packet_General_Get_More_InformationSubcomponent.Factory> danaRS_Packet_General_Get_More_InformationSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Pump_Check.DanaRS_Packet_General_Get_Pump_CheckSubcomponent.Factory> danaRS_Packet_General_Get_Pump_CheckSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Information.DanaRS_Packet_General_Get_Shipping_InformationSubcomponent.Factory> danaRS_Packet_General_Get_Shipping_InformationSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Today_Delivery_Total.DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponent.Factory> danaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_User_Time_Change_Flag.DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponent.Factory> danaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Prime.DanaRS_Packet_History_PrimeSubcomponent.Factory> danaRS_Packet_History_PrimeSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Refill.DanaRS_Packet_History_RefillSubcomponent.Factory> danaRS_Packet_History_RefillSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Set_History_Upload_Mode.DanaRS_Packet_General_Set_History_Upload_ModeSubcomponent.Factory> danaRS_Packet_General_Set_History_Upload_ModeSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponent.Factory> danaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Suspend.DanaRS_Packet_History_SuspendSubcomponent.Factory> danaRS_Packet_History_SuspendSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Temporary.DanaRS_Packet_History_TemporarySubcomponent.Factory> danaRS_Packet_History_TemporarySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_APS_Basal_Set_Temporary_Basal.DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponent.Factory> danaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_APS_History_Events.DanaRS_Packet_APS_History_EventsSubcomponent.Factory> danaRS_Packet_APS_History_EventsSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_APS_Set_Event_History.DanaRS_Packet_APS_Set_Event_HistorySubcomponent.Factory> danaRS_Packet_APS_Set_Event_HistorySubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Version.DanaRS_Packet_General_Get_Shipping_VersionSubcomponent.Factory> danaRS_Packet_General_Get_Shipping_VersionSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Review_Get_Pump_Dec_Ratio.DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponent.Factory> danaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponent.Factory> danaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider;

  private Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponent.Factory> danaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider;

  private Provider<DanaRSActivitiesModule_ContributesBLEScanActivity.BLEScanActivitySubcomponent.Factory> bLEScanActivitySubcomponentFactoryProvider;

  private Provider<DanaRSActivitiesModule_ContributesPairingHelperActivity.PairingHelperActivitySubcomponent.Factory> pairingHelperActivitySubcomponentFactoryProvider;

  private Provider<DanaRSActivitiesModule_ContributeEnterPinActivity.EnterPinActivitySubcomponent.Factory> enterPinActivitySubcomponentFactoryProvider;

  private Provider<DanaRSActivitiesModule_ContributesPairingProgressDialog.PairingProgressDialogSubcomponent.Factory> pairingProgressDialogSubcomponentFactoryProvider;

  private Provider<DanaRSServicesModule_ContributesDanaRSService.DanaRSServiceSubcomponent.Factory> danaRSServiceSubcomponentFactoryProvider;

  private Provider<OHUploaderModule_ContributesOHUploadWorkerInjector.OHUploadWorkerSubcomponent.Factory> oHUploadWorkerSubcomponentFactoryProvider;

  private Provider<MainApp> applicationProvider;

  private Provider<ResourceHelper> provideResourcesProvider;

  private Provider<SP> provideSharedPreferencesProvider;

  private Provider<L> lProvider;

  private Provider<AAPSLogger> provideAAPSLoggerProvider;

  private Provider<Config> configProvider;

  private Provider<PluginStore> pluginStoreProvider;

  private Provider<ActivityMonitor> activityMonitorProvider;

  private Provider<RxBusWrapper> rxBusWrapperProvider;

  private Provider<VersionCheckerUtils> versionCheckerUtilsProvider;

  private Provider<DatabaseHelperProvider> databaseHelperProvider;

  private Provider<UploadQueue> uploadQueueProvider;

  private Provider<ConfigBuilderPlugin> configBuilderPluginProvider;

  private Provider<RunningConfiguration> runningConfigurationProvider;

  private Provider<NSUpload> nSUploadProvider;

  private Provider<FabricPrivacy> fabricPrivacyProvider;

  private Provider<ProfileFunction> provideProfileFunctionProvider;

  private Provider<DateUtil> dateUtilProvider;

  private Provider<TreatmentsPlugin> treatmentsPluginProvider;

  private Provider<SensitivityOref1Plugin> sensitivityOref1PluginProvider;

  private Provider<SensitivityAAPSPlugin> sensitivityAAPSPluginProvider;

  private Provider<SensitivityWeightedAveragePlugin> sensitivityWeightedAveragePluginProvider;

  private Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider;

  private Provider<ConstraintChecker> constraintCheckerProvider;

  private Provider<BuildHelper> buildHelperProvider;

  private Provider<CommandQueue> commandQueueProvider;

  private Provider<VirtualPumpPlugin> virtualPumpPluginProvider;

  private Provider<LoopPlugin> loopPluginProvider;

  private Provider<WearPlugin> wearPluginProvider;

  private Provider<LocalInsightPlugin> localInsightPluginProvider;

  private Provider<DanaPump> danaPumpProvider;

  private Provider<DanaRPlugin> danaRPluginProvider;

  private Provider<DanaRKoreanPlugin> danaRKoreanPluginProvider;

  private Provider<DetailedBolusInfoStorage> detailedBolusInfoStorageProvider;

  private Provider<DanaRv2Plugin> danaRv2PluginProvider;

  private Provider<DanaRSPlugin> danaRSPluginProvider;

  private Provider<HardLimits> hardLimitsProvider;

  private Provider<CarbsGenerator> carbsGeneratorProvider;

  private Provider<ActionStringHandler> actionStringHandlerProvider;

  private Provider<ReceiverStatusStore> receiverStatusStoreProvider;

  private Provider<XdripCalibrations> xdripCalibrationsProvider;

  private Provider<OneTimePassword> oneTimePasswordProvider;

  private Provider<SmsCommunicatorPlugin> smsCommunicatorPluginProvider;

  private Provider<LocalAlertUtils> localAlertUtilsProvider;

  private Provider<IconsProvider> iconsProvider;

  private Provider<NotificationHolder> notificationHolderProvider;

  private Provider<AlarmSoundServiceHelper> alarmSoundServiceHelperProvider;

  private Provider<NotificationStore> notificationStoreProvider;

  private Provider<OverviewPlugin> overviewPluginProvider;

  private Provider<ActionsPlugin> actionsPluginProvider;

  private Provider<InsulinOrefRapidActingPlugin> insulinOrefRapidActingPluginProvider;

  private Provider<InsulinOrefUltraRapidActingPlugin> insulinOrefUltraRapidActingPluginProvider;

  private Provider<InsulinLyumjevPlugin> insulinLyumjevPluginProvider;

  private Provider<InsulinOrefFreePeakPlugin> insulinOrefFreePeakPluginProvider;

  private Provider<NSProfilePlugin> nSProfilePluginProvider;

  private Provider<LocationServiceHelper> locationServiceHelperProvider;

  private Provider<AutomationPlugin> automationPluginProvider;

  private Provider<Profiler> profilerProvider;

  private Provider<OpenAPSAMAPlugin> openAPSAMAPluginProvider;

  private Provider<OpenAPSSMBPlugin> openAPSSMBPluginProvider;

  private Provider<SafetyPlugin> safetyPluginProvider;

  private Provider<FoodPlugin> foodPluginProvider;

  private Provider<StatusLinePlugin> statusLinePluginProvider;

  private Provider<DummyServiceHelper> dummyServiceHelperProvider;

  private Provider<PersistentNotificationPlugin> persistentNotificationPluginProvider;

  @SuppressWarnings("rawtypes")
  private Provider nsClientReceiverDelegateProvider;

  private Provider<NSClientPlugin> nSClientPluginProvider;

  private Provider<DefaultValueHelper> defaultValueHelperProvider;

  private Provider<NSSettingsStatus> nSSettingsStatusProvider;

  private Provider<MaintenancePlugin> maintenancePluginProvider;

  private Provider<DstHelperPlugin> dstHelperPluginProvider;

  private Provider<NSDeviceStatus> nSDeviceStatusProvider;

  private Provider<DataBroadcastPlugin> dataBroadcastPluginProvider;

  private Provider<XdripPlugin> xdripPluginProvider;

  private Provider<NSClientSourcePlugin> nSClientSourcePluginProvider;

  private Provider<MM640gPlugin> mM640gPluginProvider;

  private Provider<GlimpPlugin> glimpPluginProvider;

  private Provider<DexcomPlugin> dexcomPluginProvider;

  private Provider<PoctechPlugin> poctechPluginProvider;

  private Provider<TomatoPlugin> tomatoPluginProvider;

  private Provider<RandomBgPlugin> randomBgPluginProvider;

  private Provider<ComboPlugin> comboPluginProvider;

  private Provider<RileyLinkUtil> rileyLinkUtilProvider;

  private Provider<MedtronicPumpStatus> medtronicPumpStatusProvider;

  private Provider<MedtronicUtil> medtronicUtilProvider;

  private Provider<MedtronicPumpHistoryDecoder> medtronicPumpHistoryDecoderProvider;

  private Provider<MedtronicHistoryData> medtronicHistoryDataProvider;

  private Provider<RileyLinkServiceData> rileyLinkServiceDataProvider;

  private Provider<ServiceTaskExecutor> serviceTaskExecutorProvider;

  private Provider<MedtronicPumpPlugin> medtronicPumpPluginProvider;

  private Provider<AapsPodStateManager> aapsPodStateManagerProvider;

  private Provider<PodStateManager> podStateManagerProvider;

  private Provider<RileyLinkBLE> rileyLinkBLEProvider;

  private Provider<RFSpy> rFSpyProvider;

  private Provider<OmnipodRileyLinkCommunicationManager> omnipodRileyLinkCommunicationManagerProvider;

  private Provider<AapsOmnipodUtil> aapsOmnipodUtilProvider;

  private Provider<OmnipodAlertUtil> omnipodAlertUtilProvider;

  private Provider<AapsOmnipodManager> aapsOmnipodManagerProvider;

  private Provider<OmnipodPumpPlugin> omnipodPumpPluginProvider;

  private Provider<Map<Integer, PluginBase>> pumpDriverMapOfIntegerAndPluginBaseProvider;

  private Provider<MDIPlugin> mDIPluginProvider;

  private Provider<LocalProfilePlugin> localProfilePluginProvider;

  private Provider<VersionCheckerPlugin> versionCheckerPluginProvider;

  private Provider<OpenHumansUploader> openHumansUploaderProvider;

  private Provider<Map<Integer, PluginBase>> notNSClientMapOfIntegerAndPluginBaseProvider;

  private Provider<StorageConstraintPlugin> storageConstraintPluginProvider;

  private Provider<SignatureVerifierPlugin> signatureVerifierPluginProvider;

  private Provider<ObjectivesPlugin> objectivesPluginProvider;

  private Provider<Map<Integer, PluginBase>> aPSMapOfIntegerAndPluginBaseProvider;

  private Provider<StaticInjector> staticInjectorProvider;

  private Provider<CryptoUtil> cryptoUtilProvider;

  private Provider<PasswordCheck> passwordCheckProvider;

  private Provider<AndroidPermission> androidPermissionProvider;

  private Provider<Storage> provideStorageProvider;

  private Provider<ClassicPrefsFormat> classicPrefsFormatProvider;

  private Provider<EncryptedPrefsFormat> encryptedPrefsFormatProvider;

  private Provider<PrefFileListProvider> prefFileListProvider;

  private Provider<ImportExportPrefs> importExportPrefsProvider;

  private Provider<TreatmentsPluginHistory> treatmentsPluginHistoryProvider;

  private Provider<IobCobCalculatorPluginHistory> iobCobCalculatorPluginHistoryProvider;

  private Provider<OverviewMenus> overviewMenusProvider;

  private Provider<AlertUtils> alertUtilsProvider;

  private Provider<ProtectionCheck> protectionCheckProvider;

  private Provider<QuickWizard> quickWizardProvider;

  private Provider<BlePreCheck> blePreCheckProvider;

  private Provider<SWDefinition> sWDefinitionProvider;

  private Provider<TirCalculator> tirCalculatorProvider;

  private Provider<DefaultProfile> defaultProfileProvider;

  private Provider<DefaultProfileDPV> defaultProfileDPVProvider;

  private Provider<EversensePlugin> eversensePluginProvider;

  private Provider<UploadChunk> uploadChunkProvider;

  private Provider<TidepoolUploader> tidepoolUploaderProvider;

  private Provider<RateLimit> rateLimitProvider;

  private Provider<TidepoolPlugin> tidepoolPluginProvider;

  private Provider<WarnColors> warnColorsProvider;

  private Provider<StatusLightHandler> statusLightHandlerProvider;

  private Provider<SkinClassic> skinClassicProvider;

  private Provider<SkinInterface> bindsSkinClassicProvider;

  private Provider<SkinButtonsOn> skinButtonsOnProvider;

  private Provider<SkinInterface> bindsSkinButtonsOnProvider;

  private Provider<SkinLargeDisplay> skinLargeDisplayProvider;

  private Provider<SkinInterface> bindsSkinLargeDisplayProvider;

  private Provider<SkinLowRes> skinLowResProvider;

  private Provider<SkinInterface> bindsSkinLowResProvider;

  private Provider<Map<Integer, SkinInterface>> skinMapOfIntegerAndSkinInterfaceProvider;

  private Provider<SkinProvider> skinProvider;

  private Provider<SntpClient> sntpClientProvider;

  private Provider<Translator> translatorProvider;

  private Provider<LastLocationDataContainer> lastLocationDataContainerProvider;

  private Provider<MedtronicUIPostprocessor> medtronicUIPostprocessorProvider;

  private Provider<MedtronicConverter> medtronicConverterProvider;

  private Provider<MedtronicCommunicationManager> medtronicCommunicationManagerProvider;

  private Provider<MessageHashTableRv2> messageHashTableRv2Provider;

  private Provider<MessageHashTableR> messageHashTableRProvider;

  private Provider<MessageHashTableRKorean> messageHashTableRKoreanProvider;

  private Provider<DanaRSMessageHashTable> danaRSMessageHashTableProvider;

  private Provider<BleEncryption> bleEncryptionProvider;

  private Provider<BLEComm> bLECommProvider;

  private DaggerAppComponent(SkinsModule skinsModuleParam, AppModule appModuleParam,
      CoreModule coreModuleParam, MainApp applicationParam) {
    this.appModule = appModuleParam;
    this.application = applicationParam;
    initialize(skinsModuleParam, appModuleParam, coreModuleParam, applicationParam);
    initialize2(skinsModuleParam, appModuleParam, coreModuleParam, applicationParam);
    initialize3(skinsModuleParam, appModuleParam, coreModuleParam, applicationParam);
    initialize4(skinsModuleParam, appModuleParam, coreModuleParam, applicationParam);
    initialize5(skinsModuleParam, appModuleParam, coreModuleParam, applicationParam);
    initialize6(skinsModuleParam, appModuleParam, coreModuleParam, applicationParam);
  }

  public static AppComponent.Builder builder() {
    return new Builder();
  }

  private Map<Class<?>, Provider<AndroidInjector.Factory<?>>> mapOfClassOfAndProviderOfAndroidInjectorFactoryOf(
      ) {
    return ImmutableMap.<Class<?>, Provider<AndroidInjector.Factory<?>>>builderWithExpectedSize(411).put(HistoryBrowseActivity.class, (Provider) historyBrowseActivitySubcomponentFactoryProvider).put(InsightAlertActivity.class, (Provider) insightAlertActivitySubcomponentFactoryProvider).put(InsightPairingActivity.class, (Provider) insightPairingActivitySubcomponentFactoryProvider).put(InsightPairingInformationActivity.class, (Provider) insightPairingInformationActivitySubcomponentFactoryProvider).put(LogSettingActivity.class, (Provider) logSettingActivitySubcomponentFactoryProvider).put(MainActivity.class, (Provider) mainActivitySubcomponentFactoryProvider).put(MedtronicHistoryActivity.class, (Provider) medtronicHistoryActivitySubcomponentFactoryProvider).put(PreferencesActivity.class, (Provider) preferencesActivitySubcomponentFactoryProvider).put(QuickWizardListActivity.class, (Provider) quickWizardListActivitySubcomponentFactoryProvider).put(RequestDexcomPermissionActivity.class, (Provider) requestDexcomPermissionActivitySubcomponentFactoryProvider).put(RileyLinkStatusActivity.class, (Provider) rileyLinkStatusActivitySubcomponentFactoryProvider).put(RileyLinkBLEConfigActivity.class, (Provider) rileyLinkBLEConfigActivitySubcomponentFactoryProvider).put(SetupWizardActivity.class, (Provider) setupWizardActivitySubcomponentFactoryProvider).put(SingleFragmentActivity.class, (Provider) singleFragmentActivitySubcomponentFactoryProvider).put(SmsCommunicatorOtpActivity.class, (Provider) smsCommunicatorOtpActivitySubcomponentFactoryProvider).put(StatsActivity.class, (Provider) statsActivitySubcomponentFactoryProvider).put(SurveyActivity.class, (Provider) surveyActivitySubcomponentFactoryProvider).put(ProfileHelperActivity.class, (Provider) profileHelperActivitySubcomponentFactoryProvider).put(OpenHumansLoginActivity.class, (Provider) openHumansLoginActivitySubcomponentFactoryProvider).put(MyPreferenceFragment.class, (Provider) myPreferenceFragmentSubcomponentFactoryProvider).put(ActionsFragment.class, (Provider) actionsFragmentSubcomponentFactoryProvider).put(AutomationFragment.class, (Provider) automationFragmentSubcomponentFactoryProvider).put(BGSourceFragment.class, (Provider) bGSourceFragmentSubcomponentFactoryProvider).put(ComboFragment.class, (Provider) comboFragmentSubcomponentFactoryProvider).put(ConfigBuilderFragment.class, (Provider) configBuilderFragmentSubcomponentFactoryProvider).put(FoodFragment.class, (Provider) foodFragmentSubcomponentFactoryProvider).put(InsulinFragment.class, (Provider) insulinFragmentSubcomponentFactoryProvider).put(LocalProfileFragment.class, (Provider) localProfileFragmentSubcomponentFactoryProvider).put(ObjectivesFragment.class, (Provider) objectivesFragmentSubcomponentFactoryProvider).put(OpenAPSAMAFragment.class, (Provider) openAPSAMAFragmentSubcomponentFactoryProvider).put(OpenAPSSMBFragment.class, (Provider) openAPSSMBFragmentSubcomponentFactoryProvider).put(OverviewFragment.class, (Provider) overviewFragmentSubcomponentFactoryProvider).put(LocalInsightFragment.class, (Provider) localInsightFragmentSubcomponentFactoryProvider).put(LoopFragment.class, (Provider) loopFragmentSubcomponentFactoryProvider).put(MaintenanceFragment.class, (Provider) maintenanceFragmentSubcomponentFactoryProvider).put(MedtronicFragment.class, (Provider) medtronicFragmentSubcomponentFactoryProvider).put(OmnipodOverviewFragment.class, (Provider) omnipodOverviewFragmentSubcomponentFactoryProvider).put(NSProfileFragment.class, (Provider) nSProfileFragmentSubcomponentFactoryProvider).put(NSClientFragment.class, (Provider) nSClientFragmentSubcomponentFactoryProvider).put(SmsCommunicatorFragment.class, (Provider) smsCommunicatorFragmentSubcomponentFactoryProvider).put(WearFragment.class, (Provider) wearFragmentSubcomponentFactoryProvider).put(TidepoolFragment.class, (Provider) tidepoolFragmentSubcomponentFactoryProvider).put(TreatmentsFragment.class, (Provider) treatmentsFragmentSubcomponentFactoryProvider).put(TreatmentsBolusFragment.class, (Provider) treatmentsBolusFragmentSubcomponentFactoryProvider).put(TreatmentsTemporaryBasalsFragment.class, (Provider) treatmentsTemporaryBasalsFragmentSubcomponentFactoryProvider).put(TreatmentsTempTargetFragment.class, (Provider) treatmentsTempTargetFragmentSubcomponentFactoryProvider).put(TreatmentsExtendedBolusesFragment.class, (Provider) treatmentsExtendedBolusesFragmentSubcomponentFactoryProvider).put(TreatmentsCareportalFragment.class, (Provider) treatmentsCareportalFragmentSubcomponentFactoryProvider).put(TreatmentsProfileSwitchFragment.class, (Provider) treatmentsProfileSwitchFragmentSubcomponentFactoryProvider).put(VirtualPumpFragment.class, (Provider) virtualPumpFragmentSubcomponentFactoryProvider).put(OpenHumansFragment.class, (Provider) openHumansFragmentSubcomponentFactoryProvider).put(CalibrationDialog.class, (Provider) calibrationDialogSubcomponentFactoryProvider).put(CarbsDialog.class, (Provider) carbsDialogSubcomponentFactoryProvider).put(CareDialog.class, (Provider) careDialogSubcomponentFactoryProvider).put(EditActionDialog.class, (Provider) editActionDialogSubcomponentFactoryProvider).put(EditEventDialog.class, (Provider) editEventDialogSubcomponentFactoryProvider).put(EditTriggerDialog.class, (Provider) editTriggerDialogSubcomponentFactoryProvider).put(EditQuickWizardDialog.class, (Provider) editQuickWizardDialogSubcomponentFactoryProvider).put(ExtendedBolusDialog.class, (Provider) extendedBolusDialogSubcomponentFactoryProvider).put(FillDialog.class, (Provider) fillDialogSubcomponentFactoryProvider).put(ChooseActionDialog.class, (Provider) chooseActionDialogSubcomponentFactoryProvider).put(ChooseTriggerDialog.class, (Provider) chooseTriggerDialogSubcomponentFactoryProvider).put(InsulinDialog.class, (Provider) insulinDialogSubcomponentFactoryProvider).put(UAMDialog.class, (Provider) uAMDialogSubcomponentFactoryProvider).put(LoopDialog.class, (Provider) loopDialogSubcomponentFactoryProvider).put(ObjectivesExamDialog.class, (Provider) objectivesExamDialogSubcomponentFactoryProvider).put(ProfileSwitchDialog.class, (Provider) profileSwitchDialogSubcomponentFactoryProvider).put(TempBasalDialog.class, (Provider) tempBasalDialogSubcomponentFactoryProvider).put(TempTargetDialog.class, (Provider) tempTargetDialogSubcomponentFactoryProvider).put(TreatmentDialog.class, (Provider) treatmentDialogSubcomponentFactoryProvider).put(WizardDialog.class, (Provider) wizardDialogSubcomponentFactoryProvider).put(WizardInfoDialog.class, (Provider) wizardInfoDialogSubcomponentFactoryProvider).put(OpenHumansLoginActivity.ExchangeAuthTokenDialog.class, (Provider) exchangeAuthTokenDialogSubcomponentFactoryProvider).put(PasswordCheck.class, (Provider) passwordCheckSubcomponentFactoryProvider).put(RileyLinkStatusGeneralFragment.class, (Provider) rileyLinkStatusGeneralFragmentSubcomponentFactoryProvider).put(RileyLinkStatusHistoryFragment.class, (Provider) rileyLinkStatusHistoryFragmentSubcomponentFactoryProvider).put(RileyLinkStatusDeviceMedtronic.class, (Provider) rileyLinkStatusDeviceMedtronicSubcomponentFactoryProvider).put(AutoStartReceiver.class, (Provider) autoStartReceiverSubcomponentFactoryProvider).put(BTReceiver.class, (Provider) bTReceiverSubcomponentFactoryProvider).put(ChargingStateReceiver.class, (Provider) chargingStateReceiverSubcomponentFactoryProvider).put(DataReceiver.class, (Provider) dataReceiverSubcomponentFactoryProvider).put(KeepAliveReceiver.class, (Provider) keepAliveReceiverSubcomponentFactoryProvider).put(RileyLinkBluetoothStateReceiver.class, (Provider) rileyLinkBluetoothStateReceiverSubcomponentFactoryProvider).put(SmsReceiver.class, (Provider) smsReceiverSubcomponentFactoryProvider).put(TimeDateOrTZChangeReceiver.class, (Provider) timeDateOrTZChangeReceiverSubcomponentFactoryProvider).put(CarbSuggestionReceiver.class, (Provider) carbSuggestionReceiverSubcomponentFactoryProvider).put(RileyLinkBroadcastReceiver.class, (Provider) rileyLinkBroadcastReceiverSubcomponentFactoryProvider).put(AlarmSoundService.class, (Provider) alarmSoundServiceSubcomponentFactoryProvider).put(DataService.class, (Provider) dataServiceSubcomponentFactoryProvider).put(DismissNotificationService.class, (Provider) dismissNotificationServiceSubcomponentFactoryProvider).put(DummyService.class, (Provider) dummyServiceSubcomponentFactoryProvider).put(LocationService.class, (Provider) locationServiceSubcomponentFactoryProvider).put(NSClientService.class, (Provider) nSClientServiceSubcomponentFactoryProvider).put(WatchUpdaterService.class, (Provider) watchUpdaterServiceSubcomponentFactoryProvider).put(InsightAlertService.class, (Provider) insightAlertServiceSubcomponentFactoryProvider).put(InsightConnectionService.class, (Provider) insightConnectionServiceSubcomponentFactoryProvider).put(RileyLinkService.class, (Provider) rileyLinkServiceSubcomponentFactoryProvider).put(RileyLinkMedtronicService.class, (Provider) rileyLinkMedtronicServiceSubcomponentFactoryProvider).put(RileyLinkOmnipodService.class, (Provider) rileyLinkOmnipodServiceSubcomponentFactoryProvider).put(AutomationEvent.class, (Provider) automationEventSubcomponentFactoryProvider).put(Trigger.class, (Provider) triggerSubcomponentFactoryProvider).put(TriggerAutosensValue.class, (Provider) triggerAutosensValueSubcomponentFactoryProvider).put(TriggerBg.class, (Provider) triggerBgSubcomponentFactoryProvider).put(TriggerBolusAgo.class, (Provider) triggerBolusAgoSubcomponentFactoryProvider).put(TriggerCOB.class, (Provider) triggerCOBSubcomponentFactoryProvider).put(TriggerConnector.class, (Provider) triggerConnectorSubcomponentFactoryProvider).put(TriggerDelta.class, (Provider) triggerDeltaSubcomponentFactoryProvider).put(TriggerDummy.class, (Provider) triggerDummySubcomponentFactoryProvider).put(TriggerIob.class, (Provider) triggerIobSubcomponentFactoryProvider).put(TriggerLocation.class, (Provider) triggerLocationSubcomponentFactoryProvider).put(TriggerProfilePercent.class, (Provider) triggerProfilePercentSubcomponentFactoryProvider).put(TriggerPumpLastConnection.class, (Provider) triggerPumpLastConnectionSubcomponentFactoryProvider).put(TriggerBTDevice.class, (Provider) triggerBTDeviceSubcomponentFactoryProvider).put(TriggerRecurringTime.class, (Provider) triggerRecurringTimeSubcomponentFactoryProvider).put(TriggerTempTarget.class, (Provider) triggerTempTargetSubcomponentFactoryProvider).put(TriggerTime.class, (Provider) triggerTimeSubcomponentFactoryProvider).put(TriggerTimeRange.class, (Provider) triggerTimeRangeSubcomponentFactoryProvider).put(TriggerWifiSsid.class, (Provider) triggerWifiSsidSubcomponentFactoryProvider).put(Action.class, (Provider) actionSubcomponentFactoryProvider).put(ActionLoopDisable.class, (Provider) actionLoopDisableSubcomponentFactoryProvider).put(ActionLoopEnable.class, (Provider) actionLoopEnableSubcomponentFactoryProvider).put(ActionLoopResume.class, (Provider) actionLoopResumeSubcomponentFactoryProvider).put(ActionLoopSuspend.class, (Provider) actionLoopSuspendSubcomponentFactoryProvider).put(ActionNotification.class, (Provider) actionNotificationSubcomponentFactoryProvider).put(ActionAlarm.class, (Provider) actionAlarmSubcomponentFactoryProvider).put(ActionProfileSwitch.class, (Provider) actionProfileSwitchSubcomponentFactoryProvider).put(ActionProfileSwitchPercent.class, (Provider) actionProfileSwitchPercentSubcomponentFactoryProvider).put(ActionSendSMS.class, (Provider) actionSendSMSSubcomponentFactoryProvider).put(ActionStartTempTarget.class, (Provider) actionStartTempTargetSubcomponentFactoryProvider).put(ActionStopTempTarget.class, (Provider) actionStopTempTargetSubcomponentFactoryProvider).put(ActionDummy.class, (Provider) actionDummySubcomponentFactoryProvider).put(Element.class, (Provider) elementSubcomponentFactoryProvider).put(InputBg.class, (Provider) inputBgSubcomponentFactoryProvider).put(InputButton.class, (Provider) inputButtonSubcomponentFactoryProvider).put(Comparator.class, (Provider) comparatorSubcomponentFactoryProvider).put(ComparatorConnect.class, (Provider) comparatorConnectSubcomponentFactoryProvider).put(ComparatorExists.class, (Provider) comparatorExistsSubcomponentFactoryProvider).put(InputDateTime.class, (Provider) inputDateTimeSubcomponentFactoryProvider).put(InputDelta.class, (Provider) inputDeltaSubcomponentFactoryProvider).put(InputDouble.class, (Provider) inputDoubleSubcomponentFactoryProvider).put(InputDropdownMenu.class, (Provider) inputDropdownMenuSubcomponentFactoryProvider).put(InputDuration.class, (Provider) inputDurationSubcomponentFactoryProvider).put(InputInsulin.class, (Provider) inputInsulinSubcomponentFactoryProvider).put(InputLocationMode.class, (Provider) inputLocationModeSubcomponentFactoryProvider).put(InputPercent.class, (Provider) inputPercentSubcomponentFactoryProvider).put(InputProfileName.class, (Provider) inputProfileNameSubcomponentFactoryProvider).put(InputString.class, (Provider) inputStringSubcomponentFactoryProvider).put(InputTempTarget.class, (Provider) inputTempTargetSubcomponentFactoryProvider).put(InputTimeRange.class, (Provider) inputTimeRangeSubcomponentFactoryProvider).put(InputTime.class, (Provider) inputTimeSubcomponentFactoryProvider).put(InputWeekDay.class, (Provider) inputWeekDaySubcomponentFactoryProvider).put(LabelWithElement.class, (Provider) labelWithElementSubcomponentFactoryProvider).put(StaticLabel.class, (Provider) staticLabelSubcomponentFactoryProvider).put(CommandQueue.class, (Provider) commandQueueSubcomponentFactoryProvider).put(CommandBolus.class, (Provider) commandBolusSubcomponentFactoryProvider).put(CommandCancelExtendedBolus.class, (Provider) commandCancelExtendedBolusSubcomponentFactoryProvider).put(CommandCancelTempBasal.class, (Provider) commandCancelTempBasalSubcomponentFactoryProvider).put(CommandExtendedBolus.class, (Provider) commandExtendedBolusSubcomponentFactoryProvider).put(CommandInsightSetTBROverNotification.class, (Provider) commandInsightSetTBROverNotificationSubcomponentFactoryProvider).put(CommandLoadEvents.class, (Provider) commandLoadEventsSubcomponentFactoryProvider).put(CommandLoadHistory.class, (Provider) commandLoadHistorySubcomponentFactoryProvider).put(CommandLoadTDDs.class, (Provider) commandLoadTDDsSubcomponentFactoryProvider).put(CommandReadStatus.class, (Provider) commandReadStatusSubcomponentFactoryProvider).put(CommandSetProfile.class, (Provider) commandSetProfileSubcomponentFactoryProvider).put(CommandSMBBolus.class, (Provider) commandSMBBolusSubcomponentFactoryProvider).put(CommandStartPump.class, (Provider) commandStartPumpSubcomponentFactoryProvider).put(CommandStopPump.class, (Provider) commandStopPumpSubcomponentFactoryProvider).put(CommandTempBasalAbsolute.class, (Provider) commandTempBasalAbsoluteSubcomponentFactoryProvider).put(CommandTempBasalPercent.class, (Provider) commandTempBasalPercentSubcomponentFactoryProvider).put(CommandSetUserSettings.class, (Provider) commandSetUserSettingsSubcomponentFactoryProvider).put(CommandCustomCommand.class, (Provider) commandCustomCommandSubcomponentFactoryProvider).put(Objective.class, (Provider) objectiveSubcomponentFactoryProvider).put(Objective0.class, (Provider) objective0SubcomponentFactoryProvider).put(Objective1.class, (Provider) objective1SubcomponentFactoryProvider).put(Objective2.class, (Provider) objective2SubcomponentFactoryProvider).put(Objective3.class, (Provider) objective3SubcomponentFactoryProvider).put(Objective4.class, (Provider) objective4SubcomponentFactoryProvider).put(Objective5.class, (Provider) objective5SubcomponentFactoryProvider).put(Objective6.class, (Provider) objective6SubcomponentFactoryProvider).put(Objective7.class, (Provider) objective7SubcomponentFactoryProvider).put(Objective8.class, (Provider) objective8SubcomponentFactoryProvider).put(Objective9.class, (Provider) objective9SubcomponentFactoryProvider).put(Objective10.class, (Provider) objective10SubcomponentFactoryProvider).put(SWBreak.class, (Provider) sWBreakSubcomponentFactoryProvider).put(SWButton.class, (Provider) sWButtonSubcomponentFactoryProvider).put(SWEditNumberWithUnits.class, (Provider) sWEditNumberWithUnitsSubcomponentFactoryProvider).put(SWEditString.class, (Provider) sWEditStringSubcomponentFactoryProvider).put(SWEditEncryptedPassword.class, (Provider) sWEditEncryptedPasswordSubcomponentFactoryProvider).put(SWEditUrl.class, (Provider) sWEditUrlSubcomponentFactoryProvider).put(SWFragment.class, (Provider) sWFragmentSubcomponentFactoryProvider).put(SWHtmlLink.class, (Provider) sWHtmlLinkSubcomponentFactoryProvider).put(SWInfotext.class, (Provider) sWInfotextSubcomponentFactoryProvider).put(SWItem.class, (Provider) sWItemSubcomponentFactoryProvider).put(SWPlugin.class, (Provider) sWPluginSubcomponentFactoryProvider).put(SWRadioButton.class, (Provider) sWRadioButtonSubcomponentFactoryProvider).put(SWScreen.class, (Provider) sWScreenSubcomponentFactoryProvider).put(SWEventListener.class, (Provider) sWEventListenerSubcomponentFactoryProvider).put(ServiceTask.class, (Provider) serviceTaskSubcomponentFactoryProvider).put(PumpTask.class, (Provider) pumpTaskSubcomponentFactoryProvider).put(DiscoverGattServicesTask.class, (Provider) discoverGattServicesTaskSubcomponentFactoryProvider).put(InitializePumpManagerTask.class, (Provider) initializePumpManagerTaskSubcomponentFactoryProvider).put(ResetRileyLinkConfigurationTask.class, (Provider) resetRileyLinkConfigurationTaskSubcomponentFactoryProvider).put(WakeAndTuneTask.class, (Provider) wakeAndTuneTaskSubcomponentFactoryProvider).put(RadioResponse.class, (Provider) radioResponseSubcomponentFactoryProvider).put(RileyLinkBLE.class, (Provider) rileyLinkBLESubcomponentFactoryProvider).put(RFSpy.class, (Provider) rFSpySubcomponentFactoryProvider).put(SendAndListen.class, (Provider) sendAndListenSubcomponentFactoryProvider).put(SetPreamble.class, (Provider) setPreambleSubcomponentFactoryProvider).put(RadioPacket.class, (Provider) radioPacketSubcomponentFactoryProvider).put(MedtronicCommunicationManager.class, (Provider) medtronicCommunicationManagerSubcomponentFactoryProvider).put(MedtronicUITask.class, (Provider) medtronicUITaskSubcomponentFactoryProvider).put(PodManagementActivity.class, (Provider) podManagementActivitySubcomponentFactoryProvider).put(PodHistoryActivity.class, (Provider) podHistoryActivitySubcomponentFactoryProvider).put(PodActivationWizardActivity.class, (Provider) podActivationWizardActivitySubcomponentFactoryProvider).put(PodDeactivationWizardActivity.class, (Provider) podDeactivationWizardActivitySubcomponentFactoryProvider).put(OmnipodRileyLinkCommunicationManager.class, (Provider) omnipodRileyLinkCommunicationManagerSubcomponentFactoryProvider).put(RLHistoryItemOmnipod.class, (Provider) rLHistoryItemOmnipodSubcomponentFactoryProvider).put(LoggerCallback.class, (Provider) loggerCallbackSubcomponentFactoryProvider).put(DetermineBasalResultSMB.class, (Provider) determineBasalResultSMBSubcomponentFactoryProvider).put(DetermineBasalResultAMA.class, (Provider) determineBasalResultAMASubcomponentFactoryProvider).put(DetermineBasalAdapterAMAJS.class, (Provider) determineBasalAdapterAMAJSSubcomponentFactoryProvider).put(DetermineBasalAdapterSMBJS.class, (Provider) determineBasalAdapterSMBJSSubcomponentFactoryProvider).put(IobCobThread.class, (Provider) iobCobThreadSubcomponentFactoryProvider).put(IobCobOref1Thread.class, (Provider) iobCobOref1ThreadSubcomponentFactoryProvider).put(CryptoUtil.class, (Provider) cryptoUtilSubcomponentFactoryProvider).put(EncryptedPrefsFormat.class, (Provider) encryptedPrefsFormatSubcomponentFactoryProvider).put(ClassicPrefsFormat.class, (Provider) classicPrefsFormatSubcomponentFactoryProvider).put(PrefFileListProvider.class, (Provider) prefFileListProviderSubcomponentFactoryProvider).put(NotificationWithAction.class, (Provider) notificationWithActionSubcomponentFactoryProvider).put(GraphData.class, (Provider) graphDataSubcomponentFactoryProvider).put(GlucoseStatus.class, (Provider) glucoseStatusSubcomponentFactoryProvider).put(DatabaseHelper.class, (Provider) databaseHelperSubcomponentFactoryProvider).put(TreatmentService.class, (Provider) treatmentServiceSubcomponentFactoryProvider).put(FoodService.class, (Provider) foodServiceSubcomponentFactoryProvider).put(BolusWizard.class, (Provider) bolusWizardSubcomponentFactoryProvider).put(QuickWizardEntry.class, (Provider) quickWizardEntrySubcomponentFactoryProvider).put(AuthRequest.class, (Provider) authRequestSubcomponentFactoryProvider).put(SkinListPreference.class, (Provider) skinListPreferenceSubcomponentFactoryProvider).put(NetworkChangeReceiver.class, (Provider) networkChangeReceiverSubcomponentFactoryProvider).put(PrefImportListActivity.class, (Provider) prefImportListActivitySubcomponentFactoryProvider).put(TDDStatsActivity.class, (Provider) tDDStatsActivitySubcomponentFactoryProvider).put(BolusProgressHelperActivity.class, (Provider) bolusProgressHelperActivitySubcomponentFactoryProvider).put(ErrorHelperActivity.class, (Provider) errorHelperActivitySubcomponentFactoryProvider).put(BolusProgressDialog.class, (Provider) bolusProgressDialogSubcomponentFactoryProvider).put(ErrorDialog.class, (Provider) errorDialogSubcomponentFactoryProvider).put(NtpProgressDialog.class, (Provider) ntpProgressDialogSubcomponentFactoryProvider).put(ProfileViewerDialog.class, (Provider) profileViewerDialogSubcomponentFactoryProvider).put(PumpEnactResult.class, (Provider) pumpEnactResultSubcomponentFactoryProvider).put(APSResult.class, (Provider) aPSResultSubcomponentFactoryProvider).put(AutosensData.class, (Provider) autosensDataSubcomponentFactoryProvider).put(Profile.class, (Provider) profileSubcomponentFactoryProvider).put(ProfileStore.class, (Provider) profileStoreSubcomponentFactoryProvider).put(BgReading.class, (Provider) bgReadingSubcomponentFactoryProvider).put(Treatment.class, (Provider) treatmentSubcomponentFactoryProvider).put(ProfileSwitch.class, (Provider) profileSwitchSubcomponentFactoryProvider).put(TemporaryBasal.class, (Provider) temporaryBasalSubcomponentFactoryProvider).put(CareportalEvent.class, (Provider) careportalEventSubcomponentFactoryProvider).put(ExtendedBolus.class, (Provider) extendedBolusSubcomponentFactoryProvider).put(DanaFragment.class, (Provider) danaFragmentSubcomponentFactoryProvider).put(DanaHistoryActivity.class, (Provider) danaHistoryActivitySubcomponentFactoryProvider).put(DanaUserOptionsActivity.class, (Provider) danaUserOptionsActivitySubcomponentFactoryProvider).put(MessageBase.class, (Provider) messageBaseSubcomponentFactoryProvider).put(MsgSetTime.class, (Provider) msgSetTimeSubcomponentFactoryProvider).put(MsgBolusProgress.class, (Provider) msgBolusProgressSubcomponentFactoryProvider).put(MsgBolusStart.class, (Provider) msgBolusStartSubcomponentFactoryProvider).put(MsgBolusStartWithSpeed.class, (Provider) msgBolusStartWithSpeedSubcomponentFactoryProvider).put(MsgBolusStop.class, (Provider) msgBolusStopSubcomponentFactoryProvider).put(MsgCheckValue.class, (Provider) msgCheckValueSubcomponentFactoryProvider).put(MsgError.class, (Provider) msgErrorSubcomponentFactoryProvider).put(MsgHistoryAll.class, (Provider) msgHistoryAllSubcomponentFactoryProvider).put(MsgHistoryAllDone.class, (Provider) msgHistoryAllDoneSubcomponentFactoryProvider).put(MsgHistoryDone.class, (Provider) msgHistoryDoneSubcomponentFactoryProvider).put(MsgHistoryNewDone.class, (Provider) msgHistoryNewDoneSubcomponentFactoryProvider).put(MsgInitConnStatusBasic.class, (Provider) msgInitConnStatusBasicSubcomponentFactoryProvider).put(MsgInitConnStatusBolus.class, (Provider) msgInitConnStatusBolusSubcomponentFactoryProvider).put(MsgInitConnStatusOption.class, (Provider) msgInitConnStatusOptionSubcomponentFactoryProvider).put(MsgInitConnStatusTime.class, (Provider) msgInitConnStatusTimeSubcomponentFactoryProvider).put(MsgPCCommStart.class, (Provider) msgPCCommStartSubcomponentFactoryProvider).put(MsgPCCommStop.class, (Provider) msgPCCommStopSubcomponentFactoryProvider).put(MsgSetActivateBasalProfile.class, (Provider) msgSetActivateBasalProfileSubcomponentFactoryProvider).put(MsgSetBasalProfile.class, (Provider) msgSetBasalProfileSubcomponentFactoryProvider).put(MsgSetCarbsEntry.class, (Provider) msgSetCarbsEntrySubcomponentFactoryProvider).put(MsgSetExtendedBolusStart.class, (Provider) msgSetExtendedBolusStartSubcomponentFactoryProvider).put(MsgSetExtendedBolusStop.class, (Provider) msgSetExtendedBolusStopSubcomponentFactoryProvider).put(MsgSetSingleBasalProfile.class, (Provider) msgSetSingleBasalProfileSubcomponentFactoryProvider).put(MsgSetTempBasalStart.class, (Provider) msgSetTempBasalStartSubcomponentFactoryProvider).put(MsgSetTempBasalStop.class, (Provider) msgSetTempBasalStopSubcomponentFactoryProvider).put(MsgSetUserOptions.class, (Provider) msgSetUserOptionsSubcomponentFactoryProvider).put(MsgSettingActiveProfile.class, (Provider) msgSettingActiveProfileSubcomponentFactoryProvider).put(MsgSettingBasal.class, (Provider) msgSettingBasalSubcomponentFactoryProvider).put(MsgSettingBasalProfileAll.class, (Provider) msgSettingBasalProfileAllSubcomponentFactoryProvider).put(MsgSettingGlucose.class, (Provider) msgSettingGlucoseSubcomponentFactoryProvider).put(MsgSettingMaxValues.class, (Provider) msgSettingMaxValuesSubcomponentFactoryProvider).put(MsgSettingMeal.class, (Provider) msgSettingMealSubcomponentFactoryProvider).put(MsgSettingProfileRatios.class, (Provider) msgSettingProfileRatiosSubcomponentFactoryProvider).put(MsgSettingProfileRatiosAll.class, (Provider) msgSettingProfileRatiosAllSubcomponentFactoryProvider).put(MsgSettingPumpTime.class, (Provider) msgSettingPumpTimeSubcomponentFactoryProvider).put(MsgSettingShippingInfo.class, (Provider) msgSettingShippingInfoSubcomponentFactoryProvider).put(MsgSettingUserOptions.class, (Provider) msgSettingUserOptionsSubcomponentFactoryProvider).put(MsgStatus.class, (Provider) msgStatusSubcomponentFactoryProvider).put(MsgStatusBasic.class, (Provider) msgStatusBasicSubcomponentFactoryProvider).put(MsgStatusBolusExtended.class, (Provider) msgStatusBolusExtendedSubcomponentFactoryProvider).put(MsgStatusProfile.class, (Provider) msgStatusProfileSubcomponentFactoryProvider).put(MsgStatusTempBasal.class, (Provider) msgStatusTempBasalSubcomponentFactoryProvider).put(MsgHistoryBolus.class, (Provider) msgHistoryBolusSubcomponentFactoryProvider).put(MsgHistoryDailyInsulin.class, (Provider) msgHistoryDailyInsulinSubcomponentFactoryProvider).put(MsgHistoryGlucose.class, (Provider) msgHistoryGlucoseSubcomponentFactoryProvider).put(MsgHistoryAlarm.class, (Provider) msgHistoryAlarmSubcomponentFactoryProvider).put(MsgHistoryError.class, (Provider) msgHistoryErrorSubcomponentFactoryProvider).put(MsgHistoryCarbo.class, (Provider) msgHistoryCarboSubcomponentFactoryProvider).put(MsgHistoryRefill.class, (Provider) msgHistoryRefillSubcomponentFactoryProvider).put(MsgHistorySuspend.class, (Provider) msgHistorySuspendSubcomponentFactoryProvider).put(MsgHistoryBasalHour.class, (Provider) msgHistoryBasalHourSubcomponentFactoryProvider).put(MsgHistoryNew.class, (Provider) msgHistoryNewSubcomponentFactoryProvider).put(MsgCheckValue_v2.class, (Provider) msgCheckValue_v2SubcomponentFactoryProvider).put(MsgHistoryEvents_v2.class, (Provider) msgHistoryEvents_v2SubcomponentFactoryProvider).put(MsgSetAPSTempBasalStart_v2.class, (Provider) msgSetAPSTempBasalStart_v2SubcomponentFactoryProvider).put(MsgSetHistoryEntry_v2.class, (Provider) msgSetHistoryEntry_v2SubcomponentFactoryProvider).put(MsgStatusAPS_v2.class, (Provider) msgStatusAPS_v2SubcomponentFactoryProvider).put(MsgStatusBolusExtended_v2.class, (Provider) msgStatusBolusExtended_v2SubcomponentFactoryProvider).put(MsgStatusTempBasal_v2.class, (Provider) msgStatusTempBasal_v2SubcomponentFactoryProvider).put(MsgCheckValue_k.class, (Provider) msgCheckValue_kSubcomponentFactoryProvider).put(MsgInitConnStatusBasic_k.class, (Provider) msgInitConnStatusBasic_kSubcomponentFactoryProvider).put(MsgInitConnStatusBolus_k.class, (Provider) msgInitConnStatusBolus_kSubcomponentFactoryProvider).put(MsgInitConnStatusTime_k.class, (Provider) msgInitConnStatusTime_kSubcomponentFactoryProvider).put(MsgSettingBasalProfileAll_k.class, (Provider) msgSettingBasalProfileAll_kSubcomponentFactoryProvider).put(MsgSettingBasal_k.class, (Provider) msgSettingBasal_kSubcomponentFactoryProvider).put(MsgStatusBasic_k.class, (Provider) msgStatusBasic_kSubcomponentFactoryProvider).put(MsgStatus_k.class, (Provider) msgStatus_kSubcomponentFactoryProvider).put(AbstractDanaRExecutionService.class, (Provider) abstractDanaRExecutionServiceSubcomponentFactoryProvider).put(DanaRv2ExecutionService.class, (Provider) danaRv2ExecutionServiceSubcomponentFactoryProvider).put(DanaRExecutionService.class, (Provider) danaRExecutionServiceSubcomponentFactoryProvider).put(DanaRKoreanExecutionService.class, (Provider) danaRKoreanExecutionServiceSubcomponentFactoryProvider).put(DanaRS_Packet.class, (Provider) danaRS_PacketSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.class, (Provider) danaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Basal_Rate.class, (Provider) danaRS_Packet_Basal_Get_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Profile_Basal_Rate.class, (Provider) danaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Profile_Number.class, (Provider) danaRS_Packet_Basal_Get_Profile_NumberSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Basal_Rate.class, (Provider) danaRS_Packet_Basal_Set_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Profile_Basal_Rate.class, (Provider) danaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Profile_Number.class, (Provider) danaRS_Packet_Basal_Set_Profile_NumberSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Suspend_Off.class, (Provider) danaRS_Packet_Basal_Set_Suspend_OffSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Suspend_On.class, (Provider) danaRS_Packet_Basal_Set_Suspend_OnSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Temporary_Basal.class, (Provider) danaRS_Packet_Basal_Set_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Temporary_Basal_State.class, (Provider) danaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Bolus_Option.class, (Provider) danaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Initial_Bolus.class, (Provider) danaRS_Packet_Bolus_Get_Initial_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Calculation_Information.class, (Provider) danaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.class, (Provider) danaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_CIR_CF_Array.class, (Provider) danaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_24_CIR_CF_Array.class, (Provider) danaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Dual_Bolus.class, (Provider) danaRS_Packet_Bolus_Get_Dual_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Bolus.class, (Provider) danaRS_Packet_Bolus_Get_Extended_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Bolus_State.class, (Provider) danaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.class, (Provider) danaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Step_Bolus_Information.class, (Provider) danaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Bolus_Option.class, (Provider) danaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Initial_Bolus.class, (Provider) danaRS_Packet_Bolus_Set_Initial_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_CIR_CF_Array.class, (Provider) danaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_24_CIR_CF_Array.class, (Provider) danaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Dual_Bolus.class, (Provider) danaRS_Packet_Bolus_Set_Dual_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Extended_Bolus.class, (Provider) danaRS_Packet_Bolus_Set_Extended_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.class, (Provider) danaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Step_Bolus_Start.class, (Provider) danaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Step_Bolus_Stop.class, (Provider) danaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentFactoryProvider).put(DanaRS_Packet_Etc_Keep_Connection.class, (Provider) danaRS_Packet_Etc_Keep_ConnectionSubcomponentFactoryProvider).put(DanaRS_Packet_Etc_Set_History_Save.class, (Provider) danaRS_Packet_Etc_Set_History_SaveSubcomponentFactoryProvider).put(DanaRS_Packet_General_Delivery_Status.class, (Provider) danaRS_Packet_General_Delivery_StatusSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Password.class, (Provider) danaRS_Packet_General_Get_PasswordSubcomponentFactoryProvider).put(DanaRS_Packet_General_Initial_Screen_Information.class, (Provider) danaRS_Packet_General_Initial_Screen_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Alarm.class, (Provider) danaRS_Packet_Notify_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Delivery_Complete.class, (Provider) danaRS_Packet_Notify_Delivery_CompleteSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Delivery_Rate_Display.class, (Provider) danaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Missed_Bolus_Alarm.class, (Provider) danaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_Pump_Time.class, (Provider) danaRS_Packet_Option_Get_Pump_TimeSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_User_Option.class, (Provider) danaRS_Packet_Option_Get_User_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_Pump_Time.class, (Provider) danaRS_Packet_Option_Set_Pump_TimeSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_User_Option.class, (Provider) danaRS_Packet_Option_Set_User_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_History_.class, (Provider) danaRS_Packet_History_SubcomponentFactoryProvider).put(DanaRS_Packet_History_Alarm.class, (Provider) danaRS_Packet_History_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_History_All_History.class, (Provider) danaRS_Packet_History_All_HistorySubcomponentFactoryProvider).put(DanaRS_Packet_History_Basal.class, (Provider) danaRS_Packet_History_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_History_Blood_Glucose.class, (Provider) danaRS_Packet_History_Blood_GlucoseSubcomponentFactoryProvider).put(DanaRS_Packet_History_Bolus.class, (Provider) danaRS_Packet_History_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Review_Bolus_Avg.class, (Provider) danaRS_Packet_Review_Bolus_AvgSubcomponentFactoryProvider).put(DanaRS_Packet_History_Carbohydrate.class, (Provider) danaRS_Packet_History_CarbohydrateSubcomponentFactoryProvider).put(DanaRS_Packet_History_Daily.class, (Provider) danaRS_Packet_History_DailySubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_More_Information.class, (Provider) danaRS_Packet_General_Get_More_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Pump_Check.class, (Provider) danaRS_Packet_General_Get_Pump_CheckSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Shipping_Information.class, (Provider) danaRS_Packet_General_Get_Shipping_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Today_Delivery_Total.class, (Provider) danaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_User_Time_Change_Flag.class, (Provider) danaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentFactoryProvider).put(DanaRS_Packet_History_Prime.class, (Provider) danaRS_Packet_History_PrimeSubcomponentFactoryProvider).put(DanaRS_Packet_History_Refill.class, (Provider) danaRS_Packet_History_RefillSubcomponentFactoryProvider).put(DanaRS_Packet_General_Set_History_Upload_Mode.class, (Provider) danaRS_Packet_General_Set_History_Upload_ModeSubcomponentFactoryProvider).put(DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.class, (Provider) danaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentFactoryProvider).put(DanaRS_Packet_History_Suspend.class, (Provider) danaRS_Packet_History_SuspendSubcomponentFactoryProvider).put(DanaRS_Packet_History_Temporary.class, (Provider) danaRS_Packet_History_TemporarySubcomponentFactoryProvider).put(DanaRS_Packet_APS_Basal_Set_Temporary_Basal.class, (Provider) danaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_APS_History_Events.class, (Provider) danaRS_Packet_APS_History_EventsSubcomponentFactoryProvider).put(DanaRS_Packet_APS_Set_Event_History.class, (Provider) danaRS_Packet_APS_Set_Event_HistorySubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Shipping_Version.class, (Provider) danaRS_Packet_General_Get_Shipping_VersionSubcomponentFactoryProvider).put(DanaRS_Packet_Review_Get_Pump_Dec_Ratio.class, (Provider) danaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.class, (Provider) danaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.class, (Provider) danaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider).put(BLEScanActivity.class, (Provider) bLEScanActivitySubcomponentFactoryProvider).put(PairingHelperActivity.class, (Provider) pairingHelperActivitySubcomponentFactoryProvider).put(EnterPinActivity.class, (Provider) enterPinActivitySubcomponentFactoryProvider).put(PairingProgressDialog.class, (Provider) pairingProgressDialogSubcomponentFactoryProvider).put(DanaRSService.class, (Provider) danaRSServiceSubcomponentFactoryProvider).put(OHUploadWorker.class, (Provider) oHUploadWorkerSubcomponentFactoryProvider).build();
  }

  private DispatchingAndroidInjector<Object> dispatchingAndroidInjectorOfObject() {
    return DispatchingAndroidInjector_Factory.newInstance(mapOfClassOfAndProviderOfAndroidInjectorFactoryOf(), ImmutableMap.<String, Provider<AndroidInjector.Factory<?>>>of());
  }

  private KeepAliveReceiver.KeepAliveManager keepAliveManager() {
    return new KeepAliveReceiver.KeepAliveManager(provideAAPSLoggerProvider.get(), localAlertUtilsProvider.get());
  }

  private Map<Integer, PluginBase> allConfigsMapOfIntegerAndPluginBase() {
    return ImmutableMap.<Integer, PluginBase>builderWithExpectedSize(32).put(0, overviewPluginProvider.get()).put(10, iobCobCalculatorPluginProvider.get()).put(20, actionsPluginProvider.get()).put(30, insulinOrefRapidActingPluginProvider.get()).put(40, insulinOrefUltraRapidActingPluginProvider.get()).put(42, insulinLyumjevPluginProvider.get()).put(50, insulinOrefFreePeakPluginProvider.get()).put(60, sensitivityAAPSPluginProvider.get()).put(70, sensitivityWeightedAveragePluginProvider.get()).put(80, sensitivityOref1PluginProvider.get()).put(170, virtualPumpPluginProvider.get()).put(230, nSProfilePluginProvider.get()).put(250, automationPluginProvider.get()).put(260, treatmentsPluginProvider.get()).put(265, safetyPluginProvider.get()).put(320, foodPluginProvider.get()).put(330, wearPluginProvider.get()).put(340, statusLinePluginProvider.get()).put(350, persistentNotificationPluginProvider.get()).put(360, nSClientPluginProvider.get()).put(370, maintenancePluginProvider.get()).put(380, dstHelperPluginProvider.get()).put(390, dataBroadcastPluginProvider.get()).put(400, xdripPluginProvider.get()).put(410, nSClientSourcePluginProvider.get()).put(420, mM640gPluginProvider.get()).put(430, glimpPluginProvider.get()).put(440, dexcomPluginProvider.get()).put(450, poctechPluginProvider.get()).put(460, tomatoPluginProvider.get()).put(470, randomBgPluginProvider.get()).put(490, configBuilderPluginProvider.get()).build();
  }

  private List<PluginBase> listOfPluginBase() {
    return AppModule_ProvidesPluginsFactory.providesPlugins(appModule, configProvider.get(), allConfigsMapOfIntegerAndPluginBase(), DoubleCheck.lazy(pumpDriverMapOfIntegerAndPluginBaseProvider), DoubleCheck.lazy(notNSClientMapOfIntegerAndPluginBaseProvider), DoubleCheck.lazy(aPSMapOfIntegerAndPluginBaseProvider));
  }

  private UploadQueue uploadQueue() {
    return new UploadQueue(provideAAPSLoggerProvider.get(), databaseHelperProvider.get(), application, provideSharedPreferencesProvider.get(), rxBusWrapperProvider.get());
  }

  private PodStateManager podStateManager() {
    return OmnipodModule_Companion_PodStateManagerProviderFactory.podStateManagerProvider(aapsPodStateManagerProvider.get());
  }

  @SuppressWarnings("unchecked")
  private void initialize(final SkinsModule skinsModuleParam, final AppModule appModuleParam,
      final CoreModule coreModuleParam, final MainApp applicationParam) {
    this.historyBrowseActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesHistoryBrowseActivity.HistoryBrowseActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesHistoryBrowseActivity.HistoryBrowseActivitySubcomponent.Factory get(
          ) {
        return new HistoryBrowseActivitySubcomponentFactory();
      }
    };
    this.insightAlertActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesInsightAlertActivity.InsightAlertActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesInsightAlertActivity.InsightAlertActivitySubcomponent.Factory get(
          ) {
        return new InsightAlertActivitySubcomponentFactory();
      }
    };
    this.insightPairingActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesInsightPairingActivity.InsightPairingActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesInsightPairingActivity.InsightPairingActivitySubcomponent.Factory get(
          ) {
        return new InsightPairingActivitySubcomponentFactory();
      }
    };
    this.insightPairingInformationActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesInsightPairingInformationActivity.InsightPairingInformationActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesInsightPairingInformationActivity.InsightPairingInformationActivitySubcomponent.Factory get(
          ) {
        return new InsightPairingInformationActivitySubcomponentFactory();
      }
    };
    this.logSettingActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesLogSettingActivity.LogSettingActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesLogSettingActivity.LogSettingActivitySubcomponent.Factory get(
          ) {
        return new LogSettingActivitySubcomponentFactory();
      }
    };
    this.mainActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributeMainActivity.MainActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributeMainActivity.MainActivitySubcomponent.Factory get() {
        return new MainActivitySubcomponentFactory();
      }
    };
    this.medtronicHistoryActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesMedtronicHistoryActivity.MedtronicHistoryActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesMedtronicHistoryActivity.MedtronicHistoryActivitySubcomponent.Factory get(
          ) {
        return new MedtronicHistoryActivitySubcomponentFactory();
      }
    };
    this.preferencesActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesPreferencesActivity.PreferencesActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesPreferencesActivity.PreferencesActivitySubcomponent.Factory get(
          ) {
        return new PreferencesActivitySubcomponentFactory();
      }
    };
    this.quickWizardListActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesQuickWizardListActivity.QuickWizardListActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesQuickWizardListActivity.QuickWizardListActivitySubcomponent.Factory get(
          ) {
        return new QuickWizardListActivitySubcomponentFactory();
      }
    };
    this.requestDexcomPermissionActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesRequestDexcomPermissionActivity.RequestDexcomPermissionActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesRequestDexcomPermissionActivity.RequestDexcomPermissionActivitySubcomponent.Factory get(
          ) {
        return new RequestDexcomPermissionActivitySubcomponentFactory();
      }
    };
    this.rileyLinkStatusActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesRileyLinkStatusActivity.RileyLinkStatusActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesRileyLinkStatusActivity.RileyLinkStatusActivitySubcomponent.Factory get(
          ) {
        return new RileyLinkStatusActivitySubcomponentFactory();
      }
    };
    this.rileyLinkBLEConfigActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesRileyLinkBLEConfigActivity.RileyLinkBLEConfigActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesRileyLinkBLEConfigActivity.RileyLinkBLEConfigActivitySubcomponent.Factory get(
          ) {
        return new RileyLinkBLEConfigActivitySubcomponentFactory();
      }
    };
    this.setupWizardActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesSetupWizardActivity.SetupWizardActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesSetupWizardActivity.SetupWizardActivitySubcomponent.Factory get(
          ) {
        return new SetupWizardActivitySubcomponentFactory();
      }
    };
    this.singleFragmentActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesSingleFragmentActivity.SingleFragmentActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesSingleFragmentActivity.SingleFragmentActivitySubcomponent.Factory get(
          ) {
        return new SingleFragmentActivitySubcomponentFactory();
      }
    };
    this.smsCommunicatorOtpActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesSmsCommunicatorOtpActivity.SmsCommunicatorOtpActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesSmsCommunicatorOtpActivity.SmsCommunicatorOtpActivitySubcomponent.Factory get(
          ) {
        return new SmsCommunicatorOtpActivitySubcomponentFactory();
      }
    };
    this.statsActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesStatsActivity.StatsActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesStatsActivity.StatsActivitySubcomponent.Factory get() {
        return new StatsActivitySubcomponentFactory();
      }
    };
    this.surveyActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesSurveyActivity.SurveyActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesSurveyActivity.SurveyActivitySubcomponent.Factory get() {
        return new SurveyActivitySubcomponentFactory();
      }
    };
    this.profileHelperActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesDefaultProfileActivity.ProfileHelperActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesDefaultProfileActivity.ProfileHelperActivitySubcomponent.Factory get(
          ) {
        return new ProfileHelperActivitySubcomponentFactory();
      }
    };
    this.openHumansLoginActivitySubcomponentFactoryProvider = new Provider<ActivitiesModule_ContributesOpenHumansLoginActivity.OpenHumansLoginActivitySubcomponent.Factory>() {
      @Override
      public ActivitiesModule_ContributesOpenHumansLoginActivity.OpenHumansLoginActivitySubcomponent.Factory get(
          ) {
        return new OpenHumansLoginActivitySubcomponentFactory();
      }
    };
    this.myPreferenceFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesPreferencesFragment.MyPreferenceFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesPreferencesFragment.MyPreferenceFragmentSubcomponent.Factory get(
          ) {
        return new MyPreferenceFragmentSubcomponentFactory();
      }
    };
    this.actionsFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesActionsFragment.ActionsFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesActionsFragment.ActionsFragmentSubcomponent.Factory get() {
        return new ActionsFragmentSubcomponentFactory();
      }
    };
    this.automationFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesAutomationFragment.AutomationFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesAutomationFragment.AutomationFragmentSubcomponent.Factory get(
          ) {
        return new AutomationFragmentSubcomponentFactory();
      }
    };
    this.bGSourceFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesBGSourceFragment.BGSourceFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesBGSourceFragment.BGSourceFragmentSubcomponent.Factory get(
          ) {
        return new BGSourceFragmentSubcomponentFactory();
      }
    };
    this.comboFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesComboFragment.ComboFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesComboFragment.ComboFragmentSubcomponent.Factory get() {
        return new ComboFragmentSubcomponentFactory();
      }
    };
    this.configBuilderFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesConfigBuilderFragment.ConfigBuilderFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesConfigBuilderFragment.ConfigBuilderFragmentSubcomponent.Factory get(
          ) {
        return new ConfigBuilderFragmentSubcomponentFactory();
      }
    };
    this.foodFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesFoodFragment.FoodFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesFoodFragment.FoodFragmentSubcomponent.Factory get() {
        return new FoodFragmentSubcomponentFactory();
      }
    };
    this.insulinFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesInsulinFragment.InsulinFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesInsulinFragment.InsulinFragmentSubcomponent.Factory get() {
        return new InsulinFragmentSubcomponentFactory();
      }
    };
    this.localProfileFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesLocalProfileFragment.LocalProfileFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesLocalProfileFragment.LocalProfileFragmentSubcomponent.Factory get(
          ) {
        return new LocalProfileFragmentSubcomponentFactory();
      }
    };
    this.objectivesFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesObjectivesFragment.ObjectivesFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesObjectivesFragment.ObjectivesFragmentSubcomponent.Factory get(
          ) {
        return new ObjectivesFragmentSubcomponentFactory();
      }
    };
    this.openAPSAMAFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesOpenAPSAMAFragment.OpenAPSAMAFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesOpenAPSAMAFragment.OpenAPSAMAFragmentSubcomponent.Factory get(
          ) {
        return new OpenAPSAMAFragmentSubcomponentFactory();
      }
    };
    this.openAPSSMBFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesOpenAPSSMBFragment.OpenAPSSMBFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesOpenAPSSMBFragment.OpenAPSSMBFragmentSubcomponent.Factory get(
          ) {
        return new OpenAPSSMBFragmentSubcomponentFactory();
      }
    };
    this.overviewFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesOverviewFragment.OverviewFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesOverviewFragment.OverviewFragmentSubcomponent.Factory get(
          ) {
        return new OverviewFragmentSubcomponentFactory();
      }
    };
    this.localInsightFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesLocalInsightFragment.LocalInsightFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesLocalInsightFragment.LocalInsightFragmentSubcomponent.Factory get(
          ) {
        return new LocalInsightFragmentSubcomponentFactory();
      }
    };
    this.loopFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesLoopFragment.LoopFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesLoopFragment.LoopFragmentSubcomponent.Factory get() {
        return new LoopFragmentSubcomponentFactory();
      }
    };
    this.maintenanceFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesMaintenanceFragment.MaintenanceFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesMaintenanceFragment.MaintenanceFragmentSubcomponent.Factory get(
          ) {
        return new MaintenanceFragmentSubcomponentFactory();
      }
    };
    this.medtronicFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesMedtronicFragment.MedtronicFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesMedtronicFragment.MedtronicFragmentSubcomponent.Factory get(
          ) {
        return new MedtronicFragmentSubcomponentFactory();
      }
    };
    this.omnipodOverviewFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesOmnipodFragment.OmnipodOverviewFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesOmnipodFragment.OmnipodOverviewFragmentSubcomponent.Factory get(
          ) {
        return new OmnipodOverviewFragmentSubcomponentFactory();
      }
    };
    this.nSProfileFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesNSProfileFragment.NSProfileFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesNSProfileFragment.NSProfileFragmentSubcomponent.Factory get(
          ) {
        return new NSProfileFragmentSubcomponentFactory();
      }
    };
    this.nSClientFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesNSClientFragment.NSClientFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesNSClientFragment.NSClientFragmentSubcomponent.Factory get(
          ) {
        return new NSClientFragmentSubcomponentFactory();
      }
    };
    this.smsCommunicatorFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesSmsCommunicatorFragment.SmsCommunicatorFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesSmsCommunicatorFragment.SmsCommunicatorFragmentSubcomponent.Factory get(
          ) {
        return new SmsCommunicatorFragmentSubcomponentFactory();
      }
    };
    this.wearFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesWearFragment.WearFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesWearFragment.WearFragmentSubcomponent.Factory get() {
        return new WearFragmentSubcomponentFactory();
      }
    };
    this.tidepoolFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTidepoolFragment.TidepoolFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTidepoolFragment.TidepoolFragmentSubcomponent.Factory get(
          ) {
        return new TidepoolFragmentSubcomponentFactory();
      }
    };
    this.treatmentsFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTreatmentsFragment.TreatmentsFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTreatmentsFragment.TreatmentsFragmentSubcomponent.Factory get(
          ) {
        return new TreatmentsFragmentSubcomponentFactory();
      }
    };
    this.treatmentsBolusFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTreatmentsBolusFragment.TreatmentsBolusFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTreatmentsBolusFragment.TreatmentsBolusFragmentSubcomponent.Factory get(
          ) {
        return new TreatmentsBolusFragmentSubcomponentFactory();
      }
    };
    this.treatmentsTemporaryBasalsFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTreatmentsTemporaryBasalsFragment.TreatmentsTemporaryBasalsFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTreatmentsTemporaryBasalsFragment.TreatmentsTemporaryBasalsFragmentSubcomponent.Factory get(
          ) {
        return new TreatmentsTemporaryBasalsFragmentSubcomponentFactory();
      }
    };
    this.treatmentsTempTargetFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTreatmentsTempTargetFragment.TreatmentsTempTargetFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTreatmentsTempTargetFragment.TreatmentsTempTargetFragmentSubcomponent.Factory get(
          ) {
        return new TreatmentsTempTargetFragmentSubcomponentFactory();
      }
    };
    this.treatmentsExtendedBolusesFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTreatmentsExtendedBolusesFragment.TreatmentsExtendedBolusesFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTreatmentsExtendedBolusesFragment.TreatmentsExtendedBolusesFragmentSubcomponent.Factory get(
          ) {
        return new TreatmentsExtendedBolusesFragmentSubcomponentFactory();
      }
    };
    this.treatmentsCareportalFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTreatmentsCareportalFragment.TreatmentsCareportalFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTreatmentsCareportalFragment.TreatmentsCareportalFragmentSubcomponent.Factory get(
          ) {
        return new TreatmentsCareportalFragmentSubcomponentFactory();
      }
    };
    this.treatmentsProfileSwitchFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTreatmentsProfileSwitchFragment.TreatmentsProfileSwitchFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTreatmentsProfileSwitchFragment.TreatmentsProfileSwitchFragmentSubcomponent.Factory get(
          ) {
        return new TreatmentsProfileSwitchFragmentSubcomponentFactory();
      }
    };
    this.virtualPumpFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesVirtualPumpFragment.VirtualPumpFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesVirtualPumpFragment.VirtualPumpFragmentSubcomponent.Factory get(
          ) {
        return new VirtualPumpFragmentSubcomponentFactory();
      }
    };
    this.openHumansFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesOpenHumansFragment.OpenHumansFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesOpenHumansFragment.OpenHumansFragmentSubcomponent.Factory get(
          ) {
        return new OpenHumansFragmentSubcomponentFactory();
      }
    };
    this.calibrationDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesCalibrationDialog.CalibrationDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesCalibrationDialog.CalibrationDialogSubcomponent.Factory get(
          ) {
        return new CalibrationDialogSubcomponentFactory();
      }
    };
    this.carbsDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesCarbsDialog.CarbsDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesCarbsDialog.CarbsDialogSubcomponent.Factory get() {
        return new CarbsDialogSubcomponentFactory();
      }
    };
    this.careDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesCareDialog.CareDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesCareDialog.CareDialogSubcomponent.Factory get() {
        return new CareDialogSubcomponentFactory();
      }
    };
    this.editActionDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesEditActionDialog.EditActionDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesEditActionDialog.EditActionDialogSubcomponent.Factory get(
          ) {
        return new EditActionDialogSubcomponentFactory();
      }
    };
    this.editEventDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesEditEventDialog.EditEventDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesEditEventDialog.EditEventDialogSubcomponent.Factory get() {
        return new EditEventDialogSubcomponentFactory();
      }
    };
    this.editTriggerDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesEditTriggerDialog.EditTriggerDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesEditTriggerDialog.EditTriggerDialogSubcomponent.Factory get(
          ) {
        return new EditTriggerDialogSubcomponentFactory();
      }
    };
    this.editQuickWizardDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesEditQuickWizardDialog.EditQuickWizardDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesEditQuickWizardDialog.EditQuickWizardDialogSubcomponent.Factory get(
          ) {
        return new EditQuickWizardDialogSubcomponentFactory();
      }
    };
    this.extendedBolusDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesExtendedBolusDialog.ExtendedBolusDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesExtendedBolusDialog.ExtendedBolusDialogSubcomponent.Factory get(
          ) {
        return new ExtendedBolusDialogSubcomponentFactory();
      }
    };
    this.fillDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesFillDialog.FillDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesFillDialog.FillDialogSubcomponent.Factory get() {
        return new FillDialogSubcomponentFactory();
      }
    };
    this.chooseActionDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesChooseActionDialog.ChooseActionDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesChooseActionDialog.ChooseActionDialogSubcomponent.Factory get(
          ) {
        return new ChooseActionDialogSubcomponentFactory();
      }
    };
    this.chooseTriggerDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesChooseTriggerDialog.ChooseTriggerDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesChooseTriggerDialog.ChooseTriggerDialogSubcomponent.Factory get(
          ) {
        return new ChooseTriggerDialogSubcomponentFactory();
      }
    };
    this.insulinDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesInsulinDialog.InsulinDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesInsulinDialog.InsulinDialogSubcomponent.Factory get() {
        return new InsulinDialogSubcomponentFactory();
      }
    };
    this.uAMDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesUAMDialog.UAMDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesUAMDialog.UAMDialogSubcomponent.Factory get() {
        return new UAMDialogSubcomponentFactory();
      }
    };
    this.loopDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesLoopDialog.LoopDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesLoopDialog.LoopDialogSubcomponent.Factory get() {
        return new LoopDialogSubcomponentFactory();
      }
    };
    this.objectivesExamDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesObjectivesExamDialog.ObjectivesExamDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesObjectivesExamDialog.ObjectivesExamDialogSubcomponent.Factory get(
          ) {
        return new ObjectivesExamDialogSubcomponentFactory();
      }
    };
    this.profileSwitchDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesProfileSwitchDialog.ProfileSwitchDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesProfileSwitchDialog.ProfileSwitchDialogSubcomponent.Factory get(
          ) {
        return new ProfileSwitchDialogSubcomponentFactory();
      }
    };
    this.tempBasalDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTempBasalDialog.TempBasalDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTempBasalDialog.TempBasalDialogSubcomponent.Factory get() {
        return new TempBasalDialogSubcomponentFactory();
      }
    };
    this.tempTargetDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTempTargetDialog.TempTargetDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTempTargetDialog.TempTargetDialogSubcomponent.Factory get(
          ) {
        return new TempTargetDialogSubcomponentFactory();
      }
    };
    this.treatmentDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesTreatmentDialog.TreatmentDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesTreatmentDialog.TreatmentDialogSubcomponent.Factory get() {
        return new TreatmentDialogSubcomponentFactory();
      }
    };
    this.wizardDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesWizardDialog.WizardDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesWizardDialog.WizardDialogSubcomponent.Factory get() {
        return new WizardDialogSubcomponentFactory();
      }
    };
    this.wizardInfoDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesWizardInfoDialog.WizardInfoDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesWizardInfoDialog.WizardInfoDialogSubcomponent.Factory get(
          ) {
        return new WizardInfoDialogSubcomponentFactory();
      }
    };
    this.exchangeAuthTokenDialogSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesExchangeAuthTokenDialot.ExchangeAuthTokenDialogSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesExchangeAuthTokenDialot.ExchangeAuthTokenDialogSubcomponent.Factory get(
          ) {
        return new ExchangeAuthTokenDialogSubcomponentFactory();
      }
    };
    this.passwordCheckSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesPasswordCheck.PasswordCheckSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesPasswordCheck.PasswordCheckSubcomponent.Factory get() {
        return new PasswordCheckSubcomponentFactory();
      }
    };
    this.rileyLinkStatusGeneralFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesRileyLinkStatusGeneral.RileyLinkStatusGeneralFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesRileyLinkStatusGeneral.RileyLinkStatusGeneralFragmentSubcomponent.Factory get(
          ) {
        return new RileyLinkStatusGeneralFragmentSubcomponentFactory();
      }
    };
    this.rileyLinkStatusHistoryFragmentSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesRileyLinkStatusHistoryFragment.RileyLinkStatusHistoryFragmentSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesRileyLinkStatusHistoryFragment.RileyLinkStatusHistoryFragmentSubcomponent.Factory get(
          ) {
        return new RileyLinkStatusHistoryFragmentSubcomponentFactory();
      }
    };
    this.rileyLinkStatusDeviceMedtronicSubcomponentFactoryProvider = new Provider<FragmentsModule_ContributesRileyLinkStatusDeviceMedtronic.RileyLinkStatusDeviceMedtronicSubcomponent.Factory>() {
      @Override
      public FragmentsModule_ContributesRileyLinkStatusDeviceMedtronic.RileyLinkStatusDeviceMedtronicSubcomponent.Factory get(
          ) {
        return new RileyLinkStatusDeviceMedtronicSubcomponentFactory();
      }
    };
    this.autoStartReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesAutoStartReceiver.AutoStartReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesAutoStartReceiver.AutoStartReceiverSubcomponent.Factory get(
          ) {
        return new AutoStartReceiverSubcomponentFactory();
      }
    };
    this.bTReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesBTReceiver.BTReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesBTReceiver.BTReceiverSubcomponent.Factory get() {
        return new BTReceiverSubcomponentFactory();
      }
    };
    this.chargingStateReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesChargingStateReceiver.ChargingStateReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesChargingStateReceiver.ChargingStateReceiverSubcomponent.Factory get(
          ) {
        return new ChargingStateReceiverSubcomponentFactory();
      }
    };
    this.dataReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesDataReceiver.DataReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesDataReceiver.DataReceiverSubcomponent.Factory get() {
        return new DataReceiverSubcomponentFactory();
      }
    };
    this.keepAliveReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesKeepAliveReceiver.KeepAliveReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesKeepAliveReceiver.KeepAliveReceiverSubcomponent.Factory get(
          ) {
        return new KeepAliveReceiverSubcomponentFactory();
      }
    };
    this.rileyLinkBluetoothStateReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesRileyLinkBluetoothStateReceiver.RileyLinkBluetoothStateReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesRileyLinkBluetoothStateReceiver.RileyLinkBluetoothStateReceiverSubcomponent.Factory get(
          ) {
        return new RileyLinkBluetoothStateReceiverSubcomponentFactory();
      }
    };
    this.smsReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesSmsReceiver.SmsReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesSmsReceiver.SmsReceiverSubcomponent.Factory get() {
        return new SmsReceiverSubcomponentFactory();
      }
    };
    this.timeDateOrTZChangeReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesTimeDateOrTZChangeReceiver.TimeDateOrTZChangeReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesTimeDateOrTZChangeReceiver.TimeDateOrTZChangeReceiverSubcomponent.Factory get(
          ) {
        return new TimeDateOrTZChangeReceiverSubcomponentFactory();
      }
    };
    this.carbSuggestionReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesCarbSuggestionReceiver.CarbSuggestionReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesCarbSuggestionReceiver.CarbSuggestionReceiverSubcomponent.Factory get(
          ) {
        return new CarbSuggestionReceiverSubcomponentFactory();
      }
    };
    this.rileyLinkBroadcastReceiverSubcomponentFactoryProvider = new Provider<ReceiversModule_ContributesRileyLinkBroadcastReceiver.RileyLinkBroadcastReceiverSubcomponent.Factory>() {
      @Override
      public ReceiversModule_ContributesRileyLinkBroadcastReceiver.RileyLinkBroadcastReceiverSubcomponent.Factory get(
          ) {
        return new RileyLinkBroadcastReceiverSubcomponentFactory();
      }
    };
    this.alarmSoundServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesAlarmSoundService.AlarmSoundServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesAlarmSoundService.AlarmSoundServiceSubcomponent.Factory get(
          ) {
        return new AlarmSoundServiceSubcomponentFactory();
      }
    };
    this.dataServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesDataService.DataServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesDataService.DataServiceSubcomponent.Factory get() {
        return new DataServiceSubcomponentFactory();
      }
    };
    this.dismissNotificationServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesDismissNotificationService.DismissNotificationServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesDismissNotificationService.DismissNotificationServiceSubcomponent.Factory get(
          ) {
        return new DismissNotificationServiceSubcomponentFactory();
      }
    };
    this.dummyServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesDummyService.DummyServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesDummyService.DummyServiceSubcomponent.Factory get() {
        return new DummyServiceSubcomponentFactory();
      }
    };
    this.locationServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesLocationService.LocationServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesLocationService.LocationServiceSubcomponent.Factory get() {
        return new LocationServiceSubcomponentFactory();
      }
    };
    this.nSClientServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesNSClientService.NSClientServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesNSClientService.NSClientServiceSubcomponent.Factory get() {
        return new NSClientServiceSubcomponentFactory();
      }
    };
    this.watchUpdaterServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesWatchUpdaterService.WatchUpdaterServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesWatchUpdaterService.WatchUpdaterServiceSubcomponent.Factory get(
          ) {
        return new WatchUpdaterServiceSubcomponentFactory();
      }
    };
    this.insightAlertServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesInsightAlertService.InsightAlertServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesInsightAlertService.InsightAlertServiceSubcomponent.Factory get(
          ) {
        return new InsightAlertServiceSubcomponentFactory();
      }
    };
    this.insightConnectionServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesInsightConnectionService.InsightConnectionServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesInsightConnectionService.InsightConnectionServiceSubcomponent.Factory get(
          ) {
        return new InsightConnectionServiceSubcomponentFactory();
      }
    };
    this.rileyLinkServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesRileyLinkService.RileyLinkServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesRileyLinkService.RileyLinkServiceSubcomponent.Factory get() {
        return new RileyLinkServiceSubcomponentFactory();
      }
    };
    this.rileyLinkMedtronicServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesRileyLinkMedtronicService.RileyLinkMedtronicServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesRileyLinkMedtronicService.RileyLinkMedtronicServiceSubcomponent.Factory get(
          ) {
        return new RileyLinkMedtronicServiceSubcomponentFactory();
      }
    };
    this.rileyLinkOmnipodServiceSubcomponentFactoryProvider = new Provider<ServicesModule_ContributesRileyLinkOmnipodService.RileyLinkOmnipodServiceSubcomponent.Factory>() {
      @Override
      public ServicesModule_ContributesRileyLinkOmnipodService.RileyLinkOmnipodServiceSubcomponent.Factory get(
          ) {
        return new RileyLinkOmnipodServiceSubcomponentFactory();
      }
    };
    this.automationEventSubcomponentFactoryProvider = new Provider<AutomationModule_AutomationEventInjector.AutomationEventSubcomponent.Factory>() {
      @Override
      public AutomationModule_AutomationEventInjector.AutomationEventSubcomponent.Factory get() {
        return new AutomationEventSubcomponentFactory();
      }
    };
  }

  @SuppressWarnings("unchecked")
  private void initialize2(final SkinsModule skinsModuleParam, final AppModule appModuleParam,
      final CoreModule coreModuleParam, final MainApp applicationParam) {
    this.triggerSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerInjector.TriggerSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerInjector.TriggerSubcomponent.Factory get() {
        return new TriggerSubcomponentFactory();
      }
    };
    this.triggerAutosensValueSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerAutosensValueInjector.TriggerAutosensValueSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerAutosensValueInjector.TriggerAutosensValueSubcomponent.Factory get(
          ) {
        return new TriggerAutosensValueSubcomponentFactory();
      }
    };
    this.triggerBgSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerBgInjector.TriggerBgSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerBgInjector.TriggerBgSubcomponent.Factory get() {
        return new TriggerBgSubcomponentFactory();
      }
    };
    this.triggerBolusAgoSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerBolusAgoInjector.TriggerBolusAgoSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerBolusAgoInjector.TriggerBolusAgoSubcomponent.Factory get() {
        return new TriggerBolusAgoSubcomponentFactory();
      }
    };
    this.triggerCOBSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerCOBInjector.TriggerCOBSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerCOBInjector.TriggerCOBSubcomponent.Factory get() {
        return new TriggerCOBSubcomponentFactory();
      }
    };
    this.triggerConnectorSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerConnectorInjector.TriggerConnectorSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerConnectorInjector.TriggerConnectorSubcomponent.Factory get() {
        return new TriggerConnectorSubcomponentFactory();
      }
    };
    this.triggerDeltaSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerDeltaInjector.TriggerDeltaSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerDeltaInjector.TriggerDeltaSubcomponent.Factory get() {
        return new TriggerDeltaSubcomponentFactory();
      }
    };
    this.triggerDummySubcomponentFactoryProvider = new Provider<AutomationModule_TriggerDummyInjector.TriggerDummySubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerDummyInjector.TriggerDummySubcomponent.Factory get() {
        return new TriggerDummySubcomponentFactory();
      }
    };
    this.triggerIobSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerIobInjector.TriggerIobSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerIobInjector.TriggerIobSubcomponent.Factory get() {
        return new TriggerIobSubcomponentFactory();
      }
    };
    this.triggerLocationSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerLocationInjector.TriggerLocationSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerLocationInjector.TriggerLocationSubcomponent.Factory get() {
        return new TriggerLocationSubcomponentFactory();
      }
    };
    this.triggerProfilePercentSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerProfilePercentInjector.TriggerProfilePercentSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerProfilePercentInjector.TriggerProfilePercentSubcomponent.Factory get(
          ) {
        return new TriggerProfilePercentSubcomponentFactory();
      }
    };
    this.triggerPumpLastConnectionSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerPumpLastConnectionInjector.TriggerPumpLastConnectionSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerPumpLastConnectionInjector.TriggerPumpLastConnectionSubcomponent.Factory get(
          ) {
        return new TriggerPumpLastConnectionSubcomponentFactory();
      }
    };
    this.triggerBTDeviceSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerBTDeviceInjector.TriggerBTDeviceSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerBTDeviceInjector.TriggerBTDeviceSubcomponent.Factory get() {
        return new TriggerBTDeviceSubcomponentFactory();
      }
    };
    this.triggerRecurringTimeSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerRecurringTimeInjector.TriggerRecurringTimeSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerRecurringTimeInjector.TriggerRecurringTimeSubcomponent.Factory get(
          ) {
        return new TriggerRecurringTimeSubcomponentFactory();
      }
    };
    this.triggerTempTargetSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerTempTargetInjector.TriggerTempTargetSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerTempTargetInjector.TriggerTempTargetSubcomponent.Factory get(
          ) {
        return new TriggerTempTargetSubcomponentFactory();
      }
    };
    this.triggerTimeSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerTime.TriggerTimeSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerTime.TriggerTimeSubcomponent.Factory get() {
        return new TriggerTimeSubcomponentFactory();
      }
    };
    this.triggerTimeRangeSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerTimeRangeInjector.TriggerTimeRangeSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerTimeRangeInjector.TriggerTimeRangeSubcomponent.Factory get() {
        return new TriggerTimeRangeSubcomponentFactory();
      }
    };
    this.triggerWifiSsidSubcomponentFactoryProvider = new Provider<AutomationModule_TriggerWifiSsidInjector.TriggerWifiSsidSubcomponent.Factory>() {
      @Override
      public AutomationModule_TriggerWifiSsidInjector.TriggerWifiSsidSubcomponent.Factory get() {
        return new TriggerWifiSsidSubcomponentFactory();
      }
    };
    this.actionSubcomponentFactoryProvider = new Provider<AutomationModule_ActionInjector.ActionSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionInjector.ActionSubcomponent.Factory get() {
        return new ActionSubcomponentFactory();
      }
    };
    this.actionLoopDisableSubcomponentFactoryProvider = new Provider<AutomationModule_ActionLoopDisableInjector.ActionLoopDisableSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionLoopDisableInjector.ActionLoopDisableSubcomponent.Factory get(
          ) {
        return new ActionLoopDisableSubcomponentFactory();
      }
    };
    this.actionLoopEnableSubcomponentFactoryProvider = new Provider<AutomationModule_ActionLoopEnableInjector.ActionLoopEnableSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionLoopEnableInjector.ActionLoopEnableSubcomponent.Factory get() {
        return new ActionLoopEnableSubcomponentFactory();
      }
    };
    this.actionLoopResumeSubcomponentFactoryProvider = new Provider<AutomationModule_ActionLoopResumeInjector.ActionLoopResumeSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionLoopResumeInjector.ActionLoopResumeSubcomponent.Factory get() {
        return new ActionLoopResumeSubcomponentFactory();
      }
    };
    this.actionLoopSuspendSubcomponentFactoryProvider = new Provider<AutomationModule_ActionLoopSuspendInjector.ActionLoopSuspendSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionLoopSuspendInjector.ActionLoopSuspendSubcomponent.Factory get(
          ) {
        return new ActionLoopSuspendSubcomponentFactory();
      }
    };
    this.actionNotificationSubcomponentFactoryProvider = new Provider<AutomationModule_ActionNotificationInjector.ActionNotificationSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionNotificationInjector.ActionNotificationSubcomponent.Factory get(
          ) {
        return new ActionNotificationSubcomponentFactory();
      }
    };
    this.actionAlarmSubcomponentFactoryProvider = new Provider<AutomationModule_ActionAlarmInjector.ActionAlarmSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionAlarmInjector.ActionAlarmSubcomponent.Factory get() {
        return new ActionAlarmSubcomponentFactory();
      }
    };
    this.actionProfileSwitchSubcomponentFactoryProvider = new Provider<AutomationModule_ActionProfileSwitchInjector.ActionProfileSwitchSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionProfileSwitchInjector.ActionProfileSwitchSubcomponent.Factory get(
          ) {
        return new ActionProfileSwitchSubcomponentFactory();
      }
    };
    this.actionProfileSwitchPercentSubcomponentFactoryProvider = new Provider<AutomationModule_ActionProfileSwitchPercentInjector.ActionProfileSwitchPercentSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionProfileSwitchPercentInjector.ActionProfileSwitchPercentSubcomponent.Factory get(
          ) {
        return new ActionProfileSwitchPercentSubcomponentFactory();
      }
    };
    this.actionSendSMSSubcomponentFactoryProvider = new Provider<AutomationModule_ActionSendSMSInjector.ActionSendSMSSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionSendSMSInjector.ActionSendSMSSubcomponent.Factory get() {
        return new ActionSendSMSSubcomponentFactory();
      }
    };
    this.actionStartTempTargetSubcomponentFactoryProvider = new Provider<AutomationModule_ActionStartTempTargetInjector.ActionStartTempTargetSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionStartTempTargetInjector.ActionStartTempTargetSubcomponent.Factory get(
          ) {
        return new ActionStartTempTargetSubcomponentFactory();
      }
    };
    this.actionStopTempTargetSubcomponentFactoryProvider = new Provider<AutomationModule_ActionStopTempTargetInjector.ActionStopTempTargetSubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionStopTempTargetInjector.ActionStopTempTargetSubcomponent.Factory get(
          ) {
        return new ActionStopTempTargetSubcomponentFactory();
      }
    };
    this.actionDummySubcomponentFactoryProvider = new Provider<AutomationModule_ActionDummyInjector.ActionDummySubcomponent.Factory>() {
      @Override
      public AutomationModule_ActionDummyInjector.ActionDummySubcomponent.Factory get() {
        return new ActionDummySubcomponentFactory();
      }
    };
    this.elementSubcomponentFactoryProvider = new Provider<AutomationModule_ElementInjector.ElementSubcomponent.Factory>() {
      @Override
      public AutomationModule_ElementInjector.ElementSubcomponent.Factory get() {
        return new ElementSubcomponentFactory();
      }
    };
    this.inputBgSubcomponentFactoryProvider = new Provider<AutomationModule_InputBgInjector.InputBgSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputBgInjector.InputBgSubcomponent.Factory get() {
        return new InputBgSubcomponentFactory();
      }
    };
    this.inputButtonSubcomponentFactoryProvider = new Provider<AutomationModule_InputButtonInjector.InputButtonSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputButtonInjector.InputButtonSubcomponent.Factory get() {
        return new InputButtonSubcomponentFactory();
      }
    };
    this.comparatorSubcomponentFactoryProvider = new Provider<AutomationModule_ComparatorInjector.ComparatorSubcomponent.Factory>() {
      @Override
      public AutomationModule_ComparatorInjector.ComparatorSubcomponent.Factory get() {
        return new ComparatorSubcomponentFactory();
      }
    };
    this.comparatorConnectSubcomponentFactoryProvider = new Provider<AutomationModule_ComparatorConnectInjector.ComparatorConnectSubcomponent.Factory>() {
      @Override
      public AutomationModule_ComparatorConnectInjector.ComparatorConnectSubcomponent.Factory get(
          ) {
        return new ComparatorConnectSubcomponentFactory();
      }
    };
    this.comparatorExistsSubcomponentFactoryProvider = new Provider<AutomationModule_ComparatorExistsInjector.ComparatorExistsSubcomponent.Factory>() {
      @Override
      public AutomationModule_ComparatorExistsInjector.ComparatorExistsSubcomponent.Factory get() {
        return new ComparatorExistsSubcomponentFactory();
      }
    };
    this.inputDateTimeSubcomponentFactoryProvider = new Provider<AutomationModule_InputDateTimeInjector.InputDateTimeSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputDateTimeInjector.InputDateTimeSubcomponent.Factory get() {
        return new InputDateTimeSubcomponentFactory();
      }
    };
    this.inputDeltaSubcomponentFactoryProvider = new Provider<AutomationModule_InputDeltaInjector.InputDeltaSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputDeltaInjector.InputDeltaSubcomponent.Factory get() {
        return new InputDeltaSubcomponentFactory();
      }
    };
    this.inputDoubleSubcomponentFactoryProvider = new Provider<AutomationModule_InputDoubleInjector.InputDoubleSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputDoubleInjector.InputDoubleSubcomponent.Factory get() {
        return new InputDoubleSubcomponentFactory();
      }
    };
    this.inputDropdownMenuSubcomponentFactoryProvider = new Provider<AutomationModule_InputDropdownMenuInjector.InputDropdownMenuSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputDropdownMenuInjector.InputDropdownMenuSubcomponent.Factory get(
          ) {
        return new InputDropdownMenuSubcomponentFactory();
      }
    };
    this.inputDurationSubcomponentFactoryProvider = new Provider<AutomationModule_InputDurationInjector.InputDurationSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputDurationInjector.InputDurationSubcomponent.Factory get() {
        return new InputDurationSubcomponentFactory();
      }
    };
    this.inputInsulinSubcomponentFactoryProvider = new Provider<AutomationModule_InputInsulinInjector.InputInsulinSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputInsulinInjector.InputInsulinSubcomponent.Factory get() {
        return new InputInsulinSubcomponentFactory();
      }
    };
    this.inputLocationModeSubcomponentFactoryProvider = new Provider<AutomationModule_InputLocationModeInjector.InputLocationModeSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputLocationModeInjector.InputLocationModeSubcomponent.Factory get(
          ) {
        return new InputLocationModeSubcomponentFactory();
      }
    };
    this.inputPercentSubcomponentFactoryProvider = new Provider<AutomationModule_InputPercentInjector.InputPercentSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputPercentInjector.InputPercentSubcomponent.Factory get() {
        return new InputPercentSubcomponentFactory();
      }
    };
    this.inputProfileNameSubcomponentFactoryProvider = new Provider<AutomationModule_InputProfileNameInjector.InputProfileNameSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputProfileNameInjector.InputProfileNameSubcomponent.Factory get() {
        return new InputProfileNameSubcomponentFactory();
      }
    };
    this.inputStringSubcomponentFactoryProvider = new Provider<AutomationModule_InputStringInjector.InputStringSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputStringInjector.InputStringSubcomponent.Factory get() {
        return new InputStringSubcomponentFactory();
      }
    };
    this.inputTempTargetSubcomponentFactoryProvider = new Provider<AutomationModule_InputTempTargetInjector.InputTempTargetSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputTempTargetInjector.InputTempTargetSubcomponent.Factory get() {
        return new InputTempTargetSubcomponentFactory();
      }
    };
    this.inputTimeRangeSubcomponentFactoryProvider = new Provider<AutomationModule_InputTimeRangeInjector.InputTimeRangeSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputTimeRangeInjector.InputTimeRangeSubcomponent.Factory get() {
        return new InputTimeRangeSubcomponentFactory();
      }
    };
    this.inputTimeSubcomponentFactoryProvider = new Provider<AutomationModule_InputTimeInjector.InputTimeSubcomponent.Factory>() {
      @Override
      public AutomationModule_InputTimeInjector.InputTimeSubcomponent.Factory get() {
        return new InputTimeSubcomponentFactory();
      }
    };
    this.inputWeekDaySubcomponentFactoryProvider = new Provider<AutomationModule_InputWeekDayInjector.InputWeekDaySubcomponent.Factory>() {
      @Override
      public AutomationModule_InputWeekDayInjector.InputWeekDaySubcomponent.Factory get() {
        return new InputWeekDaySubcomponentFactory();
      }
    };
    this.labelWithElementSubcomponentFactoryProvider = new Provider<AutomationModule_LabelWithElementInjector.LabelWithElementSubcomponent.Factory>() {
      @Override
      public AutomationModule_LabelWithElementInjector.LabelWithElementSubcomponent.Factory get() {
        return new LabelWithElementSubcomponentFactory();
      }
    };
    this.staticLabelSubcomponentFactoryProvider = new Provider<AutomationModule_StaticLabelInjector.StaticLabelSubcomponent.Factory>() {
      @Override
      public AutomationModule_StaticLabelInjector.StaticLabelSubcomponent.Factory get() {
        return new StaticLabelSubcomponentFactory();
      }
    };
    this.commandQueueSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandQueueInjector.CommandQueueSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandQueueInjector.CommandQueueSubcomponent.Factory get() {
        return new CommandQueueSubcomponentFactory();
      }
    };
    this.commandBolusSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandBolusInjector.CommandBolusSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandBolusInjector.CommandBolusSubcomponent.Factory get() {
        return new CommandBolusSubcomponentFactory();
      }
    };
    this.commandCancelExtendedBolusSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandCancelExtendedBolusInjector.CommandCancelExtendedBolusSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandCancelExtendedBolusInjector.CommandCancelExtendedBolusSubcomponent.Factory get(
          ) {
        return new CommandCancelExtendedBolusSubcomponentFactory();
      }
    };
    this.commandCancelTempBasalSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandCancelTempBasalInjector.CommandCancelTempBasalSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandCancelTempBasalInjector.CommandCancelTempBasalSubcomponent.Factory get(
          ) {
        return new CommandCancelTempBasalSubcomponentFactory();
      }
    };
    this.commandExtendedBolusSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandExtendedBolusInjector.CommandExtendedBolusSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandExtendedBolusInjector.CommandExtendedBolusSubcomponent.Factory get(
          ) {
        return new CommandExtendedBolusSubcomponentFactory();
      }
    };
    this.commandInsightSetTBROverNotificationSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandInsightSetTBROverNotificationInjector.CommandInsightSetTBROverNotificationSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandInsightSetTBROverNotificationInjector.CommandInsightSetTBROverNotificationSubcomponent.Factory get(
          ) {
        return new CommandInsightSetTBROverNotificationSubcomponentFactory();
      }
    };
    this.commandLoadEventsSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandLoadEventsInjector.CommandLoadEventsSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandLoadEventsInjector.CommandLoadEventsSubcomponent.Factory get(
          ) {
        return new CommandLoadEventsSubcomponentFactory();
      }
    };
    this.commandLoadHistorySubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandLoadHistoryInjector.CommandLoadHistorySubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandLoadHistoryInjector.CommandLoadHistorySubcomponent.Factory get(
          ) {
        return new CommandLoadHistorySubcomponentFactory();
      }
    };
    this.commandLoadTDDsSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandLoadTDDsInjector.CommandLoadTDDsSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandLoadTDDsInjector.CommandLoadTDDsSubcomponent.Factory get() {
        return new CommandLoadTDDsSubcomponentFactory();
      }
    };
    this.commandReadStatusSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandReadStatusInjector.CommandReadStatusSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandReadStatusInjector.CommandReadStatusSubcomponent.Factory get(
          ) {
        return new CommandReadStatusSubcomponentFactory();
      }
    };
    this.commandSetProfileSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandSetProfileInjector.CommandSetProfileSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandSetProfileInjector.CommandSetProfileSubcomponent.Factory get(
          ) {
        return new CommandSetProfileSubcomponentFactory();
      }
    };
    this.commandSMBBolusSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandCommandSMBBolusInjector.CommandSMBBolusSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandCommandSMBBolusInjector.CommandSMBBolusSubcomponent.Factory get(
          ) {
        return new CommandSMBBolusSubcomponentFactory();
      }
    };
    this.commandStartPumpSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandStartPumpInjector.CommandStartPumpSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandStartPumpInjector.CommandStartPumpSubcomponent.Factory get(
          ) {
        return new CommandStartPumpSubcomponentFactory();
      }
    };
    this.commandStopPumpSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandStopPumpInjector.CommandStopPumpSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandStopPumpInjector.CommandStopPumpSubcomponent.Factory get() {
        return new CommandStopPumpSubcomponentFactory();
      }
    };
    this.commandTempBasalAbsoluteSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandTempBasalAbsoluteInjector.CommandTempBasalAbsoluteSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandTempBasalAbsoluteInjector.CommandTempBasalAbsoluteSubcomponent.Factory get(
          ) {
        return new CommandTempBasalAbsoluteSubcomponentFactory();
      }
    };
    this.commandTempBasalPercentSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandTempBasalPercentInjector.CommandTempBasalPercentSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandTempBasalPercentInjector.CommandTempBasalPercentSubcomponent.Factory get(
          ) {
        return new CommandTempBasalPercentSubcomponentFactory();
      }
    };
    this.commandSetUserSettingsSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandSetUserSettingsInjector.CommandSetUserSettingsSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandSetUserSettingsInjector.CommandSetUserSettingsSubcomponent.Factory get(
          ) {
        return new CommandSetUserSettingsSubcomponentFactory();
      }
    };
    this.commandCustomCommandSubcomponentFactoryProvider = new Provider<CommandQueueModule_CommandCustomCommandInjector.CommandCustomCommandSubcomponent.Factory>() {
      @Override
      public CommandQueueModule_CommandCustomCommandInjector.CommandCustomCommandSubcomponent.Factory get(
          ) {
        return new CommandCustomCommandSubcomponentFactory();
      }
    };
    this.objectiveSubcomponentFactoryProvider = new Provider<ObjectivesModule_ObjectiveInjector.ObjectiveSubcomponent.Factory>() {
      @Override
      public ObjectivesModule_ObjectiveInjector.ObjectiveSubcomponent.Factory get() {
        return new ObjectiveSubcomponentFactory();
      }
    };
    this.objective0SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective0Injector.Objective0Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective0Injector.Objective0Subcomponent.Factory get() {
        return new Objective0SubcomponentFactory();
      }
    };
    this.objective1SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective1Injector.Objective1Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective1Injector.Objective1Subcomponent.Factory get() {
        return new Objective1SubcomponentFactory();
      }
    };
    this.objective2SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective2Injector.Objective2Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective2Injector.Objective2Subcomponent.Factory get() {
        return new Objective2SubcomponentFactory();
      }
    };
    this.objective3SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective3Injector.Objective3Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective3Injector.Objective3Subcomponent.Factory get() {
        return new Objective3SubcomponentFactory();
      }
    };
    this.objective4SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective4Injector.Objective4Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective4Injector.Objective4Subcomponent.Factory get() {
        return new Objective4SubcomponentFactory();
      }
    };
    this.objective5SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective5Injector.Objective5Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective5Injector.Objective5Subcomponent.Factory get() {
        return new Objective5SubcomponentFactory();
      }
    };
    this.objective6SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective6Injector.Objective6Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective6Injector.Objective6Subcomponent.Factory get() {
        return new Objective6SubcomponentFactory();
      }
    };
    this.objective7SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective7Injector.Objective7Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective7Injector.Objective7Subcomponent.Factory get() {
        return new Objective7SubcomponentFactory();
      }
    };
    this.objective8SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective8Injector.Objective8Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective8Injector.Objective8Subcomponent.Factory get() {
        return new Objective8SubcomponentFactory();
      }
    };
    this.objective9SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective9Injector.Objective9Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective9Injector.Objective9Subcomponent.Factory get() {
        return new Objective9SubcomponentFactory();
      }
    };
    this.objective10SubcomponentFactoryProvider = new Provider<ObjectivesModule_Objective10Injector.Objective10Subcomponent.Factory>() {
      @Override
      public ObjectivesModule_Objective10Injector.Objective10Subcomponent.Factory get() {
        return new Objective10SubcomponentFactory();
      }
    };
    this.sWBreakSubcomponentFactoryProvider = new Provider<WizardModule_SwBreakInjector.SWBreakSubcomponent.Factory>() {
      @Override
      public WizardModule_SwBreakInjector.SWBreakSubcomponent.Factory get() {
        return new SWBreakSubcomponentFactory();
      }
    };
    this.sWButtonSubcomponentFactoryProvider = new Provider<WizardModule_SwButtonInjector.SWButtonSubcomponent.Factory>() {
      @Override
      public WizardModule_SwButtonInjector.SWButtonSubcomponent.Factory get() {
        return new SWButtonSubcomponentFactory();
      }
    };
    this.sWEditNumberWithUnitsSubcomponentFactoryProvider = new Provider<WizardModule_SwEditNumberWithUnitsInjector.SWEditNumberWithUnitsSubcomponent.Factory>() {
      @Override
      public WizardModule_SwEditNumberWithUnitsInjector.SWEditNumberWithUnitsSubcomponent.Factory get(
          ) {
        return new SWEditNumberWithUnitsSubcomponentFactory();
      }
    };
    this.sWEditStringSubcomponentFactoryProvider = new Provider<WizardModule_SwEditStringInjector.SWEditStringSubcomponent.Factory>() {
      @Override
      public WizardModule_SwEditStringInjector.SWEditStringSubcomponent.Factory get() {
        return new SWEditStringSubcomponentFactory();
      }
    };
    this.sWEditEncryptedPasswordSubcomponentFactoryProvider = new Provider<WizardModule_SwEditEncryptedPasswordInjector.SWEditEncryptedPasswordSubcomponent.Factory>() {
      @Override
      public WizardModule_SwEditEncryptedPasswordInjector.SWEditEncryptedPasswordSubcomponent.Factory get(
          ) {
        return new SWEditEncryptedPasswordSubcomponentFactory();
      }
    };
    this.sWEditUrlSubcomponentFactoryProvider = new Provider<WizardModule_SwEditUrlInjector.SWEditUrlSubcomponent.Factory>() {
      @Override
      public WizardModule_SwEditUrlInjector.SWEditUrlSubcomponent.Factory get() {
        return new SWEditUrlSubcomponentFactory();
      }
    };
    this.sWFragmentSubcomponentFactoryProvider = new Provider<WizardModule_SwFragmentInjector.SWFragmentSubcomponent.Factory>() {
      @Override
      public WizardModule_SwFragmentInjector.SWFragmentSubcomponent.Factory get() {
        return new SWFragmentSubcomponentFactory();
      }
    };
    this.sWHtmlLinkSubcomponentFactoryProvider = new Provider<WizardModule_SwHtmlLinkInjector.SWHtmlLinkSubcomponent.Factory>() {
      @Override
      public WizardModule_SwHtmlLinkInjector.SWHtmlLinkSubcomponent.Factory get() {
        return new SWHtmlLinkSubcomponentFactory();
      }
    };
    this.sWInfotextSubcomponentFactoryProvider = new Provider<WizardModule_SwInfotextInjector.SWInfotextSubcomponent.Factory>() {
      @Override
      public WizardModule_SwInfotextInjector.SWInfotextSubcomponent.Factory get() {
        return new SWInfotextSubcomponentFactory();
      }
    };
    this.sWItemSubcomponentFactoryProvider = new Provider<WizardModule_SwItemInjector.SWItemSubcomponent.Factory>() {
      @Override
      public WizardModule_SwItemInjector.SWItemSubcomponent.Factory get() {
        return new SWItemSubcomponentFactory();
      }
    };
    this.sWPluginSubcomponentFactoryProvider = new Provider<WizardModule_SwPluginInjector.SWPluginSubcomponent.Factory>() {
      @Override
      public WizardModule_SwPluginInjector.SWPluginSubcomponent.Factory get() {
        return new SWPluginSubcomponentFactory();
      }
    };
    this.sWRadioButtonSubcomponentFactoryProvider = new Provider<WizardModule_SwRadioButtonInjector.SWRadioButtonSubcomponent.Factory>() {
      @Override
      public WizardModule_SwRadioButtonInjector.SWRadioButtonSubcomponent.Factory get() {
        return new SWRadioButtonSubcomponentFactory();
      }
    };
    this.sWScreenSubcomponentFactoryProvider = new Provider<WizardModule_SwScreenInjector.SWScreenSubcomponent.Factory>() {
      @Override
      public WizardModule_SwScreenInjector.SWScreenSubcomponent.Factory get() {
        return new SWScreenSubcomponentFactory();
      }
    };
    this.sWEventListenerSubcomponentFactoryProvider = new Provider<WizardModule_SwEventListenerInjector.SWEventListenerSubcomponent.Factory>() {
      @Override
      public WizardModule_SwEventListenerInjector.SWEventListenerSubcomponent.Factory get() {
        return new SWEventListenerSubcomponentFactory();
      }
    };
    this.serviceTaskSubcomponentFactoryProvider = new Provider<RileyLinkModule_ServiceTaskProvider.ServiceTaskSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_ServiceTaskProvider.ServiceTaskSubcomponent.Factory get() {
        return new ServiceTaskSubcomponentFactory();
      }
    };
    this.pumpTaskSubcomponentFactoryProvider = new Provider<RileyLinkModule_PumpTaskProvider.PumpTaskSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_PumpTaskProvider.PumpTaskSubcomponent.Factory get() {
        return new PumpTaskSubcomponentFactory();
      }
    };
    this.discoverGattServicesTaskSubcomponentFactoryProvider = new Provider<RileyLinkModule_DiscoverGattServicesTaskProvider.DiscoverGattServicesTaskSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_DiscoverGattServicesTaskProvider.DiscoverGattServicesTaskSubcomponent.Factory get(
          ) {
        return new DiscoverGattServicesTaskSubcomponentFactory();
      }
    };
  }

  @SuppressWarnings("unchecked")
  private void initialize3(final SkinsModule skinsModuleParam, final AppModule appModuleParam,
      final CoreModule coreModuleParam, final MainApp applicationParam) {
    this.initializePumpManagerTaskSubcomponentFactoryProvider = new Provider<RileyLinkModule_InitializePumpManagerTaskProvider.InitializePumpManagerTaskSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_InitializePumpManagerTaskProvider.InitializePumpManagerTaskSubcomponent.Factory get(
          ) {
        return new InitializePumpManagerTaskSubcomponentFactory();
      }
    };
    this.resetRileyLinkConfigurationTaskSubcomponentFactoryProvider = new Provider<RileyLinkModule_ResetRileyLinkConfigurationTaskProvider.ResetRileyLinkConfigurationTaskSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_ResetRileyLinkConfigurationTaskProvider.ResetRileyLinkConfigurationTaskSubcomponent.Factory get(
          ) {
        return new ResetRileyLinkConfigurationTaskSubcomponentFactory();
      }
    };
    this.wakeAndTuneTaskSubcomponentFactoryProvider = new Provider<RileyLinkModule_WakeAndTuneTaskProvider.WakeAndTuneTaskSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_WakeAndTuneTaskProvider.WakeAndTuneTaskSubcomponent.Factory get() {
        return new WakeAndTuneTaskSubcomponentFactory();
      }
    };
    this.radioResponseSubcomponentFactoryProvider = new Provider<RileyLinkModule_RadioResponseProvider.RadioResponseSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_RadioResponseProvider.RadioResponseSubcomponent.Factory get() {
        return new RadioResponseSubcomponentFactory();
      }
    };
    this.rileyLinkBLESubcomponentFactoryProvider = new Provider<RileyLinkModule_RileyLinkBLEProvider.RileyLinkBLESubcomponent.Factory>() {
      @Override
      public RileyLinkModule_RileyLinkBLEProvider.RileyLinkBLESubcomponent.Factory get() {
        return new RileyLinkBLESubcomponentFactory();
      }
    };
    this.rFSpySubcomponentFactoryProvider = new Provider<RileyLinkModule_RfSpyProvider.RFSpySubcomponent.Factory>() {
      @Override
      public RileyLinkModule_RfSpyProvider.RFSpySubcomponent.Factory get() {
        return new RFSpySubcomponentFactory();
      }
    };
    this.sendAndListenSubcomponentFactoryProvider = new Provider<RileyLinkModule_SendAndListenProvider.SendAndListenSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_SendAndListenProvider.SendAndListenSubcomponent.Factory get() {
        return new SendAndListenSubcomponentFactory();
      }
    };
    this.setPreambleSubcomponentFactoryProvider = new Provider<RileyLinkModule_SetPreambleProvider.SetPreambleSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_SetPreambleProvider.SetPreambleSubcomponent.Factory get() {
        return new SetPreambleSubcomponentFactory();
      }
    };
    this.radioPacketSubcomponentFactoryProvider = new Provider<RileyLinkModule_RadioPacketProvider.RadioPacketSubcomponent.Factory>() {
      @Override
      public RileyLinkModule_RadioPacketProvider.RadioPacketSubcomponent.Factory get() {
        return new RadioPacketSubcomponentFactory();
      }
    };
    this.medtronicCommunicationManagerSubcomponentFactoryProvider = new Provider<MedtronicModule_MedtronicCommunicationManagerProvider.MedtronicCommunicationManagerSubcomponent.Factory>() {
      @Override
      public MedtronicModule_MedtronicCommunicationManagerProvider.MedtronicCommunicationManagerSubcomponent.Factory get(
          ) {
        return new MedtronicCommunicationManagerSubcomponentFactory();
      }
    };
    this.medtronicUITaskSubcomponentFactoryProvider = new Provider<MedtronicModule_MedtronicUITaskProvider.MedtronicUITaskSubcomponent.Factory>() {
      @Override
      public MedtronicModule_MedtronicUITaskProvider.MedtronicUITaskSubcomponent.Factory get() {
        return new MedtronicUITaskSubcomponentFactory();
      }
    };
    this.podManagementActivitySubcomponentFactoryProvider = new Provider<OmnipodModule_ContributesPodManagementActivity.PodManagementActivitySubcomponent.Factory>() {
      @Override
      public OmnipodModule_ContributesPodManagementActivity.PodManagementActivitySubcomponent.Factory get(
          ) {
        return new PodManagementActivitySubcomponentFactory();
      }
    };
    this.podHistoryActivitySubcomponentFactoryProvider = new Provider<OmnipodModule_ContributesPodHistoryActivity.PodHistoryActivitySubcomponent.Factory>() {
      @Override
      public OmnipodModule_ContributesPodHistoryActivity.PodHistoryActivitySubcomponent.Factory get(
          ) {
        return new PodHistoryActivitySubcomponentFactory();
      }
    };
    this.podActivationWizardActivitySubcomponentFactoryProvider = new Provider<OmnipodModule_ContributesActivationWizardActivity.PodActivationWizardActivitySubcomponent.Factory>() {
      @Override
      public OmnipodModule_ContributesActivationWizardActivity.PodActivationWizardActivitySubcomponent.Factory get(
          ) {
        return new PodActivationWizardActivitySubcomponentFactory();
      }
    };
    this.podDeactivationWizardActivitySubcomponentFactoryProvider = new Provider<OmnipodModule_ContributesDeactivationWizardActivity.PodDeactivationWizardActivitySubcomponent.Factory>() {
      @Override
      public OmnipodModule_ContributesDeactivationWizardActivity.PodDeactivationWizardActivitySubcomponent.Factory get(
          ) {
        return new PodDeactivationWizardActivitySubcomponentFactory();
      }
    };
    this.omnipodRileyLinkCommunicationManagerSubcomponentFactoryProvider = new Provider<OmnipodModule_OmnipodCommunicationManagerProvider.OmnipodRileyLinkCommunicationManagerSubcomponent.Factory>() {
      @Override
      public OmnipodModule_OmnipodCommunicationManagerProvider.OmnipodRileyLinkCommunicationManagerSubcomponent.Factory get(
          ) {
        return new OmnipodRileyLinkCommunicationManagerSubcomponentFactory();
      }
    };
    this.rLHistoryItemOmnipodSubcomponentFactoryProvider = new Provider<OmnipodModule_RlHistoryItemOmnipod.RLHistoryItemOmnipodSubcomponent.Factory>() {
      @Override
      public OmnipodModule_RlHistoryItemOmnipod.RLHistoryItemOmnipodSubcomponent.Factory get() {
        return new RLHistoryItemOmnipodSubcomponentFactory();
      }
    };
    this.loggerCallbackSubcomponentFactoryProvider = new Provider<APSModule_LoggerCallbackInjector.LoggerCallbackSubcomponent.Factory>() {
      @Override
      public APSModule_LoggerCallbackInjector.LoggerCallbackSubcomponent.Factory get() {
        return new LoggerCallbackSubcomponentFactory();
      }
    };
    this.determineBasalResultSMBSubcomponentFactoryProvider = new Provider<APSModule_DetermineBasalResultSMBInjector.DetermineBasalResultSMBSubcomponent.Factory>() {
      @Override
      public APSModule_DetermineBasalResultSMBInjector.DetermineBasalResultSMBSubcomponent.Factory get(
          ) {
        return new DetermineBasalResultSMBSubcomponentFactory();
      }
    };
    this.determineBasalResultAMASubcomponentFactoryProvider = new Provider<APSModule_DetermineBasalResultAMAInjector.DetermineBasalResultAMASubcomponent.Factory>() {
      @Override
      public APSModule_DetermineBasalResultAMAInjector.DetermineBasalResultAMASubcomponent.Factory get(
          ) {
        return new DetermineBasalResultAMASubcomponentFactory();
      }
    };
    this.determineBasalAdapterAMAJSSubcomponentFactoryProvider = new Provider<APSModule_DetermineBasalAdapterAMAJSInjector.DetermineBasalAdapterAMAJSSubcomponent.Factory>() {
      @Override
      public APSModule_DetermineBasalAdapterAMAJSInjector.DetermineBasalAdapterAMAJSSubcomponent.Factory get(
          ) {
        return new DetermineBasalAdapterAMAJSSubcomponentFactory();
      }
    };
    this.determineBasalAdapterSMBJSSubcomponentFactoryProvider = new Provider<APSModule_DetermineBasalAdapterSMBJSInjector.DetermineBasalAdapterSMBJSSubcomponent.Factory>() {
      @Override
      public APSModule_DetermineBasalAdapterSMBJSInjector.DetermineBasalAdapterSMBJSSubcomponent.Factory get(
          ) {
        return new DetermineBasalAdapterSMBJSSubcomponentFactory();
      }
    };
    this.iobCobThreadSubcomponentFactoryProvider = new Provider<APSModule_IobCobThreadInjector.IobCobThreadSubcomponent.Factory>() {
      @Override
      public APSModule_IobCobThreadInjector.IobCobThreadSubcomponent.Factory get() {
        return new IobCobThreadSubcomponentFactory();
      }
    };
    this.iobCobOref1ThreadSubcomponentFactoryProvider = new Provider<APSModule_IobCobOref1ThreadInjector.IobCobOref1ThreadSubcomponent.Factory>() {
      @Override
      public APSModule_IobCobOref1ThreadInjector.IobCobOref1ThreadSubcomponent.Factory get() {
        return new IobCobOref1ThreadSubcomponentFactory();
      }
    };
    this.cryptoUtilSubcomponentFactoryProvider = new Provider<PreferencesModule_CryptoUtilInjector.CryptoUtilSubcomponent.Factory>() {
      @Override
      public PreferencesModule_CryptoUtilInjector.CryptoUtilSubcomponent.Factory get() {
        return new CryptoUtilSubcomponentFactory();
      }
    };
    this.encryptedPrefsFormatSubcomponentFactoryProvider = new Provider<PreferencesModule_EncryptedPrefsFormatInjector.EncryptedPrefsFormatSubcomponent.Factory>() {
      @Override
      public PreferencesModule_EncryptedPrefsFormatInjector.EncryptedPrefsFormatSubcomponent.Factory get(
          ) {
        return new EncryptedPrefsFormatSubcomponentFactory();
      }
    };
    this.classicPrefsFormatSubcomponentFactoryProvider = new Provider<PreferencesModule_ClassicPrefsFormatInjector.ClassicPrefsFormatSubcomponent.Factory>() {
      @Override
      public PreferencesModule_ClassicPrefsFormatInjector.ClassicPrefsFormatSubcomponent.Factory get(
          ) {
        return new ClassicPrefsFormatSubcomponentFactory();
      }
    };
    this.prefFileListProviderSubcomponentFactoryProvider = new Provider<PreferencesModule_PrefImportListProviderInjector.PrefFileListProviderSubcomponent.Factory>() {
      @Override
      public PreferencesModule_PrefImportListProviderInjector.PrefFileListProviderSubcomponent.Factory get(
          ) {
        return new PrefFileListProviderSubcomponentFactory();
      }
    };
    this.notificationWithActionSubcomponentFactoryProvider = new Provider<OverviewModule_NotificationWithActionInjector.NotificationWithActionSubcomponent.Factory>() {
      @Override
      public OverviewModule_NotificationWithActionInjector.NotificationWithActionSubcomponent.Factory get(
          ) {
        return new NotificationWithActionSubcomponentFactory();
      }
    };
    this.graphDataSubcomponentFactoryProvider = new Provider<OverviewModule_GraphDataInjector.GraphDataSubcomponent.Factory>() {
      @Override
      public OverviewModule_GraphDataInjector.GraphDataSubcomponent.Factory get() {
        return new GraphDataSubcomponentFactory();
      }
    };
    this.glucoseStatusSubcomponentFactoryProvider = new Provider<DataClassesModule_GlucoseStatusInjector.GlucoseStatusSubcomponent.Factory>() {
      @Override
      public DataClassesModule_GlucoseStatusInjector.GlucoseStatusSubcomponent.Factory get() {
        return new GlucoseStatusSubcomponentFactory();
      }
    };
    this.databaseHelperSubcomponentFactoryProvider = new Provider<DataClassesModule_DatabaseHelperInjector.DatabaseHelperSubcomponent.Factory>() {
      @Override
      public DataClassesModule_DatabaseHelperInjector.DatabaseHelperSubcomponent.Factory get() {
        return new DatabaseHelperSubcomponentFactory();
      }
    };
    this.treatmentServiceSubcomponentFactoryProvider = new Provider<DataClassesModule_TreatmentServiceInjector.TreatmentServiceSubcomponent.Factory>() {
      @Override
      public DataClassesModule_TreatmentServiceInjector.TreatmentServiceSubcomponent.Factory get() {
        return new TreatmentServiceSubcomponentFactory();
      }
    };
    this.foodServiceSubcomponentFactoryProvider = new Provider<DataClassesModule_FoodServiceInjector.FoodServiceSubcomponent.Factory>() {
      @Override
      public DataClassesModule_FoodServiceInjector.FoodServiceSubcomponent.Factory get() {
        return new FoodServiceSubcomponentFactory();
      }
    };
    this.bolusWizardSubcomponentFactoryProvider = new Provider<DataClassesModule_BolusWizardInjector.BolusWizardSubcomponent.Factory>() {
      @Override
      public DataClassesModule_BolusWizardInjector.BolusWizardSubcomponent.Factory get() {
        return new BolusWizardSubcomponentFactory();
      }
    };
    this.quickWizardEntrySubcomponentFactoryProvider = new Provider<DataClassesModule_QuickWizardEntryInjector.QuickWizardEntrySubcomponent.Factory>() {
      @Override
      public DataClassesModule_QuickWizardEntryInjector.QuickWizardEntrySubcomponent.Factory get() {
        return new QuickWizardEntrySubcomponentFactory();
      }
    };
    this.authRequestSubcomponentFactoryProvider = new Provider<SMSModule_AuthRequestInjector.AuthRequestSubcomponent.Factory>() {
      @Override
      public SMSModule_AuthRequestInjector.AuthRequestSubcomponent.Factory get() {
        return new AuthRequestSubcomponentFactory();
      }
    };
    this.skinListPreferenceSubcomponentFactoryProvider = new Provider<UIModule_SkinListPreferenceInjector.SkinListPreferenceSubcomponent.Factory>() {
      @Override
      public UIModule_SkinListPreferenceInjector.SkinListPreferenceSubcomponent.Factory get() {
        return new SkinListPreferenceSubcomponentFactory();
      }
    };
    this.networkChangeReceiverSubcomponentFactoryProvider = new Provider<CoreReceiversModule_ContributesNetworkChangeReceiver.NetworkChangeReceiverSubcomponent.Factory>() {
      @Override
      public CoreReceiversModule_ContributesNetworkChangeReceiver.NetworkChangeReceiverSubcomponent.Factory get(
          ) {
        return new NetworkChangeReceiverSubcomponentFactory();
      }
    };
    this.prefImportListActivitySubcomponentFactoryProvider = new Provider<CoreFragmentsModule_ContributesPrefImportListActivity.PrefImportListActivitySubcomponent.Factory>() {
      @Override
      public CoreFragmentsModule_ContributesPrefImportListActivity.PrefImportListActivitySubcomponent.Factory get(
          ) {
        return new PrefImportListActivitySubcomponentFactory();
      }
    };
    this.tDDStatsActivitySubcomponentFactoryProvider = new Provider<CoreFragmentsModule_ContributesTDDStatsActivity.TDDStatsActivitySubcomponent.Factory>() {
      @Override
      public CoreFragmentsModule_ContributesTDDStatsActivity.TDDStatsActivitySubcomponent.Factory get(
          ) {
        return new TDDStatsActivitySubcomponentFactory();
      }
    };
    this.bolusProgressHelperActivitySubcomponentFactoryProvider = new Provider<CoreFragmentsModule_ContributeBolusProgressHelperActivity.BolusProgressHelperActivitySubcomponent.Factory>() {
      @Override
      public CoreFragmentsModule_ContributeBolusProgressHelperActivity.BolusProgressHelperActivitySubcomponent.Factory get(
          ) {
        return new BolusProgressHelperActivitySubcomponentFactory();
      }
    };
    this.errorHelperActivitySubcomponentFactoryProvider = new Provider<CoreFragmentsModule_ContributeErrorHelperActivity.ErrorHelperActivitySubcomponent.Factory>() {
      @Override
      public CoreFragmentsModule_ContributeErrorHelperActivity.ErrorHelperActivitySubcomponent.Factory get(
          ) {
        return new ErrorHelperActivitySubcomponentFactory();
      }
    };
    this.bolusProgressDialogSubcomponentFactoryProvider = new Provider<CoreFragmentsModule_ContributesBolusProgressDialog.BolusProgressDialogSubcomponent.Factory>() {
      @Override
      public CoreFragmentsModule_ContributesBolusProgressDialog.BolusProgressDialogSubcomponent.Factory get(
          ) {
        return new BolusProgressDialogSubcomponentFactory();
      }
    };
    this.errorDialogSubcomponentFactoryProvider = new Provider<CoreFragmentsModule_ContributesErrorDialog.ErrorDialogSubcomponent.Factory>() {
      @Override
      public CoreFragmentsModule_ContributesErrorDialog.ErrorDialogSubcomponent.Factory get() {
        return new ErrorDialogSubcomponentFactory();
      }
    };
    this.ntpProgressDialogSubcomponentFactoryProvider = new Provider<CoreFragmentsModule_ContributesNtpProgressDialog.NtpProgressDialogSubcomponent.Factory>() {
      @Override
      public CoreFragmentsModule_ContributesNtpProgressDialog.NtpProgressDialogSubcomponent.Factory get(
          ) {
        return new NtpProgressDialogSubcomponentFactory();
      }
    };
    this.profileViewerDialogSubcomponentFactoryProvider = new Provider<CoreFragmentsModule_ContributesProfileViewerDialog.ProfileViewerDialogSubcomponent.Factory>() {
      @Override
      public CoreFragmentsModule_ContributesProfileViewerDialog.ProfileViewerDialogSubcomponent.Factory get(
          ) {
        return new ProfileViewerDialogSubcomponentFactory();
      }
    };
    this.pumpEnactResultSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_PumpEnactResultInjector.PumpEnactResultSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_PumpEnactResultInjector.PumpEnactResultSubcomponent.Factory get(
          ) {
        return new PumpEnactResultSubcomponentFactory();
      }
    };
    this.aPSResultSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_ApsResultInjector.APSResultSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_ApsResultInjector.APSResultSubcomponent.Factory get() {
        return new APSResultSubcomponentFactory();
      }
    };
    this.autosensDataSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_AutosensDataInjector.AutosensDataSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_AutosensDataInjector.AutosensDataSubcomponent.Factory get() {
        return new AutosensDataSubcomponentFactory();
      }
    };
    this.profileSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_ProfileInjector.ProfileSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_ProfileInjector.ProfileSubcomponent.Factory get() {
        return new ProfileSubcomponentFactory();
      }
    };
    this.profileStoreSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_ProfileStoreInjector.ProfileStoreSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_ProfileStoreInjector.ProfileStoreSubcomponent.Factory get() {
        return new ProfileStoreSubcomponentFactory();
      }
    };
    this.bgReadingSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_BgReadingInjector.BgReadingSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_BgReadingInjector.BgReadingSubcomponent.Factory get() {
        return new BgReadingSubcomponentFactory();
      }
    };
    this.treatmentSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_TreatmentInjector.TreatmentSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_TreatmentInjector.TreatmentSubcomponent.Factory get() {
        return new TreatmentSubcomponentFactory();
      }
    };
    this.profileSwitchSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_ProfileSwitchInjector.ProfileSwitchSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_ProfileSwitchInjector.ProfileSwitchSubcomponent.Factory get() {
        return new ProfileSwitchSubcomponentFactory();
      }
    };
    this.temporaryBasalSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_TemporaryBasalInjector.TemporaryBasalSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_TemporaryBasalInjector.TemporaryBasalSubcomponent.Factory get() {
        return new TemporaryBasalSubcomponentFactory();
      }
    };
    this.careportalEventSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_CareportalEventInjector.CareportalEventSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_CareportalEventInjector.CareportalEventSubcomponent.Factory get(
          ) {
        return new CareportalEventSubcomponentFactory();
      }
    };
    this.extendedBolusSubcomponentFactoryProvider = new Provider<CoreDataClassesModule_ExtendedBolusInjector.ExtendedBolusSubcomponent.Factory>() {
      @Override
      public CoreDataClassesModule_ExtendedBolusInjector.ExtendedBolusSubcomponent.Factory get() {
        return new ExtendedBolusSubcomponentFactory();
      }
    };
    this.danaFragmentSubcomponentFactoryProvider = new Provider<DanaModule_ContributesDanaRFragment.DanaFragmentSubcomponent.Factory>() {
      @Override
      public DanaModule_ContributesDanaRFragment.DanaFragmentSubcomponent.Factory get() {
        return new DanaFragmentSubcomponentFactory();
      }
    };
    this.danaHistoryActivitySubcomponentFactoryProvider = new Provider<DanaModule_ContributeDanaRHistoryActivity.DanaHistoryActivitySubcomponent.Factory>() {
      @Override
      public DanaModule_ContributeDanaRHistoryActivity.DanaHistoryActivitySubcomponent.Factory get(
          ) {
        return new DanaHistoryActivitySubcomponentFactory();
      }
    };
    this.danaUserOptionsActivitySubcomponentFactoryProvider = new Provider<DanaModule_ContributeDanaRUserOptionsActivity.DanaUserOptionsActivitySubcomponent.Factory>() {
      @Override
      public DanaModule_ContributeDanaRUserOptionsActivity.DanaUserOptionsActivitySubcomponent.Factory get(
          ) {
        return new DanaUserOptionsActivitySubcomponentFactory();
      }
    };
    this.messageBaseSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMessageBase.MessageBaseSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMessageBase.MessageBaseSubcomponent.Factory get() {
        return new MessageBaseSubcomponentFactory();
      }
    };
    this.msgSetTimeSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetTime.MsgSetTimeSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetTime.MsgSetTimeSubcomponent.Factory get() {
        return new MsgSetTimeSubcomponentFactory();
      }
    };
    this.msgBolusProgressSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgBolusProgress.MsgBolusProgressSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgBolusProgress.MsgBolusProgressSubcomponent.Factory get(
          ) {
        return new MsgBolusProgressSubcomponentFactory();
      }
    };
    this.msgBolusStartSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgBolusStart.MsgBolusStartSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgBolusStart.MsgBolusStartSubcomponent.Factory get() {
        return new MsgBolusStartSubcomponentFactory();
      }
    };
    this.msgBolusStartWithSpeedSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgBolusStartWithSpeed.MsgBolusStartWithSpeedSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgBolusStartWithSpeed.MsgBolusStartWithSpeedSubcomponent.Factory get(
          ) {
        return new MsgBolusStartWithSpeedSubcomponentFactory();
      }
    };
    this.msgBolusStopSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgBolusStop.MsgBolusStopSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgBolusStop.MsgBolusStopSubcomponent.Factory get() {
        return new MsgBolusStopSubcomponentFactory();
      }
    };
    this.msgCheckValueSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgCheckValue.MsgCheckValueSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgCheckValue.MsgCheckValueSubcomponent.Factory get() {
        return new MsgCheckValueSubcomponentFactory();
      }
    };
    this.msgErrorSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgError.MsgErrorSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgError.MsgErrorSubcomponent.Factory get() {
        return new MsgErrorSubcomponentFactory();
      }
    };
    this.msgHistoryAllSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryAll.MsgHistoryAllSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryAll.MsgHistoryAllSubcomponent.Factory get() {
        return new MsgHistoryAllSubcomponentFactory();
      }
    };
    this.msgHistoryAllDoneSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryAllDone.MsgHistoryAllDoneSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryAllDone.MsgHistoryAllDoneSubcomponent.Factory get(
          ) {
        return new MsgHistoryAllDoneSubcomponentFactory();
      }
    };
    this.msgHistoryDoneSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryDone.MsgHistoryDoneSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryDone.MsgHistoryDoneSubcomponent.Factory get() {
        return new MsgHistoryDoneSubcomponentFactory();
      }
    };
    this.msgHistoryNewDoneSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryNewDone.MsgHistoryNewDoneSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryNewDone.MsgHistoryNewDoneSubcomponent.Factory get(
          ) {
        return new MsgHistoryNewDoneSubcomponentFactory();
      }
    };
    this.msgInitConnStatusBasicSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgInitConnStatusBasic.MsgInitConnStatusBasicSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgInitConnStatusBasic.MsgInitConnStatusBasicSubcomponent.Factory get(
          ) {
        return new MsgInitConnStatusBasicSubcomponentFactory();
      }
    };
    this.msgInitConnStatusBolusSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgInitConnStatusBolus.MsgInitConnStatusBolusSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgInitConnStatusBolus.MsgInitConnStatusBolusSubcomponent.Factory get(
          ) {
        return new MsgInitConnStatusBolusSubcomponentFactory();
      }
    };
    this.msgInitConnStatusOptionSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgInitConnStatusOption.MsgInitConnStatusOptionSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgInitConnStatusOption.MsgInitConnStatusOptionSubcomponent.Factory get(
          ) {
        return new MsgInitConnStatusOptionSubcomponentFactory();
      }
    };
    this.msgInitConnStatusTimeSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgInitConnStatusTime.MsgInitConnStatusTimeSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgInitConnStatusTime.MsgInitConnStatusTimeSubcomponent.Factory get(
          ) {
        return new MsgInitConnStatusTimeSubcomponentFactory();
      }
    };
    this.msgPCCommStartSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgPCCommStart.MsgPCCommStartSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgPCCommStart.MsgPCCommStartSubcomponent.Factory get() {
        return new MsgPCCommStartSubcomponentFactory();
      }
    };
    this.msgPCCommStopSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgPCCommStop.MsgPCCommStopSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgPCCommStop.MsgPCCommStopSubcomponent.Factory get() {
        return new MsgPCCommStopSubcomponentFactory();
      }
    };
    this.msgSetActivateBasalProfileSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetActivateBasalProfile.MsgSetActivateBasalProfileSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetActivateBasalProfile.MsgSetActivateBasalProfileSubcomponent.Factory get(
          ) {
        return new MsgSetActivateBasalProfileSubcomponentFactory();
      }
    };
    this.msgSetBasalProfileSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetBasalProfile.MsgSetBasalProfileSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetBasalProfile.MsgSetBasalProfileSubcomponent.Factory get(
          ) {
        return new MsgSetBasalProfileSubcomponentFactory();
      }
    };
    this.msgSetCarbsEntrySubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetCarbsEntry.MsgSetCarbsEntrySubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetCarbsEntry.MsgSetCarbsEntrySubcomponent.Factory get(
          ) {
        return new MsgSetCarbsEntrySubcomponentFactory();
      }
    };
    this.msgSetExtendedBolusStartSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetExtendedBolusStart.MsgSetExtendedBolusStartSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetExtendedBolusStart.MsgSetExtendedBolusStartSubcomponent.Factory get(
          ) {
        return new MsgSetExtendedBolusStartSubcomponentFactory();
      }
    };
    this.msgSetExtendedBolusStopSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetExtendedBolusStop.MsgSetExtendedBolusStopSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetExtendedBolusStop.MsgSetExtendedBolusStopSubcomponent.Factory get(
          ) {
        return new MsgSetExtendedBolusStopSubcomponentFactory();
      }
    };
    this.msgSetSingleBasalProfileSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetSingleBasalProfile.MsgSetSingleBasalProfileSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetSingleBasalProfile.MsgSetSingleBasalProfileSubcomponent.Factory get(
          ) {
        return new MsgSetSingleBasalProfileSubcomponentFactory();
      }
    };
    this.msgSetTempBasalStartSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetTempBasalStart.MsgSetTempBasalStartSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetTempBasalStart.MsgSetTempBasalStartSubcomponent.Factory get(
          ) {
        return new MsgSetTempBasalStartSubcomponentFactory();
      }
    };
    this.msgSetTempBasalStopSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetTempBasalStop.MsgSetTempBasalStopSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetTempBasalStop.MsgSetTempBasalStopSubcomponent.Factory get(
          ) {
        return new MsgSetTempBasalStopSubcomponentFactory();
      }
    };
    this.msgSetUserOptionsSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetUserOptions.MsgSetUserOptionsSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetUserOptions.MsgSetUserOptionsSubcomponent.Factory get(
          ) {
        return new MsgSetUserOptionsSubcomponentFactory();
      }
    };
    this.msgSettingActiveProfileSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingActiveProfile.MsgSettingActiveProfileSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingActiveProfile.MsgSettingActiveProfileSubcomponent.Factory get(
          ) {
        return new MsgSettingActiveProfileSubcomponentFactory();
      }
    };
    this.msgSettingBasalSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingBasal.MsgSettingBasalSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingBasal.MsgSettingBasalSubcomponent.Factory get() {
        return new MsgSettingBasalSubcomponentFactory();
      }
    };
    this.msgSettingBasalProfileAllSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingBasalProfileAll.MsgSettingBasalProfileAllSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingBasalProfileAll.MsgSettingBasalProfileAllSubcomponent.Factory get(
          ) {
        return new MsgSettingBasalProfileAllSubcomponentFactory();
      }
    };
    this.msgSettingGlucoseSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingGlucose.MsgSettingGlucoseSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingGlucose.MsgSettingGlucoseSubcomponent.Factory get(
          ) {
        return new MsgSettingGlucoseSubcomponentFactory();
      }
    };
    this.msgSettingMaxValuesSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingMaxValues.MsgSettingMaxValuesSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingMaxValues.MsgSettingMaxValuesSubcomponent.Factory get(
          ) {
        return new MsgSettingMaxValuesSubcomponentFactory();
      }
    };
    this.msgSettingMealSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingMeal.MsgSettingMealSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingMeal.MsgSettingMealSubcomponent.Factory get() {
        return new MsgSettingMealSubcomponentFactory();
      }
    };
    this.msgSettingProfileRatiosSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingProfileRatios.MsgSettingProfileRatiosSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingProfileRatios.MsgSettingProfileRatiosSubcomponent.Factory get(
          ) {
        return new MsgSettingProfileRatiosSubcomponentFactory();
      }
    };
    this.msgSettingProfileRatiosAllSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingProfileRatiosAll.MsgSettingProfileRatiosAllSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingProfileRatiosAll.MsgSettingProfileRatiosAllSubcomponent.Factory get(
          ) {
        return new MsgSettingProfileRatiosAllSubcomponentFactory();
      }
    };
    this.msgSettingPumpTimeSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingPumpTime.MsgSettingPumpTimeSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingPumpTime.MsgSettingPumpTimeSubcomponent.Factory get(
          ) {
        return new MsgSettingPumpTimeSubcomponentFactory();
      }
    };
    this.msgSettingShippingInfoSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingShippingInfo.MsgSettingShippingInfoSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingShippingInfo.MsgSettingShippingInfoSubcomponent.Factory get(
          ) {
        return new MsgSettingShippingInfoSubcomponentFactory();
      }
    };
    this.msgSettingUserOptionsSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingUserOptions.MsgSettingUserOptionsSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingUserOptions.MsgSettingUserOptionsSubcomponent.Factory get(
          ) {
        return new MsgSettingUserOptionsSubcomponentFactory();
      }
    };
    this.msgStatusSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatus.MsgStatusSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatus.MsgStatusSubcomponent.Factory get() {
        return new MsgStatusSubcomponentFactory();
      }
    };
  }

  @SuppressWarnings("unchecked")
  private void initialize4(final SkinsModule skinsModuleParam, final AppModule appModuleParam,
      final CoreModule coreModuleParam, final MainApp applicationParam) {
    this.msgStatusBasicSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatusBasic.MsgStatusBasicSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatusBasic.MsgStatusBasicSubcomponent.Factory get() {
        return new MsgStatusBasicSubcomponentFactory();
      }
    };
    this.msgStatusBolusExtendedSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatusBolusExtended.MsgStatusBolusExtendedSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatusBolusExtended.MsgStatusBolusExtendedSubcomponent.Factory get(
          ) {
        return new MsgStatusBolusExtendedSubcomponentFactory();
      }
    };
    this.msgStatusProfileSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatusProfile.MsgStatusProfileSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatusProfile.MsgStatusProfileSubcomponent.Factory get(
          ) {
        return new MsgStatusProfileSubcomponentFactory();
      }
    };
    this.msgStatusTempBasalSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatusTempBasal.MsgStatusTempBasalSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatusTempBasal.MsgStatusTempBasalSubcomponent.Factory get(
          ) {
        return new MsgStatusTempBasalSubcomponentFactory();
      }
    };
    this.msgHistoryBolusSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryBolus.MsgHistoryBolusSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryBolus.MsgHistoryBolusSubcomponent.Factory get() {
        return new MsgHistoryBolusSubcomponentFactory();
      }
    };
    this.msgHistoryDailyInsulinSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryDailyInsulin.MsgHistoryDailyInsulinSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryDailyInsulin.MsgHistoryDailyInsulinSubcomponent.Factory get(
          ) {
        return new MsgHistoryDailyInsulinSubcomponentFactory();
      }
    };
    this.msgHistoryGlucoseSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryGlucose.MsgHistoryGlucoseSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryGlucose.MsgHistoryGlucoseSubcomponent.Factory get(
          ) {
        return new MsgHistoryGlucoseSubcomponentFactory();
      }
    };
    this.msgHistoryAlarmSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryAlarm.MsgHistoryAlarmSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryAlarm.MsgHistoryAlarmSubcomponent.Factory get() {
        return new MsgHistoryAlarmSubcomponentFactory();
      }
    };
    this.msgHistoryErrorSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryError.MsgHistoryErrorSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryError.MsgHistoryErrorSubcomponent.Factory get() {
        return new MsgHistoryErrorSubcomponentFactory();
      }
    };
    this.msgHistoryCarboSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryCarbo.MsgHistoryCarboSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryCarbo.MsgHistoryCarboSubcomponent.Factory get() {
        return new MsgHistoryCarboSubcomponentFactory();
      }
    };
    this.msgHistoryRefillSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryRefill.MsgHistoryRefillSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryRefill.MsgHistoryRefillSubcomponent.Factory get(
          ) {
        return new MsgHistoryRefillSubcomponentFactory();
      }
    };
    this.msgHistorySuspendSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistorySuspend.MsgHistorySuspendSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistorySuspend.MsgHistorySuspendSubcomponent.Factory get(
          ) {
        return new MsgHistorySuspendSubcomponentFactory();
      }
    };
    this.msgHistoryBasalHourSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryBasalHour.MsgHistoryBasalHourSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryBasalHour.MsgHistoryBasalHourSubcomponent.Factory get(
          ) {
        return new MsgHistoryBasalHourSubcomponentFactory();
      }
    };
    this.msgHistoryNewSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryNew.MsgHistoryNewSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryNew.MsgHistoryNewSubcomponent.Factory get() {
        return new MsgHistoryNewSubcomponentFactory();
      }
    };
    this.msgCheckValue_v2SubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgCheckValue_v2.MsgCheckValue_v2Subcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgCheckValue_v2.MsgCheckValue_v2Subcomponent.Factory get(
          ) {
        return new MsgCheckValue_v2SubcomponentFactory();
      }
    };
    this.msgHistoryEvents_v2SubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgHistoryEvents_v2.MsgHistoryEvents_v2Subcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgHistoryEvents_v2.MsgHistoryEvents_v2Subcomponent.Factory get(
          ) {
        return new MsgHistoryEvents_v2SubcomponentFactory();
      }
    };
    this.msgSetAPSTempBasalStart_v2SubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetAPSTempBasalStart_v2.MsgSetAPSTempBasalStart_v2Subcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetAPSTempBasalStart_v2.MsgSetAPSTempBasalStart_v2Subcomponent.Factory get(
          ) {
        return new MsgSetAPSTempBasalStart_v2SubcomponentFactory();
      }
    };
    this.msgSetHistoryEntry_v2SubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSetHistoryEntry_v2.MsgSetHistoryEntry_v2Subcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSetHistoryEntry_v2.MsgSetHistoryEntry_v2Subcomponent.Factory get(
          ) {
        return new MsgSetHistoryEntry_v2SubcomponentFactory();
      }
    };
    this.msgStatusAPS_v2SubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatusAPS_v2.MsgStatusAPS_v2Subcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatusAPS_v2.MsgStatusAPS_v2Subcomponent.Factory get() {
        return new MsgStatusAPS_v2SubcomponentFactory();
      }
    };
    this.msgStatusBolusExtended_v2SubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatusBolusExtended_v2.MsgStatusBolusExtended_v2Subcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatusBolusExtended_v2.MsgStatusBolusExtended_v2Subcomponent.Factory get(
          ) {
        return new MsgStatusBolusExtended_v2SubcomponentFactory();
      }
    };
    this.msgStatusTempBasal_v2SubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatusTempBasal_v2.MsgStatusTempBasal_v2Subcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatusTempBasal_v2.MsgStatusTempBasal_v2Subcomponent.Factory get(
          ) {
        return new MsgStatusTempBasal_v2SubcomponentFactory();
      }
    };
    this.msgCheckValue_kSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgCheckValue_k.MsgCheckValue_kSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgCheckValue_k.MsgCheckValue_kSubcomponent.Factory get() {
        return new MsgCheckValue_kSubcomponentFactory();
      }
    };
    this.msgInitConnStatusBasic_kSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgInitConnStatusBasic_k.MsgInitConnStatusBasic_kSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgInitConnStatusBasic_k.MsgInitConnStatusBasic_kSubcomponent.Factory get(
          ) {
        return new MsgInitConnStatusBasic_kSubcomponentFactory();
      }
    };
    this.msgInitConnStatusBolus_kSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgInitConnStatusBolus_k.MsgInitConnStatusBolus_kSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgInitConnStatusBolus_k.MsgInitConnStatusBolus_kSubcomponent.Factory get(
          ) {
        return new MsgInitConnStatusBolus_kSubcomponentFactory();
      }
    };
    this.msgInitConnStatusTime_kSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgInitConnStatusTime_k.MsgInitConnStatusTime_kSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgInitConnStatusTime_k.MsgInitConnStatusTime_kSubcomponent.Factory get(
          ) {
        return new MsgInitConnStatusTime_kSubcomponentFactory();
      }
    };
    this.msgSettingBasalProfileAll_kSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingBasalProfileAll_k.MsgSettingBasalProfileAll_kSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingBasalProfileAll_k.MsgSettingBasalProfileAll_kSubcomponent.Factory get(
          ) {
        return new MsgSettingBasalProfileAll_kSubcomponentFactory();
      }
    };
    this.msgSettingBasal_kSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgSettingBasal_k.MsgSettingBasal_kSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgSettingBasal_k.MsgSettingBasal_kSubcomponent.Factory get(
          ) {
        return new MsgSettingBasal_kSubcomponentFactory();
      }
    };
    this.msgStatusBasic_kSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatusBasic_k.MsgStatusBasic_kSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatusBasic_k.MsgStatusBasic_kSubcomponent.Factory get(
          ) {
        return new MsgStatusBasic_kSubcomponentFactory();
      }
    };
    this.msgStatus_kSubcomponentFactoryProvider = new Provider<DanaRCommModule_ContributesMsgStatus_k.MsgStatus_kSubcomponent.Factory>() {
      @Override
      public DanaRCommModule_ContributesMsgStatus_k.MsgStatus_kSubcomponent.Factory get() {
        return new MsgStatus_kSubcomponentFactory();
      }
    };
    this.abstractDanaRExecutionServiceSubcomponentFactoryProvider = new Provider<DanaRServicesModule_ContributesAbstractDanaRExecutionService.AbstractDanaRExecutionServiceSubcomponent.Factory>() {
      @Override
      public DanaRServicesModule_ContributesAbstractDanaRExecutionService.AbstractDanaRExecutionServiceSubcomponent.Factory get(
          ) {
        return new AbstractDanaRExecutionServiceSubcomponentFactory();
      }
    };
    this.danaRv2ExecutionServiceSubcomponentFactoryProvider = new Provider<DanaRServicesModule_ContributesDanaRv2ExecutionService.DanaRv2ExecutionServiceSubcomponent.Factory>() {
      @Override
      public DanaRServicesModule_ContributesDanaRv2ExecutionService.DanaRv2ExecutionServiceSubcomponent.Factory get(
          ) {
        return new DanaRv2ExecutionServiceSubcomponentFactory();
      }
    };
    this.danaRExecutionServiceSubcomponentFactoryProvider = new Provider<DanaRServicesModule_ContributesDanaRExecutionService.DanaRExecutionServiceSubcomponent.Factory>() {
      @Override
      public DanaRServicesModule_ContributesDanaRExecutionService.DanaRExecutionServiceSubcomponent.Factory get(
          ) {
        return new DanaRExecutionServiceSubcomponentFactory();
      }
    };
    this.danaRKoreanExecutionServiceSubcomponentFactoryProvider = new Provider<DanaRServicesModule_ContributesDanaRKoreanExecutionService.DanaRKoreanExecutionServiceSubcomponent.Factory>() {
      @Override
      public DanaRServicesModule_ContributesDanaRKoreanExecutionService.DanaRKoreanExecutionServiceSubcomponent.Factory get(
          ) {
        return new DanaRKoreanExecutionServiceSubcomponentFactory();
      }
    };
    this.danaRS_PacketSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet.DanaRS_PacketSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet.DanaRS_PacketSubcomponent.Factory get() {
        return new DanaRS_PacketSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Get_Basal_RateSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Basal_Rate.DanaRS_Packet_Basal_Get_Basal_RateSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Basal_Rate.DanaRS_Packet_Basal_Get_Basal_RateSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Get_Basal_RateSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Basal_Rate.DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Basal_Rate.DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Get_Profile_NumberSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Number.DanaRS_Packet_Basal_Get_Profile_NumberSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Number.DanaRS_Packet_Basal_Get_Profile_NumberSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Get_Profile_NumberSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Set_Basal_RateSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Basal_Rate.DanaRS_Packet_Basal_Set_Basal_RateSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Basal_Rate.DanaRS_Packet_Basal_Set_Basal_RateSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Set_Basal_RateSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Basal_Rate.DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Basal_Rate.DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Set_Profile_NumberSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Number.DanaRS_Packet_Basal_Set_Profile_NumberSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Number.DanaRS_Packet_Basal_Set_Profile_NumberSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Set_Profile_NumberSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Set_Suspend_OffSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_Off.DanaRS_Packet_Basal_Set_Suspend_OffSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_Off.DanaRS_Packet_Basal_Set_Suspend_OffSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Set_Suspend_OffSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Set_Suspend_OnSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_On.DanaRS_Packet_Basal_Set_Suspend_OnSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_On.DanaRS_Packet_Basal_Set_Suspend_OnSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Set_Suspend_OnSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Set_Temporary_BasalSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Temporary_Basal.DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Temporary_Basal.DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Temporary_Basal_State.DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Temporary_Basal_State.DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Bolus_Option.DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Bolus_Option.DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Initial_BolusSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Initial_Bolus.DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Initial_Bolus.DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Calculation_Information.DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Calculation_Information.DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_CIR_CF_Array.DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_CIR_CF_Array.DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_24_CIR_CF_Array.DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_24_CIR_CF_Array.DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Dual_BolusSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Dual_Bolus.DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Dual_Bolus.DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Extended_BolusSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus.DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus.DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus_State.DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus_State.DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Step_Bolus_Information.DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Step_Bolus_Information.DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Bolus_Option.DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Bolus_Option.DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_Initial_BolusSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Initial_Bolus.DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Initial_Bolus.DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_CIR_CF_Array.DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_CIR_CF_Array.DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_24_CIR_CF_Array.DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_24_CIR_CF_Array.DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_Dual_BolusSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Dual_Bolus.DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Dual_Bolus.DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_Extended_BolusSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus.DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus.DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Start.DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Start.DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Stop.DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Stop.DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Etc_Keep_ConnectionSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Etc_Keep_Connection.DanaRS_Packet_Etc_Keep_ConnectionSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Etc_Keep_Connection.DanaRS_Packet_Etc_Keep_ConnectionSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Etc_Keep_ConnectionSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Etc_Set_History_SaveSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Etc_Set_History_Save.DanaRS_Packet_Etc_Set_History_SaveSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Etc_Set_History_Save.DanaRS_Packet_Etc_Set_History_SaveSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Etc_Set_History_SaveSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Delivery_StatusSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Delivery_Status.DanaRS_Packet_General_Delivery_StatusSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Delivery_Status.DanaRS_Packet_General_Delivery_StatusSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Delivery_StatusSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Get_PasswordSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Password.DanaRS_Packet_General_Get_PasswordSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Password.DanaRS_Packet_General_Get_PasswordSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Get_PasswordSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Initial_Screen_InformationSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Initial_Screen_Information.DanaRS_Packet_General_Initial_Screen_InformationSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Initial_Screen_Information.DanaRS_Packet_General_Initial_Screen_InformationSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Initial_Screen_InformationSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Notify_AlarmSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Notify_Alarm.DanaRS_Packet_Notify_AlarmSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Notify_Alarm.DanaRS_Packet_Notify_AlarmSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Notify_AlarmSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Notify_Delivery_CompleteSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Complete.DanaRS_Packet_Notify_Delivery_CompleteSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Complete.DanaRS_Packet_Notify_Delivery_CompleteSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Notify_Delivery_CompleteSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Rate_Display.DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Rate_Display.DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentFactory();
      }
    };
    this.danaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Notify_Missed_Bolus_Alarm.DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Notify_Missed_Bolus_Alarm.DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Option_Get_Pump_TimeSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_Time.DanaRS_Packet_Option_Get_Pump_TimeSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_Time.DanaRS_Packet_Option_Get_Pump_TimeSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Option_Get_Pump_TimeSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Option_Get_User_OptionSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_User_Option.DanaRS_Packet_Option_Get_User_OptionSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_User_Option.DanaRS_Packet_Option_Get_User_OptionSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Option_Get_User_OptionSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Option_Set_Pump_TimeSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_Time.DanaRS_Packet_Option_Set_Pump_TimeSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_Time.DanaRS_Packet_Option_Set_Pump_TimeSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Option_Set_Pump_TimeSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Option_Set_User_OptionSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_User_Option.DanaRS_Packet_Option_Set_User_OptionSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_User_Option.DanaRS_Packet_Option_Set_User_OptionSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Option_Set_User_OptionSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_SubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_.DanaRS_Packet_History_Subcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_.DanaRS_Packet_History_Subcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_SubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_AlarmSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Alarm.DanaRS_Packet_History_AlarmSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Alarm.DanaRS_Packet_History_AlarmSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_AlarmSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_All_HistorySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_All_History.DanaRS_Packet_History_All_HistorySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_All_History.DanaRS_Packet_History_All_HistorySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_All_HistorySubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_BasalSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Basal.DanaRS_Packet_History_BasalSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Basal.DanaRS_Packet_History_BasalSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_BasalSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_Blood_GlucoseSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Blood_Glucose.DanaRS_Packet_History_Blood_GlucoseSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Blood_Glucose.DanaRS_Packet_History_Blood_GlucoseSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_Blood_GlucoseSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_BolusSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Bolus.DanaRS_Packet_History_BolusSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Bolus.DanaRS_Packet_History_BolusSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_BolusSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Review_Bolus_AvgSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Review_Bolus_Avg.DanaRS_Packet_Review_Bolus_AvgSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Review_Bolus_Avg.DanaRS_Packet_Review_Bolus_AvgSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Review_Bolus_AvgSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_CarbohydrateSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Carbohydrate.DanaRS_Packet_History_CarbohydrateSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Carbohydrate.DanaRS_Packet_History_CarbohydrateSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_CarbohydrateSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_DailySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Daily.DanaRS_Packet_History_DailySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Daily.DanaRS_Packet_History_DailySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_DailySubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Get_More_InformationSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_More_Information.DanaRS_Packet_General_Get_More_InformationSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_More_Information.DanaRS_Packet_General_Get_More_InformationSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Get_More_InformationSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Get_Pump_CheckSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Pump_Check.DanaRS_Packet_General_Get_Pump_CheckSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Pump_Check.DanaRS_Packet_General_Get_Pump_CheckSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Get_Pump_CheckSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Get_Shipping_InformationSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Information.DanaRS_Packet_General_Get_Shipping_InformationSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Information.DanaRS_Packet_General_Get_Shipping_InformationSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Get_Shipping_InformationSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Today_Delivery_Total.DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Today_Delivery_Total.DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_User_Time_Change_Flag.DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_User_Time_Change_Flag.DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_PrimeSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Prime.DanaRS_Packet_History_PrimeSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Prime.DanaRS_Packet_History_PrimeSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_PrimeSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_RefillSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Refill.DanaRS_Packet_History_RefillSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Refill.DanaRS_Packet_History_RefillSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_RefillSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Set_History_Upload_ModeSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Set_History_Upload_Mode.DanaRS_Packet_General_Set_History_Upload_ModeSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Set_History_Upload_Mode.DanaRS_Packet_General_Set_History_Upload_ModeSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Set_History_Upload_ModeSubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_SuspendSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Suspend.DanaRS_Packet_History_SuspendSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Suspend.DanaRS_Packet_History_SuspendSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_SuspendSubcomponentFactory();
      }
    };
    this.danaRS_Packet_History_TemporarySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_History_Temporary.DanaRS_Packet_History_TemporarySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_History_Temporary.DanaRS_Packet_History_TemporarySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_History_TemporarySubcomponentFactory();
      }
    };
    this.danaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_APS_Basal_Set_Temporary_Basal.DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_APS_Basal_Set_Temporary_Basal.DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentFactory();
      }
    };
    this.danaRS_Packet_APS_History_EventsSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_APS_History_Events.DanaRS_Packet_APS_History_EventsSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_APS_History_Events.DanaRS_Packet_APS_History_EventsSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_APS_History_EventsSubcomponentFactory();
      }
    };
  }

  @SuppressWarnings("unchecked")
  private void initialize5(final SkinsModule skinsModuleParam, final AppModule appModuleParam,
      final CoreModule coreModuleParam, final MainApp applicationParam) {
    this.danaRS_Packet_APS_Set_Event_HistorySubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_APS_Set_Event_History.DanaRS_Packet_APS_Set_Event_HistorySubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_APS_Set_Event_History.DanaRS_Packet_APS_Set_Event_HistorySubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_APS_Set_Event_HistorySubcomponentFactory();
      }
    };
    this.danaRS_Packet_General_Get_Shipping_VersionSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Version.DanaRS_Packet_General_Get_Shipping_VersionSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Version.DanaRS_Packet_General_Get_Shipping_VersionSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_General_Get_Shipping_VersionSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Review_Get_Pump_Dec_Ratio.DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Review_Get_Pump_Dec_Ratio.DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentFactory();
      }
    };
    this.danaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider = new Provider<DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponent.Factory>() {
      @Override
      public DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponent.Factory get(
          ) {
        return new DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentFactory();
      }
    };
    this.bLEScanActivitySubcomponentFactoryProvider = new Provider<DanaRSActivitiesModule_ContributesBLEScanActivity.BLEScanActivitySubcomponent.Factory>() {
      @Override
      public DanaRSActivitiesModule_ContributesBLEScanActivity.BLEScanActivitySubcomponent.Factory get(
          ) {
        return new BLEScanActivitySubcomponentFactory();
      }
    };
    this.pairingHelperActivitySubcomponentFactoryProvider = new Provider<DanaRSActivitiesModule_ContributesPairingHelperActivity.PairingHelperActivitySubcomponent.Factory>() {
      @Override
      public DanaRSActivitiesModule_ContributesPairingHelperActivity.PairingHelperActivitySubcomponent.Factory get(
          ) {
        return new PairingHelperActivitySubcomponentFactory();
      }
    };
    this.enterPinActivitySubcomponentFactoryProvider = new Provider<DanaRSActivitiesModule_ContributeEnterPinActivity.EnterPinActivitySubcomponent.Factory>() {
      @Override
      public DanaRSActivitiesModule_ContributeEnterPinActivity.EnterPinActivitySubcomponent.Factory get(
          ) {
        return new EnterPinActivitySubcomponentFactory();
      }
    };
    this.pairingProgressDialogSubcomponentFactoryProvider = new Provider<DanaRSActivitiesModule_ContributesPairingProgressDialog.PairingProgressDialogSubcomponent.Factory>() {
      @Override
      public DanaRSActivitiesModule_ContributesPairingProgressDialog.PairingProgressDialogSubcomponent.Factory get(
          ) {
        return new PairingProgressDialogSubcomponentFactory();
      }
    };
    this.danaRSServiceSubcomponentFactoryProvider = new Provider<DanaRSServicesModule_ContributesDanaRSService.DanaRSServiceSubcomponent.Factory>() {
      @Override
      public DanaRSServicesModule_ContributesDanaRSService.DanaRSServiceSubcomponent.Factory get() {
        return new DanaRSServiceSubcomponentFactory();
      }
    };
    this.oHUploadWorkerSubcomponentFactoryProvider = new Provider<OHUploaderModule_ContributesOHUploadWorkerInjector.OHUploadWorkerSubcomponent.Factory>() {
      @Override
      public OHUploaderModule_ContributesOHUploadWorkerInjector.OHUploadWorkerSubcomponent.Factory get(
          ) {
        return new OHUploadWorkerSubcomponentFactory();
      }
    };
    this.applicationProvider = InstanceFactory.create(applicationParam);
    this.provideResourcesProvider = DoubleCheck.provider(CoreModule_ProvideResourcesFactory.create(coreModuleParam, (Provider) applicationProvider));
    this.provideSharedPreferencesProvider = DoubleCheck.provider(CoreModule_ProvideSharedPreferencesFactory.create(coreModuleParam, (Provider) applicationProvider, provideResourcesProvider));
    this.lProvider = DoubleCheck.provider(L_Factory.create(provideSharedPreferencesProvider));
    this.provideAAPSLoggerProvider = DoubleCheck.provider(CoreModule_ProvideAAPSLoggerFactory.create(coreModuleParam, lProvider));
    this.configProvider = DoubleCheck.provider(Config_Factory.create());
    this.pluginStoreProvider = DoubleCheck.provider(PluginStore_Factory.create(provideAAPSLoggerProvider, configProvider));
    this.activityMonitorProvider = DoubleCheck.provider(ActivityMonitor_Factory.create(provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider));
    this.rxBusWrapperProvider = DoubleCheck.provider(RxBusWrapper_Factory.create());
    this.versionCheckerUtilsProvider = DoubleCheck.provider(VersionCheckerUtils_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider, provideResourcesProvider, rxBusWrapperProvider, (Provider) configProvider, (Provider) applicationProvider));
    this.databaseHelperProvider = DoubleCheck.provider(DatabaseHelperProvider_Factory.create());
    this.uploadQueueProvider = UploadQueue_Factory.create(provideAAPSLoggerProvider, (Provider) databaseHelperProvider, (Provider) applicationProvider, provideSharedPreferencesProvider, rxBusWrapperProvider);
    this.configBuilderPluginProvider = DoubleCheck.provider(ConfigBuilderPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, rxBusWrapperProvider, (Provider) pluginStoreProvider));
    this.runningConfigurationProvider = DoubleCheck.provider(RunningConfiguration_Factory.create((Provider) pluginStoreProvider, (Provider) configBuilderPluginProvider, provideSharedPreferencesProvider, provideAAPSLoggerProvider));
    this.nSUploadProvider = DoubleCheck.provider(NSUpload_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, (Provider) applicationProvider, (Provider) uploadQueueProvider, runningConfigurationProvider, (Provider) databaseHelperProvider));
    this.fabricPrivacyProvider = DoubleCheck.provider(FabricPrivacy_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider));
    this.provideProfileFunctionProvider = DoubleCheck.provider(CoreModule_ProvideProfileFunctionFactory.create(coreModuleParam, (Provider) applicationProvider, provideAAPSLoggerProvider, provideSharedPreferencesProvider, provideResourcesProvider, (Provider) pluginStoreProvider, fabricPrivacyProvider));
    this.dateUtilProvider = DoubleCheck.provider(DateUtil_Factory.create((Provider) applicationProvider, provideResourcesProvider));
    this.treatmentsPluginProvider = DoubleCheck.provider(TreatmentsPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, (Provider) applicationProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, (Provider) pluginStoreProvider, nSUploadProvider, fabricPrivacyProvider, dateUtilProvider, uploadQueueProvider));
    this.sensitivityOref1PluginProvider = DoubleCheck.provider(SensitivityOref1Plugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, dateUtilProvider));
    this.sensitivityAAPSPluginProvider = DoubleCheck.provider(SensitivityAAPSPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, dateUtilProvider));
    this.sensitivityWeightedAveragePluginProvider = DoubleCheck.provider(SensitivityWeightedAveragePlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, dateUtilProvider));
    this.iobCobCalculatorPluginProvider = DoubleCheck.provider(IobCobCalculatorPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideSharedPreferencesProvider, provideResourcesProvider, provideProfileFunctionProvider, (Provider) pluginStoreProvider, treatmentsPluginProvider, sensitivityOref1PluginProvider, sensitivityAAPSPluginProvider, sensitivityWeightedAveragePluginProvider, fabricPrivacyProvider, dateUtilProvider));
    this.constraintCheckerProvider = DoubleCheck.provider(ConstraintChecker_Factory.create((Provider) pluginStoreProvider));
    this.buildHelperProvider = DoubleCheck.provider(BuildHelper_Factory.create(configProvider));
    this.commandQueueProvider = DoubleCheck.provider(CommandQueue_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, constraintCheckerProvider, provideProfileFunctionProvider, (Provider) pluginStoreProvider, (Provider) applicationProvider, provideSharedPreferencesProvider, buildHelperProvider, fabricPrivacyProvider));
    this.virtualPumpPluginProvider = DoubleCheck.provider(VirtualPumpPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, fabricPrivacyProvider, provideResourcesProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, treatmentsPluginProvider, (Provider) commandQueueProvider, configProvider, dateUtilProvider));
    this.loopPluginProvider = new DelegateFactory<>();
    this.wearPluginProvider = DoubleCheck.provider(WearPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, applicationProvider, fabricPrivacyProvider, loopPluginProvider, rxBusWrapperProvider));
    this.localInsightPluginProvider = DoubleCheck.provider(LocalInsightPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, treatmentsPluginProvider, provideSharedPreferencesProvider, (Provider) commandQueueProvider, provideProfileFunctionProvider, nSUploadProvider, (Provider) applicationProvider, uploadQueueProvider, configProvider, dateUtilProvider));
    this.danaPumpProvider = DoubleCheck.provider(DanaPump_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider, (Provider) applicationProvider));
    this.danaRPluginProvider = DoubleCheck.provider(DanaRPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, (Provider) applicationProvider, provideResourcesProvider, constraintCheckerProvider, (Provider) pluginStoreProvider, provideSharedPreferencesProvider, (Provider) commandQueueProvider, danaPumpProvider, dateUtilProvider, fabricPrivacyProvider));
    this.danaRKoreanPluginProvider = DoubleCheck.provider(DanaRKoreanPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, danaPumpProvider, (Provider) applicationProvider, provideResourcesProvider, constraintCheckerProvider, (Provider) pluginStoreProvider, provideSharedPreferencesProvider, (Provider) commandQueueProvider, dateUtilProvider, fabricPrivacyProvider));
    this.detailedBolusInfoStorageProvider = DoubleCheck.provider(DetailedBolusInfoStorage_Factory.create(provideAAPSLoggerProvider));
    this.danaRv2PluginProvider = DoubleCheck.provider(DanaRv2Plugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, (Provider) applicationProvider, danaPumpProvider, provideResourcesProvider, constraintCheckerProvider, (Provider) pluginStoreProvider, provideSharedPreferencesProvider, (Provider) commandQueueProvider, detailedBolusInfoStorageProvider, dateUtilProvider, fabricPrivacyProvider));
    this.danaRSPluginProvider = DoubleCheck.provider(DanaRSPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, (Provider) applicationProvider, provideResourcesProvider, constraintCheckerProvider, provideProfileFunctionProvider, (Provider) pluginStoreProvider, provideSharedPreferencesProvider, (Provider) commandQueueProvider, danaPumpProvider, detailedBolusInfoStorageProvider, fabricPrivacyProvider, dateUtilProvider));
    this.hardLimitsProvider = DoubleCheck.provider(HardLimits_Factory.create(provideAAPSLoggerProvider, rxBusWrapperProvider, provideSharedPreferencesProvider, provideResourcesProvider, (Provider) applicationProvider, nSUploadProvider));
    this.carbsGeneratorProvider = DoubleCheck.provider(CarbsGenerator_Factory.create(provideResourcesProvider, (Provider) pluginStoreProvider, (Provider) commandQueueProvider, (Provider) applicationProvider));
    this.actionStringHandlerProvider = DoubleCheck.provider(ActionStringHandler_Factory.create(provideSharedPreferencesProvider, rxBusWrapperProvider, provideResourcesProvider, (Provider) applicationProvider, (Provider) applicationProvider, constraintCheckerProvider, provideProfileFunctionProvider, loopPluginProvider, wearPluginProvider, (Provider) commandQueueProvider, (Provider) pluginStoreProvider, iobCobCalculatorPluginProvider, localInsightPluginProvider, danaRPluginProvider, danaRKoreanPluginProvider, danaRv2PluginProvider, danaRSPluginProvider, danaPumpProvider, hardLimitsProvider, carbsGeneratorProvider, dateUtilProvider, configProvider));
    this.receiverStatusStoreProvider = DoubleCheck.provider(ReceiverStatusStore_Factory.create((Provider) applicationProvider, rxBusWrapperProvider));
    DelegateFactory.setDelegate(loopPluginProvider, DoubleCheck.provider(LoopPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideSharedPreferencesProvider, configProvider, constraintCheckerProvider, provideResourcesProvider, provideProfileFunctionProvider, (Provider) applicationProvider, (Provider) commandQueueProvider, (Provider) pluginStoreProvider, treatmentsPluginProvider, virtualPumpPluginProvider, actionStringHandlerProvider, iobCobCalculatorPluginProvider, receiverStatusStoreProvider, fabricPrivacyProvider, nSUploadProvider, hardLimitsProvider)));
    this.xdripCalibrationsProvider = DoubleCheck.provider(XdripCalibrations_Factory.create(provideAAPSLoggerProvider, provideResourcesProvider, (Provider) applicationProvider, provideProfileFunctionProvider));
    this.oneTimePasswordProvider = DoubleCheck.provider(OneTimePassword_Factory.create(provideSharedPreferencesProvider, provideResourcesProvider));
    this.smsCommunicatorPluginProvider = DoubleCheck.provider(SmsCommunicatorPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, constraintCheckerProvider, rxBusWrapperProvider, provideProfileFunctionProvider, fabricPrivacyProvider, (Provider) pluginStoreProvider, (Provider) commandQueueProvider, loopPluginProvider, iobCobCalculatorPluginProvider, xdripCalibrationsProvider, oneTimePasswordProvider, configProvider, dateUtilProvider));
    this.localAlertUtilsProvider = DoubleCheck.provider(LocalAlertUtils_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider, rxBusWrapperProvider, provideResourcesProvider, (Provider) pluginStoreProvider, provideProfileFunctionProvider, iobCobCalculatorPluginProvider, smsCommunicatorPluginProvider, configProvider, nSUploadProvider, dateUtilProvider));
    this.iconsProvider = DoubleCheck.provider(IconsProvider_Factory.create(configProvider));
    this.notificationHolderProvider = DoubleCheck.provider(NotificationHolder_Factory.create(provideResourcesProvider, (Provider) applicationProvider, iconsProvider));
    this.alarmSoundServiceHelperProvider = DoubleCheck.provider(AlarmSoundServiceHelper_Factory.create((Provider) notificationHolderProvider));
    this.notificationStoreProvider = DoubleCheck.provider(NotificationStore_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider, rxBusWrapperProvider, provideResourcesProvider, (Provider) applicationProvider, iconsProvider, alarmSoundServiceHelperProvider, dateUtilProvider));
    this.overviewPluginProvider = DoubleCheck.provider(OverviewPlugin_Factory.create((Provider) applicationProvider, notificationStoreProvider, fabricPrivacyProvider, rxBusWrapperProvider, provideSharedPreferencesProvider, provideAAPSLoggerProvider, provideResourcesProvider, configProvider));
    this.actionsPluginProvider = DoubleCheck.provider(ActionsPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, configProvider));
    this.insulinOrefRapidActingPluginProvider = DoubleCheck.provider(InsulinOrefRapidActingPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideProfileFunctionProvider, rxBusWrapperProvider, provideAAPSLoggerProvider));
    this.insulinOrefUltraRapidActingPluginProvider = DoubleCheck.provider(InsulinOrefUltraRapidActingPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideProfileFunctionProvider, rxBusWrapperProvider, provideAAPSLoggerProvider));
    this.insulinLyumjevPluginProvider = DoubleCheck.provider(InsulinLyumjevPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideProfileFunctionProvider, rxBusWrapperProvider, provideAAPSLoggerProvider));
    this.insulinOrefFreePeakPluginProvider = DoubleCheck.provider(InsulinOrefFreePeakPlugin_Factory.create((Provider) applicationProvider, provideSharedPreferencesProvider, provideResourcesProvider, provideProfileFunctionProvider, rxBusWrapperProvider, provideAAPSLoggerProvider));
    this.nSProfilePluginProvider = DoubleCheck.provider(NSProfilePlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, provideSharedPreferencesProvider, configProvider));
    this.locationServiceHelperProvider = DoubleCheck.provider(LocationServiceHelper_Factory.create((Provider) notificationHolderProvider));
    this.automationPluginProvider = DoubleCheck.provider(AutomationPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, (Provider) applicationProvider, provideSharedPreferencesProvider, fabricPrivacyProvider, loopPluginProvider, rxBusWrapperProvider, constraintCheckerProvider, provideAAPSLoggerProvider, configProvider, locationServiceHelperProvider, dateUtilProvider));
    this.profilerProvider = DoubleCheck.provider(Profiler_Factory.create(provideAAPSLoggerProvider));
    this.openAPSAMAPluginProvider = DoubleCheck.provider(OpenAPSAMAPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, constraintCheckerProvider, provideResourcesProvider, provideProfileFunctionProvider, (Provider) applicationProvider, (Provider) pluginStoreProvider, treatmentsPluginProvider, iobCobCalculatorPluginProvider, hardLimitsProvider, profilerProvider, fabricPrivacyProvider));
    this.openAPSSMBPluginProvider = DoubleCheck.provider(OpenAPSSMBPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, constraintCheckerProvider, provideResourcesProvider, provideProfileFunctionProvider, (Provider) applicationProvider, (Provider) pluginStoreProvider, treatmentsPluginProvider, iobCobCalculatorPluginProvider, hardLimitsProvider, profilerProvider, fabricPrivacyProvider, provideSharedPreferencesProvider));
    this.safetyPluginProvider = DoubleCheck.provider(SafetyPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, rxBusWrapperProvider, constraintCheckerProvider, openAPSAMAPluginProvider, openAPSSMBPluginProvider, sensitivityOref1PluginProvider, (Provider) pluginStoreProvider, hardLimitsProvider, buildHelperProvider, treatmentsPluginProvider, configProvider));
    this.foodPluginProvider = DoubleCheck.provider(FoodPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider));
    this.statusLinePluginProvider = DoubleCheck.provider(StatusLinePlugin_Factory.create((Provider) applicationProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, provideResourcesProvider, (Provider) applicationProvider, fabricPrivacyProvider, (Provider) pluginStoreProvider, loopPluginProvider, iobCobCalculatorPluginProvider, rxBusWrapperProvider, provideAAPSLoggerProvider));
    this.dummyServiceHelperProvider = DoubleCheck.provider(DummyServiceHelper_Factory.create((Provider) notificationHolderProvider));
    this.persistentNotificationPluginProvider = DoubleCheck.provider(PersistentNotificationPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideProfileFunctionProvider, fabricPrivacyProvider, (Provider) pluginStoreProvider, iobCobCalculatorPluginProvider, rxBusWrapperProvider, (Provider) applicationProvider, notificationHolderProvider, dummyServiceHelperProvider, iconsProvider, (Provider) databaseHelperProvider));
    this.nsClientReceiverDelegateProvider = DoubleCheck.provider(NsClientReceiverDelegate_Factory.create(rxBusWrapperProvider, provideResourcesProvider, provideSharedPreferencesProvider, receiverStatusStoreProvider));
    this.nSClientPluginProvider = DoubleCheck.provider(NSClientPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, (Provider) applicationProvider, fabricPrivacyProvider, provideSharedPreferencesProvider, nsClientReceiverDelegateProvider, configProvider, buildHelperProvider));
    this.defaultValueHelperProvider = DoubleCheck.provider(DefaultValueHelper_Factory.create(provideSharedPreferencesProvider, provideProfileFunctionProvider));
    this.nSSettingsStatusProvider = DoubleCheck.provider(NSSettingsStatus_Factory.create(provideAAPSLoggerProvider, provideResourcesProvider, rxBusWrapperProvider, defaultValueHelperProvider, provideSharedPreferencesProvider, configProvider));
    this.maintenancePluginProvider = DoubleCheck.provider(MaintenancePlugin_Factory.create((Provider) applicationProvider, (Provider) applicationProvider, provideResourcesProvider, provideSharedPreferencesProvider, nSSettingsStatusProvider, provideAAPSLoggerProvider, buildHelperProvider, configProvider));
    this.dstHelperPluginProvider = DoubleCheck.provider(DstHelperPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, provideSharedPreferencesProvider, (Provider) pluginStoreProvider, loopPluginProvider));
    this.nSDeviceStatusProvider = DoubleCheck.provider(NSDeviceStatus_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider, provideResourcesProvider, nSSettingsStatusProvider, (Provider) configProvider, runningConfigurationProvider));
    this.dataBroadcastPluginProvider = DoubleCheck.provider(DataBroadcastPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, (Provider) applicationProvider, fabricPrivacyProvider, rxBusWrapperProvider, iobCobCalculatorPluginProvider, provideProfileFunctionProvider, defaultValueHelperProvider, nSDeviceStatusProvider, loopPluginProvider, (Provider) pluginStoreProvider, receiverStatusStoreProvider, configProvider, (Provider) databaseHelperProvider));
    this.xdripPluginProvider = DoubleCheck.provider(XdripPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider));
    this.nSClientSourcePluginProvider = DoubleCheck.provider(NSClientSourcePlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider, provideSharedPreferencesProvider, configProvider));
    this.mM640gPluginProvider = DoubleCheck.provider(MM640gPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider));
    this.glimpPluginProvider = DoubleCheck.provider(GlimpPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider));
    this.dexcomPluginProvider = DoubleCheck.provider(DexcomPlugin_Factory.create((Provider) applicationProvider, provideSharedPreferencesProvider, applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider, nSUploadProvider, configProvider));
    this.poctechPluginProvider = DoubleCheck.provider(PoctechPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider, provideSharedPreferencesProvider, nSUploadProvider));
    this.tomatoPluginProvider = DoubleCheck.provider(TomatoPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider, provideSharedPreferencesProvider, nSUploadProvider));
    this.randomBgPluginProvider = DoubleCheck.provider(RandomBgPlugin_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider, virtualPumpPluginProvider, buildHelperProvider, provideSharedPreferencesProvider, nSUploadProvider));
    this.comboPluginProvider = DoubleCheck.provider(ComboPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, provideProfileFunctionProvider, treatmentsPluginProvider, provideSharedPreferencesProvider, (Provider) commandQueueProvider, (Provider) applicationProvider));
    this.rileyLinkUtilProvider = DoubleCheck.provider(RileyLinkUtil_Factory.create());
    this.medtronicPumpStatusProvider = DoubleCheck.provider(MedtronicPumpStatus_Factory.create(provideResourcesProvider, provideSharedPreferencesProvider, rxBusWrapperProvider, rileyLinkUtilProvider));
    this.medtronicUtilProvider = DoubleCheck.provider(MedtronicUtil_Factory.create(provideAAPSLoggerProvider, rxBusWrapperProvider, rileyLinkUtilProvider, medtronicPumpStatusProvider));
    this.medtronicPumpHistoryDecoderProvider = DoubleCheck.provider(MedtronicPumpHistoryDecoder_Factory.create(provideAAPSLoggerProvider, medtronicUtilProvider, provideAAPSLoggerProvider, medtronicUtilProvider));
    this.medtronicHistoryDataProvider = DoubleCheck.provider(MedtronicHistoryData_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideSharedPreferencesProvider, (Provider) pluginStoreProvider, nSUploadProvider, medtronicUtilProvider, medtronicPumpHistoryDecoderProvider, (Provider) databaseHelperProvider));
    this.rileyLinkServiceDataProvider = DoubleCheck.provider(RileyLinkServiceData_Factory.create(provideAAPSLoggerProvider, rileyLinkUtilProvider, rxBusWrapperProvider, (Provider) pluginStoreProvider));
  }

  @SuppressWarnings("unchecked")
  private void initialize6(final SkinsModule skinsModuleParam, final AppModule appModuleParam,
      final CoreModule coreModuleParam, final MainApp applicationParam) {
    this.serviceTaskExecutorProvider = DoubleCheck.provider(ServiceTaskExecutor_Factory.create(rileyLinkUtilProvider, provideAAPSLoggerProvider));
    this.medtronicPumpPluginProvider = DoubleCheck.provider(MedtronicPumpPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, (Provider) applicationProvider, provideResourcesProvider, (Provider) pluginStoreProvider, provideSharedPreferencesProvider, (Provider) commandQueueProvider, fabricPrivacyProvider, rileyLinkUtilProvider, medtronicUtilProvider, medtronicPumpStatusProvider, medtronicHistoryDataProvider, rileyLinkServiceDataProvider, serviceTaskExecutorProvider, dateUtilProvider));
    this.aapsPodStateManagerProvider = DoubleCheck.provider(AapsPodStateManager_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider, rxBusWrapperProvider));
    this.podStateManagerProvider = OmnipodModule_Companion_PodStateManagerProviderFactory.create(aapsPodStateManagerProvider);
    this.rileyLinkBLEProvider = DoubleCheck.provider(RileyLinkBLE_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rileyLinkServiceDataProvider, rileyLinkUtilProvider, provideSharedPreferencesProvider));
    this.rFSpyProvider = DoubleCheck.provider(RFSpy_Factory.create((Provider) applicationProvider, rileyLinkBLEProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, rileyLinkServiceDataProvider, rileyLinkUtilProvider, rxBusWrapperProvider));
    this.omnipodRileyLinkCommunicationManagerProvider = DoubleCheck.provider(OmnipodRileyLinkCommunicationManager_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider, rileyLinkServiceDataProvider, serviceTaskExecutorProvider, rFSpyProvider, (Provider) applicationProvider, (Provider) pluginStoreProvider));
    this.aapsOmnipodUtilProvider = DoubleCheck.provider(AapsOmnipodUtil_Factory.create(provideResourcesProvider));
    this.omnipodAlertUtilProvider = DoubleCheck.provider(OmnipodAlertUtil_Factory.create(provideSharedPreferencesProvider));
    this.aapsOmnipodManagerProvider = DoubleCheck.provider(AapsOmnipodManager_Factory.create(omnipodRileyLinkCommunicationManagerProvider, podStateManagerProvider, aapsOmnipodUtilProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideSharedPreferencesProvider, provideResourcesProvider, (Provider) applicationProvider, (Provider) pluginStoreProvider, (Provider) databaseHelperProvider, omnipodAlertUtilProvider, nSUploadProvider, provideProfileFunctionProvider, (Provider) applicationProvider));
    this.omnipodPumpPluginProvider = DoubleCheck.provider(OmnipodPumpPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, (Provider) applicationProvider, provideResourcesProvider, (Provider) pluginStoreProvider, provideSharedPreferencesProvider, podStateManagerProvider, aapsOmnipodManagerProvider, (Provider) commandQueueProvider, fabricPrivacyProvider, rileyLinkServiceDataProvider, dateUtilProvider, aapsOmnipodUtilProvider, rileyLinkUtilProvider, omnipodAlertUtilProvider, provideProfileFunctionProvider, nSUploadProvider, omnipodRileyLinkCommunicationManagerProvider));
    this.pumpDriverMapOfIntegerAndPluginBaseProvider = MapFactory.<Integer, PluginBase>builder(8).put(90, (Provider) danaRPluginProvider).put(100, (Provider) danaRKoreanPluginProvider).put(110, (Provider) danaRv2PluginProvider).put(120, (Provider) danaRSPluginProvider).put(130, (Provider) localInsightPluginProvider).put(140, (Provider) comboPluginProvider).put(150, (Provider) medtronicPumpPluginProvider).put(155, (Provider) omnipodPumpPluginProvider).build();
    this.mDIPluginProvider = DoubleCheck.provider(MDIPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, (Provider) commandQueueProvider, treatmentsPluginProvider));
    this.localProfilePluginProvider = DoubleCheck.provider(LocalProfilePlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, nSUploadProvider));
    this.versionCheckerPluginProvider = DoubleCheck.provider(VersionCheckerPlugin_Factory.create((Provider) applicationProvider, provideSharedPreferencesProvider, provideResourcesProvider, versionCheckerUtilsProvider, rxBusWrapperProvider, provideAAPSLoggerProvider));
    this.openHumansUploaderProvider = DoubleCheck.provider(OpenHumansUploader_Factory.create((Provider) applicationProvider, provideResourcesProvider, provideAAPSLoggerProvider, provideSharedPreferencesProvider, rxBusWrapperProvider, (Provider) applicationProvider, treatmentsPluginProvider));
    this.notNSClientMapOfIntegerAndPluginBaseProvider = MapFactory.<Integer, PluginBase>builder(5).put(160, (Provider) mDIPluginProvider).put(240, (Provider) localProfilePluginProvider).put(270, (Provider) versionCheckerPluginProvider).put(280, (Provider) smsCommunicatorPluginProvider).put(480, (Provider) openHumansUploaderProvider).build();
    this.storageConstraintPluginProvider = DoubleCheck.provider(StorageConstraintPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, rxBusWrapperProvider));
    this.signatureVerifierPluginProvider = DoubleCheck.provider(SignatureVerifierPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, rxBusWrapperProvider, (Provider) applicationProvider));
    this.objectivesPluginProvider = DoubleCheck.provider(ObjectivesPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, (Provider) pluginStoreProvider, provideSharedPreferencesProvider, configProvider));
    this.aPSMapOfIntegerAndPluginBaseProvider = MapFactory.<Integer, PluginBase>builder(6).put(190, (Provider) loopPluginProvider).put(210, (Provider) openAPSAMAPluginProvider).put(220, (Provider) openAPSSMBPluginProvider).put(290, (Provider) storageConstraintPluginProvider).put(300, (Provider) signatureVerifierPluginProvider).put(310, (Provider) objectivesPluginProvider).build();
    this.staticInjectorProvider = DoubleCheck.provider(StaticInjector_Factory.create((Provider) applicationProvider));
    this.cryptoUtilProvider = DoubleCheck.provider(CryptoUtil_Factory.create(provideAAPSLoggerProvider));
    this.passwordCheckProvider = DoubleCheck.provider(PasswordCheck_Factory.create(provideSharedPreferencesProvider, cryptoUtilProvider));
    this.androidPermissionProvider = DoubleCheck.provider(AndroidPermission_Factory.create(provideResourcesProvider, rxBusWrapperProvider, (Provider) applicationProvider));
    this.provideStorageProvider = DoubleCheck.provider(AppModule_ProvideStorageFactory.create(appModuleParam));
    this.classicPrefsFormatProvider = DoubleCheck.provider(ClassicPrefsFormat_Factory.create(provideResourcesProvider, provideStorageProvider));
    this.encryptedPrefsFormatProvider = DoubleCheck.provider(EncryptedPrefsFormat_Factory.create(provideResourcesProvider, cryptoUtilProvider, provideStorageProvider));
    this.prefFileListProvider = DoubleCheck.provider(PrefFileListProvider_Factory.create(provideResourcesProvider, (Provider) configProvider, classicPrefsFormatProvider, encryptedPrefsFormatProvider, provideStorageProvider, versionCheckerUtilsProvider));
    this.importExportPrefsProvider = DoubleCheck.provider(ImportExportPrefs_Factory.create(provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, buildHelperProvider, rxBusWrapperProvider, passwordCheckProvider, (Provider) configProvider, androidPermissionProvider, classicPrefsFormatProvider, encryptedPrefsFormatProvider, prefFileListProvider));
    this.treatmentsPluginHistoryProvider = DoubleCheck.provider(TreatmentsPluginHistory_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, (Provider) applicationProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, (Provider) pluginStoreProvider, nSUploadProvider, fabricPrivacyProvider, dateUtilProvider, uploadQueueProvider));
    this.iobCobCalculatorPluginHistoryProvider = DoubleCheck.provider(IobCobCalculatorPluginHistory_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, rxBusWrapperProvider, provideSharedPreferencesProvider, provideResourcesProvider, provideProfileFunctionProvider, (Provider) pluginStoreProvider, treatmentsPluginHistoryProvider, sensitivityOref1PluginProvider, sensitivityAAPSPluginProvider, sensitivityWeightedAveragePluginProvider, fabricPrivacyProvider, dateUtilProvider));
    this.overviewMenusProvider = DoubleCheck.provider(OverviewMenus_Factory.create(provideAAPSLoggerProvider, provideResourcesProvider, provideSharedPreferencesProvider, rxBusWrapperProvider, buildHelperProvider, loopPluginProvider, configProvider));
    this.alertUtilsProvider = DoubleCheck.provider(AlertUtils_Factory.create(provideResourcesProvider));
    this.protectionCheckProvider = DoubleCheck.provider(ProtectionCheck_Factory.create(provideSharedPreferencesProvider, passwordCheckProvider));
    this.quickWizardProvider = DoubleCheck.provider(QuickWizard_Factory.create(provideSharedPreferencesProvider, (Provider) applicationProvider));
    this.blePreCheckProvider = DoubleCheck.provider(BlePreCheck_Factory.create(provideResourcesProvider));
    this.sWDefinitionProvider = DoubleCheck.provider(SWDefinition_Factory.create((Provider) applicationProvider, rxBusWrapperProvider, (Provider) applicationProvider, provideResourcesProvider, provideSharedPreferencesProvider, provideProfileFunctionProvider, localProfilePluginProvider, (Provider) pluginStoreProvider, (Provider) commandQueueProvider, objectivesPluginProvider, configBuilderPluginProvider, loopPluginProvider, nSClientPluginProvider, nSProfilePluginProvider, (Provider) importExportPrefsProvider, androidPermissionProvider, cryptoUtilProvider, configProvider));
    this.tirCalculatorProvider = DoubleCheck.provider(TirCalculator_Factory.create(provideResourcesProvider, provideProfileFunctionProvider, dateUtilProvider));
    this.defaultProfileProvider = DoubleCheck.provider(DefaultProfile_Factory.create((Provider) applicationProvider));
    this.defaultProfileDPVProvider = DoubleCheck.provider(DefaultProfileDPV_Factory.create((Provider) applicationProvider));
    this.eversensePluginProvider = DoubleCheck.provider(EversensePlugin_Factory.create((Provider) applicationProvider, provideSharedPreferencesProvider, provideResourcesProvider, provideAAPSLoggerProvider, dateUtilProvider, nSUploadProvider));
    this.uploadChunkProvider = DoubleCheck.provider(UploadChunk_Factory.create(provideSharedPreferencesProvider, rxBusWrapperProvider, provideAAPSLoggerProvider, provideProfileFunctionProvider, treatmentsPluginProvider, (Provider) pluginStoreProvider, dateUtilProvider));
    this.tidepoolUploaderProvider = DoubleCheck.provider(TidepoolUploader_Factory.create(provideAAPSLoggerProvider, rxBusWrapperProvider, applicationProvider, provideResourcesProvider, provideSharedPreferencesProvider, uploadChunkProvider, (Provider) pluginStoreProvider, dateUtilProvider));
    this.rateLimitProvider = DoubleCheck.provider(RateLimit_Factory.create(provideAAPSLoggerProvider));
    this.tidepoolPluginProvider = DoubleCheck.provider(TidepoolPlugin_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, rxBusWrapperProvider, (Provider) applicationProvider, fabricPrivacyProvider, tidepoolUploaderProvider, uploadChunkProvider, provideSharedPreferencesProvider, rateLimitProvider, receiverStatusStoreProvider));
    this.warnColorsProvider = DoubleCheck.provider(WarnColors_Factory.create(provideResourcesProvider));
    this.statusLightHandlerProvider = DoubleCheck.provider(StatusLightHandler_Factory.create(provideResourcesProvider, provideSharedPreferencesProvider, (Provider) pluginStoreProvider, warnColorsProvider, configProvider));
    this.skinClassicProvider = DoubleCheck.provider(SkinClassic_Factory.create(configProvider));
    this.bindsSkinClassicProvider = SkinsModule_BindsSkinClassicFactory.create(skinsModuleParam, skinClassicProvider);
    this.skinButtonsOnProvider = DoubleCheck.provider(SkinButtonsOn_Factory.create(configProvider));
    this.bindsSkinButtonsOnProvider = SkinsModule_BindsSkinButtonsOnFactory.create(skinsModuleParam, skinButtonsOnProvider);
    this.skinLargeDisplayProvider = DoubleCheck.provider(SkinLargeDisplay_Factory.create(configProvider));
    this.bindsSkinLargeDisplayProvider = SkinsModule_BindsSkinLargeDisplayFactory.create(skinsModuleParam, skinLargeDisplayProvider);
    this.skinLowResProvider = DoubleCheck.provider(SkinLowRes_Factory.create(configProvider));
    this.bindsSkinLowResProvider = SkinsModule_BindsSkinLowResFactory.create(skinsModuleParam, skinLowResProvider);
    this.skinMapOfIntegerAndSkinInterfaceProvider = MapFactory.<Integer, SkinInterface>builder(4).put(0, bindsSkinClassicProvider).put(10, bindsSkinButtonsOnProvider).put(20, bindsSkinLargeDisplayProvider).put(30, bindsSkinLowResProvider).build();
    this.skinProvider = DoubleCheck.provider(SkinProvider_Factory.create(provideSharedPreferencesProvider, skinMapOfIntegerAndSkinInterfaceProvider));
    this.sntpClientProvider = DoubleCheck.provider(SntpClient_Factory.create(provideAAPSLoggerProvider, dateUtilProvider));
    this.translatorProvider = DoubleCheck.provider(Translator_Factory.create(provideResourcesProvider));
    this.lastLocationDataContainerProvider = DoubleCheck.provider(LastLocationDataContainer_Factory.create());
    this.medtronicUIPostprocessorProvider = DoubleCheck.provider(MedtronicUIPostprocessor_Factory.create(provideAAPSLoggerProvider, rxBusWrapperProvider, provideResourcesProvider, medtronicUtilProvider, medtronicPumpStatusProvider, medtronicPumpPluginProvider));
    this.medtronicConverterProvider = DoubleCheck.provider(MedtronicConverter_Factory.create(provideAAPSLoggerProvider, medtronicUtilProvider));
    this.medtronicCommunicationManagerProvider = DoubleCheck.provider(MedtronicCommunicationManager_Factory.create(provideAAPSLoggerProvider, provideSharedPreferencesProvider, rileyLinkServiceDataProvider, serviceTaskExecutorProvider, rFSpyProvider, (Provider) applicationProvider, (Provider) pluginStoreProvider, medtronicPumpStatusProvider, medtronicPumpPluginProvider, medtronicConverterProvider, medtronicUtilProvider, medtronicPumpHistoryDecoderProvider));
    this.messageHashTableRv2Provider = DoubleCheck.provider(MessageHashTableRv2_Factory.create((Provider) applicationProvider));
    this.messageHashTableRProvider = DoubleCheck.provider(MessageHashTableR_Factory.create((Provider) applicationProvider));
    this.messageHashTableRKoreanProvider = DoubleCheck.provider(MessageHashTableRKorean_Factory.create((Provider) applicationProvider));
    this.danaRSMessageHashTableProvider = DoubleCheck.provider(DanaRSMessageHashTable_Factory.create((Provider) applicationProvider));
    this.bleEncryptionProvider = DoubleCheck.provider(BleEncryption_Factory.create((Provider) applicationProvider));
    this.bLECommProvider = DoubleCheck.provider(BLEComm_Factory.create((Provider) applicationProvider, provideAAPSLoggerProvider, provideResourcesProvider, (Provider) applicationProvider, rxBusWrapperProvider, provideSharedPreferencesProvider, danaRSMessageHashTableProvider, danaPumpProvider, danaRSPluginProvider, bleEncryptionProvider, nSUploadProvider));
  }

  @Override
  public void inject(MainApp arg0) {
    injectMainApp(arg0);
  }

  @CanIgnoreReturnValue
  private MainApp injectMainApp(MainApp instance) {
    DaggerApplication_MembersInjector.injectAndroidInjector(instance, dispatchingAndroidInjectorOfObject());
    MainApp_MembersInjector.injectPluginStore(instance, pluginStoreProvider.get());
    MainApp_MembersInjector.injectAapsLogger(instance, provideAAPSLoggerProvider.get());
    MainApp_MembersInjector.injectActivityMonitor(instance, activityMonitorProvider.get());
    MainApp_MembersInjector.injectVersionCheckersUtils(instance, versionCheckerUtilsProvider.get());
    MainApp_MembersInjector.injectSp(instance, provideSharedPreferencesProvider.get());
    MainApp_MembersInjector.injectNsUpload(instance, nSUploadProvider.get());
    MainApp_MembersInjector.injectConfig(instance, configProvider.get());
    MainApp_MembersInjector.injectConfigBuilderPlugin(instance, configBuilderPluginProvider.get());
    MainApp_MembersInjector.injectKeepAliveManager(instance, keepAliveManager());
    MainApp_MembersInjector.injectPlugins(instance, listOfPluginBase());
    MainApp_MembersInjector.injectStaticInjector(instance, staticInjectorProvider.get());
    return instance;
  }

  private static final class Builder implements AppComponent.Builder {
    private MainApp application;

    @Override
    public Builder application(MainApp mainApp) {
      this.application = Preconditions.checkNotNull(mainApp);
      return this;
    }

    @Override
    public AppComponent build() {
      Preconditions.checkBuilderRequirement(application, MainApp.class);
      return new DaggerAppComponent(new SkinsModule(), new AppModule(), new CoreModule(), application);
    }
  }

  private final class HistoryBrowseActivitySubcomponentFactory implements ActivitiesModule_ContributesHistoryBrowseActivity.HistoryBrowseActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesHistoryBrowseActivity.HistoryBrowseActivitySubcomponent create(
        HistoryBrowseActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new HistoryBrowseActivitySubcomponentImpl(arg0);
    }
  }

  private final class HistoryBrowseActivitySubcomponentImpl implements ActivitiesModule_ContributesHistoryBrowseActivity.HistoryBrowseActivitySubcomponent {
    private HistoryBrowseActivitySubcomponentImpl(HistoryBrowseActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(HistoryBrowseActivity arg0) {
      injectHistoryBrowseActivity(arg0);
    }

    @CanIgnoreReturnValue
    private HistoryBrowseActivity injectHistoryBrowseActivity(HistoryBrowseActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      HistoryBrowseActivity_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      HistoryBrowseActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      HistoryBrowseActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      HistoryBrowseActivity_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      HistoryBrowseActivity_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      HistoryBrowseActivity_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      HistoryBrowseActivity_MembersInjector.injectIobCobCalculatorPluginHistory(instance, DaggerAppComponent.this.iobCobCalculatorPluginHistoryProvider.get());
      HistoryBrowseActivity_MembersInjector.injectTreatmentsPluginHistory(instance, DaggerAppComponent.this.treatmentsPluginHistoryProvider.get());
      HistoryBrowseActivity_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      HistoryBrowseActivity_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      HistoryBrowseActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      HistoryBrowseActivity_MembersInjector.injectOverviewMenus(instance, DaggerAppComponent.this.overviewMenusProvider.get());
      HistoryBrowseActivity_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class InsightAlertActivitySubcomponentFactory implements ActivitiesModule_ContributesInsightAlertActivity.InsightAlertActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesInsightAlertActivity.InsightAlertActivitySubcomponent create(
        InsightAlertActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new InsightAlertActivitySubcomponentImpl(arg0);
    }
  }

  private final class InsightAlertActivitySubcomponentImpl implements ActivitiesModule_ContributesInsightAlertActivity.InsightAlertActivitySubcomponent {
    private InsightAlertActivitySubcomponentImpl(InsightAlertActivity arg0) {

    }

    @Override
    public void inject(InsightAlertActivity arg0) {
      injectInsightAlertActivity(arg0);
    }

    @CanIgnoreReturnValue
    private InsightAlertActivity injectInsightAlertActivity(InsightAlertActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      InsightAlertActivity_MembersInjector.injectAlertUtils(instance, DaggerAppComponent.this.alertUtilsProvider.get());
      return instance;
    }
  }

  private final class InsightPairingActivitySubcomponentFactory implements ActivitiesModule_ContributesInsightPairingActivity.InsightPairingActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesInsightPairingActivity.InsightPairingActivitySubcomponent create(
        InsightPairingActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new InsightPairingActivitySubcomponentImpl(arg0);
    }
  }

  private final class InsightPairingActivitySubcomponentImpl implements ActivitiesModule_ContributesInsightPairingActivity.InsightPairingActivitySubcomponent {
    private InsightPairingActivitySubcomponentImpl(InsightPairingActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(InsightPairingActivity arg0) {
      injectInsightPairingActivity(arg0);
    }

    @CanIgnoreReturnValue
    private InsightPairingActivity injectInsightPairingActivity(InsightPairingActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      return instance;
    }
  }

  private final class InsightPairingInformationActivitySubcomponentFactory implements ActivitiesModule_ContributesInsightPairingInformationActivity.InsightPairingInformationActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesInsightPairingInformationActivity.InsightPairingInformationActivitySubcomponent create(
        InsightPairingInformationActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new InsightPairingInformationActivitySubcomponentImpl(arg0);
    }
  }

  private final class InsightPairingInformationActivitySubcomponentImpl implements ActivitiesModule_ContributesInsightPairingInformationActivity.InsightPairingInformationActivitySubcomponent {
    private InsightPairingInformationActivitySubcomponentImpl(
        InsightPairingInformationActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(InsightPairingInformationActivity arg0) {
      injectInsightPairingInformationActivity(arg0);
    }

    @CanIgnoreReturnValue
    private InsightPairingInformationActivity injectInsightPairingInformationActivity(
        InsightPairingInformationActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      return instance;
    }
  }

  private final class LogSettingActivitySubcomponentFactory implements ActivitiesModule_ContributesLogSettingActivity.LogSettingActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesLogSettingActivity.LogSettingActivitySubcomponent create(
        LogSettingActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new LogSettingActivitySubcomponentImpl(arg0);
    }
  }

  private final class LogSettingActivitySubcomponentImpl implements ActivitiesModule_ContributesLogSettingActivity.LogSettingActivitySubcomponent {
    private LogSettingActivitySubcomponentImpl(LogSettingActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(LogSettingActivity arg0) {
      injectLogSettingActivity(arg0);
    }

    @CanIgnoreReturnValue
    private LogSettingActivity injectLogSettingActivity(LogSettingActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      LogSettingActivity_MembersInjector.injectL(instance, DaggerAppComponent.this.lProvider.get());
      return instance;
    }
  }

  private final class MainActivitySubcomponentFactory implements ActivitiesModule_ContributeMainActivity.MainActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributeMainActivity.MainActivitySubcomponent create(
        MainActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new MainActivitySubcomponentImpl(arg0);
    }
  }

  private final class MainActivitySubcomponentImpl implements ActivitiesModule_ContributeMainActivity.MainActivitySubcomponent {
    private MainActivitySubcomponentImpl(MainActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(MainActivity arg0) {
      injectMainActivity(arg0);
    }

    @CanIgnoreReturnValue
    private MainActivity injectMainActivity(MainActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      MainActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MainActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MainActivity_MembersInjector.injectAndroidPermission(instance, DaggerAppComponent.this.androidPermissionProvider.get());
      MainActivity_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      MainActivity_MembersInjector.injectVersionCheckerUtils(instance, DaggerAppComponent.this.versionCheckerUtilsProvider.get());
      MainActivity_MembersInjector.injectSmsCommunicatorPlugin(instance, DaggerAppComponent.this.smsCommunicatorPluginProvider.get());
      MainActivity_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      MainActivity_MembersInjector.injectNsSettingsStatus(instance, DaggerAppComponent.this.nSSettingsStatusProvider.get());
      MainActivity_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      MainActivity_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MainActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      MainActivity_MembersInjector.injectProtectionCheck(instance, DaggerAppComponent.this.protectionCheckProvider.get());
      MainActivity_MembersInjector.injectIconsProvider(instance, DaggerAppComponent.this.iconsProvider.get());
      MainActivity_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MainActivity_MembersInjector.injectSignatureVerifierPlugin(instance, DaggerAppComponent.this.signatureVerifierPluginProvider.get());
      MainActivity_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class MedtronicHistoryActivitySubcomponentFactory implements ActivitiesModule_ContributesMedtronicHistoryActivity.MedtronicHistoryActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesMedtronicHistoryActivity.MedtronicHistoryActivitySubcomponent create(
        MedtronicHistoryActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new MedtronicHistoryActivitySubcomponentImpl(arg0);
    }
  }

  private final class MedtronicHistoryActivitySubcomponentImpl implements ActivitiesModule_ContributesMedtronicHistoryActivity.MedtronicHistoryActivitySubcomponent {
    private MedtronicHistoryActivitySubcomponentImpl(MedtronicHistoryActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(MedtronicHistoryActivity arg0) {
      injectMedtronicHistoryActivity(arg0);
    }

    @CanIgnoreReturnValue
    private MedtronicHistoryActivity injectMedtronicHistoryActivity(
        MedtronicHistoryActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      MedtronicHistoryActivity_MembersInjector.injectMedtronicHistoryData(instance, DaggerAppComponent.this.medtronicHistoryDataProvider.get());
      MedtronicHistoryActivity_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class PreferencesActivitySubcomponentFactory implements ActivitiesModule_ContributesPreferencesActivity.PreferencesActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesPreferencesActivity.PreferencesActivitySubcomponent create(
        PreferencesActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PreferencesActivitySubcomponentImpl(arg0);
    }
  }

  private final class PreferencesActivitySubcomponentImpl implements ActivitiesModule_ContributesPreferencesActivity.PreferencesActivitySubcomponent {
    private PreferencesActivitySubcomponentImpl(PreferencesActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(PreferencesActivity arg0) {
      injectPreferencesActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PreferencesActivity injectPreferencesActivity(PreferencesActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      return instance;
    }
  }

  private final class QuickWizardListActivitySubcomponentFactory implements ActivitiesModule_ContributesQuickWizardListActivity.QuickWizardListActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesQuickWizardListActivity.QuickWizardListActivitySubcomponent create(
        QuickWizardListActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new QuickWizardListActivitySubcomponentImpl(arg0);
    }
  }

  private final class QuickWizardListActivitySubcomponentImpl implements ActivitiesModule_ContributesQuickWizardListActivity.QuickWizardListActivitySubcomponent {
    private QuickWizardListActivitySubcomponentImpl(QuickWizardListActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(QuickWizardListActivity arg0) {
      injectQuickWizardListActivity(arg0);
    }

    @CanIgnoreReturnValue
    private QuickWizardListActivity injectQuickWizardListActivity(
        QuickWizardListActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      QuickWizardListActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      QuickWizardListActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      QuickWizardListActivity_MembersInjector.injectQuickWizard(instance, DaggerAppComponent.this.quickWizardProvider.get());
      QuickWizardListActivity_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class RequestDexcomPermissionActivitySubcomponentFactory implements ActivitiesModule_ContributesRequestDexcomPermissionActivity.RequestDexcomPermissionActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesRequestDexcomPermissionActivity.RequestDexcomPermissionActivitySubcomponent create(
        RequestDexcomPermissionActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new RequestDexcomPermissionActivitySubcomponentImpl(arg0);
    }
  }

  private final class RequestDexcomPermissionActivitySubcomponentImpl implements ActivitiesModule_ContributesRequestDexcomPermissionActivity.RequestDexcomPermissionActivitySubcomponent {
    private RequestDexcomPermissionActivitySubcomponentImpl(RequestDexcomPermissionActivity arg0) {

    }

    @Override
    public void inject(RequestDexcomPermissionActivity arg0) {
      injectRequestDexcomPermissionActivity(arg0);
    }

    @CanIgnoreReturnValue
    private RequestDexcomPermissionActivity injectRequestDexcomPermissionActivity(
        RequestDexcomPermissionActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      RequestDexcomPermissionActivity_MembersInjector.injectDexcomPlugin(instance, DaggerAppComponent.this.dexcomPluginProvider.get());
      return instance;
    }
  }

  private final class RileyLinkStatusActivitySubcomponentFactory implements ActivitiesModule_ContributesRileyLinkStatusActivity.RileyLinkStatusActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesRileyLinkStatusActivity.RileyLinkStatusActivitySubcomponent create(
        RileyLinkStatusActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkStatusActivitySubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkStatusActivitySubcomponentImpl implements ActivitiesModule_ContributesRileyLinkStatusActivity.RileyLinkStatusActivitySubcomponent {
    private RileyLinkStatusActivitySubcomponentImpl(RileyLinkStatusActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(RileyLinkStatusActivity arg0) {
      injectRileyLinkStatusActivity(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkStatusActivity injectRileyLinkStatusActivity(
        RileyLinkStatusActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      RileyLinkStatusActivity_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class RileyLinkBLEConfigActivitySubcomponentFactory implements ActivitiesModule_ContributesRileyLinkBLEConfigActivity.RileyLinkBLEConfigActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesRileyLinkBLEConfigActivity.RileyLinkBLEConfigActivitySubcomponent create(
        RileyLinkBLEConfigActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkBLEConfigActivitySubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkBLEConfigActivitySubcomponentImpl implements ActivitiesModule_ContributesRileyLinkBLEConfigActivity.RileyLinkBLEConfigActivitySubcomponent {
    private RileyLinkBLEConfigActivitySubcomponentImpl(RileyLinkBLEConfigActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(RileyLinkBLEConfigActivity arg0) {
      injectRileyLinkBLEConfigActivity(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkBLEConfigActivity injectRileyLinkBLEConfigActivity(
        RileyLinkBLEConfigActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      RileyLinkBLEConfigActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkBLEConfigActivity_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RileyLinkBLEConfigActivity_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      RileyLinkBLEConfigActivity_MembersInjector.injectBlePrecheck(instance, DaggerAppComponent.this.blePreCheckProvider.get());
      RileyLinkBLEConfigActivity_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      RileyLinkBLEConfigActivity_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class SetupWizardActivitySubcomponentFactory implements ActivitiesModule_ContributesSetupWizardActivity.SetupWizardActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesSetupWizardActivity.SetupWizardActivitySubcomponent create(
        SetupWizardActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new SetupWizardActivitySubcomponentImpl(arg0);
    }
  }

  private final class SetupWizardActivitySubcomponentImpl implements ActivitiesModule_ContributesSetupWizardActivity.SetupWizardActivitySubcomponent {
    private SetupWizardActivitySubcomponentImpl(SetupWizardActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(SetupWizardActivity arg0) {
      injectSetupWizardActivity(arg0);
    }

    @CanIgnoreReturnValue
    private SetupWizardActivity injectSetupWizardActivity(SetupWizardActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      SetupWizardActivity_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      SetupWizardActivity_MembersInjector.injectLocalProfilePlugin(instance, DaggerAppComponent.this.localProfilePluginProvider.get());
      SetupWizardActivity_MembersInjector.injectSwDefinition(instance, DaggerAppComponent.this.sWDefinitionProvider.get());
      SetupWizardActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SetupWizardActivity_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      SetupWizardActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class SingleFragmentActivitySubcomponentFactory implements ActivitiesModule_ContributesSingleFragmentActivity.SingleFragmentActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesSingleFragmentActivity.SingleFragmentActivitySubcomponent create(
        SingleFragmentActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new SingleFragmentActivitySubcomponentImpl(arg0);
    }
  }

  private final class SingleFragmentActivitySubcomponentImpl implements ActivitiesModule_ContributesSingleFragmentActivity.SingleFragmentActivitySubcomponent {
    private SingleFragmentActivitySubcomponentImpl(SingleFragmentActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(SingleFragmentActivity arg0) {
      injectSingleFragmentActivity(arg0);
    }

    @CanIgnoreReturnValue
    private SingleFragmentActivity injectSingleFragmentActivity(SingleFragmentActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      SingleFragmentActivity_MembersInjector.injectPluginStore(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      SingleFragmentActivity_MembersInjector.injectProtectionCheck(instance, DaggerAppComponent.this.protectionCheckProvider.get());
      return instance;
    }
  }

  private final class SmsCommunicatorOtpActivitySubcomponentFactory implements ActivitiesModule_ContributesSmsCommunicatorOtpActivity.SmsCommunicatorOtpActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesSmsCommunicatorOtpActivity.SmsCommunicatorOtpActivitySubcomponent create(
        SmsCommunicatorOtpActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new SmsCommunicatorOtpActivitySubcomponentImpl(arg0);
    }
  }

  private final class SmsCommunicatorOtpActivitySubcomponentImpl implements ActivitiesModule_ContributesSmsCommunicatorOtpActivity.SmsCommunicatorOtpActivitySubcomponent {
    private SmsCommunicatorOtpActivitySubcomponentImpl(SmsCommunicatorOtpActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(SmsCommunicatorOtpActivity arg0) {
      injectSmsCommunicatorOtpActivity(arg0);
    }

    @CanIgnoreReturnValue
    private SmsCommunicatorOtpActivity injectSmsCommunicatorOtpActivity(
        SmsCommunicatorOtpActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      SmsCommunicatorOtpActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      SmsCommunicatorOtpActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SmsCommunicatorOtpActivity_MembersInjector.injectSmsCommunicatorPlugin(instance, DaggerAppComponent.this.smsCommunicatorPluginProvider.get());
      SmsCommunicatorOtpActivity_MembersInjector.injectOtp(instance, DaggerAppComponent.this.oneTimePasswordProvider.get());
      return instance;
    }
  }

  private final class StatsActivitySubcomponentFactory implements ActivitiesModule_ContributesStatsActivity.StatsActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesStatsActivity.StatsActivitySubcomponent create(
        StatsActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new StatsActivitySubcomponentImpl(arg0);
    }
  }

  private final class StatsActivitySubcomponentImpl implements ActivitiesModule_ContributesStatsActivity.StatsActivitySubcomponent {
    private StatsActivitySubcomponentImpl(StatsActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    private TddCalculator tddCalculator() {
      return new TddCalculator(DaggerAppComponent.this.application, DaggerAppComponent.this.provideAAPSLoggerProvider.get(), DaggerAppComponent.this.rxBusWrapperProvider.get(), DaggerAppComponent.this.provideResourcesProvider.get(), DaggerAppComponent.this.application, DaggerAppComponent.this.provideSharedPreferencesProvider.get(), DaggerAppComponent.this.pluginStoreProvider.get(), DaggerAppComponent.this.provideProfileFunctionProvider.get(), DaggerAppComponent.this.fabricPrivacyProvider.get(), DaggerAppComponent.this.nSUploadProvider.get(), DaggerAppComponent.this.dateUtilProvider.get(), DaggerAppComponent.this.uploadQueue());
    }

    @Override
    public void inject(StatsActivity arg0) {
      injectStatsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private StatsActivity injectStatsActivity(StatsActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      StatsActivity_MembersInjector.injectTddCalculator(instance, tddCalculator());
      StatsActivity_MembersInjector.injectTirCalculator(instance, DaggerAppComponent.this.tirCalculatorProvider.get());
      StatsActivity_MembersInjector.injectActivityMonitor(instance, DaggerAppComponent.this.activityMonitorProvider.get());
      return instance;
    }
  }

  private final class SurveyActivitySubcomponentFactory implements ActivitiesModule_ContributesSurveyActivity.SurveyActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesSurveyActivity.SurveyActivitySubcomponent create(
        SurveyActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new SurveyActivitySubcomponentImpl(arg0);
    }
  }

  private final class SurveyActivitySubcomponentImpl implements ActivitiesModule_ContributesSurveyActivity.SurveyActivitySubcomponent {
    private SurveyActivitySubcomponentImpl(SurveyActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    private TddCalculator tddCalculator() {
      return new TddCalculator(DaggerAppComponent.this.application, DaggerAppComponent.this.provideAAPSLoggerProvider.get(), DaggerAppComponent.this.rxBusWrapperProvider.get(), DaggerAppComponent.this.provideResourcesProvider.get(), DaggerAppComponent.this.application, DaggerAppComponent.this.provideSharedPreferencesProvider.get(), DaggerAppComponent.this.pluginStoreProvider.get(), DaggerAppComponent.this.provideProfileFunctionProvider.get(), DaggerAppComponent.this.fabricPrivacyProvider.get(), DaggerAppComponent.this.nSUploadProvider.get(), DaggerAppComponent.this.dateUtilProvider.get(), DaggerAppComponent.this.uploadQueue());
    }

    @Override
    public void inject(SurveyActivity arg0) {
      injectSurveyActivity(arg0);
    }

    @CanIgnoreReturnValue
    private SurveyActivity injectSurveyActivity(SurveyActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      SurveyActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SurveyActivity_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      SurveyActivity_MembersInjector.injectTddCalculator(instance, tddCalculator());
      SurveyActivity_MembersInjector.injectTirCalculator(instance, DaggerAppComponent.this.tirCalculatorProvider.get());
      SurveyActivity_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      SurveyActivity_MembersInjector.injectActivityMonitor(instance, DaggerAppComponent.this.activityMonitorProvider.get());
      SurveyActivity_MembersInjector.injectDefaultProfile(instance, DaggerAppComponent.this.defaultProfileProvider.get());
      return instance;
    }
  }

  private final class ProfileHelperActivitySubcomponentFactory implements ActivitiesModule_ContributesDefaultProfileActivity.ProfileHelperActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesDefaultProfileActivity.ProfileHelperActivitySubcomponent create(
        ProfileHelperActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ProfileHelperActivitySubcomponentImpl(arg0);
    }
  }

  private final class ProfileHelperActivitySubcomponentImpl implements ActivitiesModule_ContributesDefaultProfileActivity.ProfileHelperActivitySubcomponent {
    private ProfileHelperActivitySubcomponentImpl(ProfileHelperActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    private TddCalculator tddCalculator() {
      return new TddCalculator(DaggerAppComponent.this.application, DaggerAppComponent.this.provideAAPSLoggerProvider.get(), DaggerAppComponent.this.rxBusWrapperProvider.get(), DaggerAppComponent.this.provideResourcesProvider.get(), DaggerAppComponent.this.application, DaggerAppComponent.this.provideSharedPreferencesProvider.get(), DaggerAppComponent.this.pluginStoreProvider.get(), DaggerAppComponent.this.provideProfileFunctionProvider.get(), DaggerAppComponent.this.fabricPrivacyProvider.get(), DaggerAppComponent.this.nSUploadProvider.get(), DaggerAppComponent.this.dateUtilProvider.get(), DaggerAppComponent.this.uploadQueue());
    }

    @Override
    public void inject(ProfileHelperActivity arg0) {
      injectProfileHelperActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ProfileHelperActivity injectProfileHelperActivity(ProfileHelperActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      ProfileHelperActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ProfileHelperActivity_MembersInjector.injectTddCalculator(instance, tddCalculator());
      ProfileHelperActivity_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      ProfileHelperActivity_MembersInjector.injectDefaultProfile(instance, DaggerAppComponent.this.defaultProfileProvider.get());
      ProfileHelperActivity_MembersInjector.injectDefaultProfileDPV(instance, DaggerAppComponent.this.defaultProfileDPVProvider.get());
      ProfileHelperActivity_MembersInjector.injectLocalProfilePlugin(instance, DaggerAppComponent.this.localProfilePluginProvider.get());
      ProfileHelperActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ProfileHelperActivity_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      ProfileHelperActivity_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      ProfileHelperActivity_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class OpenHumansLoginActivitySubcomponentFactory implements ActivitiesModule_ContributesOpenHumansLoginActivity.OpenHumansLoginActivitySubcomponent.Factory {
    @Override
    public ActivitiesModule_ContributesOpenHumansLoginActivity.OpenHumansLoginActivitySubcomponent create(
        OpenHumansLoginActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new OpenHumansLoginActivitySubcomponentImpl(arg0);
    }
  }

  private final class OpenHumansLoginActivitySubcomponentImpl implements ActivitiesModule_ContributesOpenHumansLoginActivity.OpenHumansLoginActivitySubcomponent {
    private OpenHumansLoginActivitySubcomponentImpl(OpenHumansLoginActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(OpenHumansLoginActivity arg0) {
      injectOpenHumansLoginActivity(arg0);
    }

    @CanIgnoreReturnValue
    private OpenHumansLoginActivity injectOpenHumansLoginActivity(
        OpenHumansLoginActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      return instance;
    }
  }

  private final class MyPreferenceFragmentSubcomponentFactory implements FragmentsModule_ContributesPreferencesFragment.MyPreferenceFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesPreferencesFragment.MyPreferenceFragmentSubcomponent create(
        MyPreferenceFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new MyPreferenceFragmentSubcomponentImpl(arg0);
    }
  }

  private final class MyPreferenceFragmentSubcomponentImpl implements FragmentsModule_ContributesPreferencesFragment.MyPreferenceFragmentSubcomponent {
    private MyPreferenceFragmentSubcomponentImpl(MyPreferenceFragment arg0) {

    }

    @Override
    public void inject(MyPreferenceFragment arg0) {
      injectMyPreferenceFragment(arg0);
    }

    @CanIgnoreReturnValue
    private MyPreferenceFragment injectMyPreferenceFragment(MyPreferenceFragment instance) {
      MyPreferenceFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MyPreferenceFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MyPreferenceFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      MyPreferenceFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      MyPreferenceFragment_MembersInjector.injectPluginStore(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MyPreferenceFragment_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      MyPreferenceFragment_MembersInjector.injectAutomationPlugin(instance, DaggerAppComponent.this.automationPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectDanaRSPlugin(instance, DaggerAppComponent.this.danaRSPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectComboPlugin(instance, DaggerAppComponent.this.comboPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectInsulinOrefFreePeakPlugin(instance, DaggerAppComponent.this.insulinOrefFreePeakPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectLocalInsightPlugin(instance, DaggerAppComponent.this.localInsightPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectMedtronicPumpPlugin(instance, DaggerAppComponent.this.medtronicPumpPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectNsClientPlugin(instance, DaggerAppComponent.this.nSClientPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectOpenAPSAMAPlugin(instance, DaggerAppComponent.this.openAPSAMAPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectOpenAPSSMBPlugin(instance, DaggerAppComponent.this.openAPSSMBPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectSafetyPlugin(instance, DaggerAppComponent.this.safetyPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectSensitivityAAPSPlugin(instance, DaggerAppComponent.this.sensitivityAAPSPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectSensitivityOref1Plugin(instance, DaggerAppComponent.this.sensitivityOref1PluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectSensitivityWeightedAveragePlugin(instance, DaggerAppComponent.this.sensitivityWeightedAveragePluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectDexcomPlugin(instance, DaggerAppComponent.this.dexcomPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectEversensePlugin(instance, DaggerAppComponent.this.eversensePluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectGlimpPlugin(instance, DaggerAppComponent.this.glimpPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectPoctechPlugin(instance, DaggerAppComponent.this.poctechPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectTomatoPlugin(instance, DaggerAppComponent.this.tomatoPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectSmsCommunicatorPlugin(instance, DaggerAppComponent.this.smsCommunicatorPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectStatusLinePlugin(instance, DaggerAppComponent.this.statusLinePluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectTidepoolPlugin(instance, DaggerAppComponent.this.tidepoolPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectVirtualPumpPlugin(instance, DaggerAppComponent.this.virtualPumpPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectWearPlugin(instance, DaggerAppComponent.this.wearPluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectMaintenancePlugin(instance, DaggerAppComponent.this.maintenancePluginProvider.get());
      MyPreferenceFragment_MembersInjector.injectPasswordCheck(instance, DaggerAppComponent.this.passwordCheckProvider.get());
      MyPreferenceFragment_MembersInjector.injectNsSettingStatus(instance, DaggerAppComponent.this.nSSettingsStatusProvider.get());
      MyPreferenceFragment_MembersInjector.injectOpenHumansUploader(instance, DaggerAppComponent.this.openHumansUploaderProvider.get());
      return instance;
    }
  }

  private final class ActionsFragmentSubcomponentFactory implements FragmentsModule_ContributesActionsFragment.ActionsFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesActionsFragment.ActionsFragmentSubcomponent create(
        ActionsFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionsFragmentSubcomponentImpl(arg0);
    }
  }

  private final class ActionsFragmentSubcomponentImpl implements FragmentsModule_ContributesActionsFragment.ActionsFragmentSubcomponent {
    private ActionsFragmentSubcomponentImpl(ActionsFragment arg0) {

    }

    @Override
    public void inject(ActionsFragment arg0) {
      injectActionsFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ActionsFragment injectActionsFragment(ActionsFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      ActionsFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionsFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ActionsFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      ActionsFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      ActionsFragment_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      ActionsFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionsFragment_MembersInjector.injectStatusLightHandler(instance, DaggerAppComponent.this.statusLightHandlerProvider.get());
      ActionsFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      ActionsFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      ActionsFragment_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      ActionsFragment_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      ActionsFragment_MembersInjector.injectProtectionCheck(instance, DaggerAppComponent.this.protectionCheckProvider.get());
      ActionsFragment_MembersInjector.injectSkinProvider(instance, DaggerAppComponent.this.skinProvider.get());
      ActionsFragment_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class AutomationFragmentSubcomponentFactory implements FragmentsModule_ContributesAutomationFragment.AutomationFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesAutomationFragment.AutomationFragmentSubcomponent create(
        AutomationFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new AutomationFragmentSubcomponentImpl(arg0);
    }
  }

  private final class AutomationFragmentSubcomponentImpl implements FragmentsModule_ContributesAutomationFragment.AutomationFragmentSubcomponent {
    private AutomationFragmentSubcomponentImpl(AutomationFragment arg0) {

    }

    @Override
    public void inject(AutomationFragment arg0) {
      injectAutomationFragment(arg0);
    }

    @CanIgnoreReturnValue
    private AutomationFragment injectAutomationFragment(AutomationFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      AutomationFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      AutomationFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      AutomationFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      AutomationFragment_MembersInjector.injectAutomationPlugin(instance, DaggerAppComponent.this.automationPluginProvider.get());
      AutomationFragment_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      return instance;
    }
  }

  private final class BGSourceFragmentSubcomponentFactory implements FragmentsModule_ContributesBGSourceFragment.BGSourceFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesBGSourceFragment.BGSourceFragmentSubcomponent create(
        BGSourceFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new BGSourceFragmentSubcomponentImpl(arg0);
    }
  }

  private final class BGSourceFragmentSubcomponentImpl implements FragmentsModule_ContributesBGSourceFragment.BGSourceFragmentSubcomponent {
    private BGSourceFragmentSubcomponentImpl(BGSourceFragment arg0) {

    }

    @Override
    public void inject(BGSourceFragment arg0) {
      injectBGSourceFragment(arg0);
    }

    @CanIgnoreReturnValue
    private BGSourceFragment injectBGSourceFragment(BGSourceFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      BGSourceFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      BGSourceFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      BGSourceFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      BGSourceFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      BGSourceFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      BGSourceFragment_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class ComboFragmentSubcomponentFactory implements FragmentsModule_ContributesComboFragment.ComboFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesComboFragment.ComboFragmentSubcomponent create(
        ComboFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new ComboFragmentSubcomponentImpl(arg0);
    }
  }

  private final class ComboFragmentSubcomponentImpl implements FragmentsModule_ContributesComboFragment.ComboFragmentSubcomponent {
    private ComboFragmentSubcomponentImpl(ComboFragment arg0) {

    }

    @Override
    public void inject(ComboFragment arg0) {
      injectComboFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ComboFragment injectComboFragment(ComboFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      ComboFragment_MembersInjector.injectComboPlugin(instance, DaggerAppComponent.this.comboPluginProvider.get());
      ComboFragment_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      ComboFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ComboFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ComboFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      ComboFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class ConfigBuilderFragmentSubcomponentFactory implements FragmentsModule_ContributesConfigBuilderFragment.ConfigBuilderFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesConfigBuilderFragment.ConfigBuilderFragmentSubcomponent create(
        ConfigBuilderFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new ConfigBuilderFragmentSubcomponentImpl(arg0);
    }
  }

  private final class ConfigBuilderFragmentSubcomponentImpl implements FragmentsModule_ContributesConfigBuilderFragment.ConfigBuilderFragmentSubcomponent {
    private ConfigBuilderFragmentSubcomponentImpl(ConfigBuilderFragment arg0) {

    }

    @Override
    public void inject(ConfigBuilderFragment arg0) {
      injectConfigBuilderFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ConfigBuilderFragment injectConfigBuilderFragment(ConfigBuilderFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      ConfigBuilderFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ConfigBuilderFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ConfigBuilderFragment_MembersInjector.injectConfigBuilderPlugin(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      ConfigBuilderFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      ConfigBuilderFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      ConfigBuilderFragment_MembersInjector.injectProtectionCheck(instance, DaggerAppComponent.this.protectionCheckProvider.get());
      ConfigBuilderFragment_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class FoodFragmentSubcomponentFactory implements FragmentsModule_ContributesFoodFragment.FoodFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesFoodFragment.FoodFragmentSubcomponent create(
        FoodFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new FoodFragmentSubcomponentImpl(arg0);
    }
  }

  private final class FoodFragmentSubcomponentImpl implements FragmentsModule_ContributesFoodFragment.FoodFragmentSubcomponent {
    private FoodFragmentSubcomponentImpl(FoodFragment arg0) {

    }

    @Override
    public void inject(FoodFragment arg0) {
      injectFoodFragment(arg0);
    }

    @CanIgnoreReturnValue
    private FoodFragment injectFoodFragment(FoodFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      FoodFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      FoodFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      FoodFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      FoodFragment_MembersInjector.injectFoodPlugin(instance, DaggerAppComponent.this.foodPluginProvider.get());
      FoodFragment_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      return instance;
    }
  }

  private final class InsulinFragmentSubcomponentFactory implements FragmentsModule_ContributesInsulinFragment.InsulinFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesInsulinFragment.InsulinFragmentSubcomponent create(
        InsulinFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new InsulinFragmentSubcomponentImpl(arg0);
    }
  }

  private final class InsulinFragmentSubcomponentImpl implements FragmentsModule_ContributesInsulinFragment.InsulinFragmentSubcomponent {
    private InsulinFragmentSubcomponentImpl(InsulinFragment arg0) {

    }

    @Override
    public void inject(InsulinFragment arg0) {
      injectInsulinFragment(arg0);
    }

    @CanIgnoreReturnValue
    private InsulinFragment injectInsulinFragment(InsulinFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      InsulinFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      InsulinFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class LocalProfileFragmentSubcomponentFactory implements FragmentsModule_ContributesLocalProfileFragment.LocalProfileFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesLocalProfileFragment.LocalProfileFragmentSubcomponent create(
        LocalProfileFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new LocalProfileFragmentSubcomponentImpl(arg0);
    }
  }

  private final class LocalProfileFragmentSubcomponentImpl implements FragmentsModule_ContributesLocalProfileFragment.LocalProfileFragmentSubcomponent {
    private LocalProfileFragmentSubcomponentImpl(LocalProfileFragment arg0) {

    }

    @Override
    public void inject(LocalProfileFragment arg0) {
      injectLocalProfileFragment(arg0);
    }

    @CanIgnoreReturnValue
    private LocalProfileFragment injectLocalProfileFragment(LocalProfileFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      LocalProfileFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      LocalProfileFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      LocalProfileFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      LocalProfileFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      LocalProfileFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      LocalProfileFragment_MembersInjector.injectLocalProfilePlugin(instance, DaggerAppComponent.this.localProfilePluginProvider.get());
      LocalProfileFragment_MembersInjector.injectHardLimits(instance, DaggerAppComponent.this.hardLimitsProvider.get());
      LocalProfileFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class ObjectivesFragmentSubcomponentFactory implements FragmentsModule_ContributesObjectivesFragment.ObjectivesFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesObjectivesFragment.ObjectivesFragmentSubcomponent create(
        ObjectivesFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new ObjectivesFragmentSubcomponentImpl(arg0);
    }
  }

  private final class ObjectivesFragmentSubcomponentImpl implements FragmentsModule_ContributesObjectivesFragment.ObjectivesFragmentSubcomponent {
    private ObjectivesFragmentSubcomponentImpl(ObjectivesFragment arg0) {

    }

    @Override
    public void inject(ObjectivesFragment arg0) {
      injectObjectivesFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ObjectivesFragment injectObjectivesFragment(ObjectivesFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      ObjectivesFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ObjectivesFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ObjectivesFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      ObjectivesFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ObjectivesFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      ObjectivesFragment_MembersInjector.injectObjectivesPlugin(instance, DaggerAppComponent.this.objectivesPluginProvider.get());
      ObjectivesFragment_MembersInjector.injectReceiverStatusStore(instance, DaggerAppComponent.this.receiverStatusStoreProvider.get());
      ObjectivesFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      ObjectivesFragment_MembersInjector.injectSntpClient(instance, DaggerAppComponent.this.sntpClientProvider.get());
      return instance;
    }
  }

  private final class OpenAPSAMAFragmentSubcomponentFactory implements FragmentsModule_ContributesOpenAPSAMAFragment.OpenAPSAMAFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesOpenAPSAMAFragment.OpenAPSAMAFragmentSubcomponent create(
        OpenAPSAMAFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new OpenAPSAMAFragmentSubcomponentImpl(arg0);
    }
  }

  private final class OpenAPSAMAFragmentSubcomponentImpl implements FragmentsModule_ContributesOpenAPSAMAFragment.OpenAPSAMAFragmentSubcomponent {
    private OpenAPSAMAFragmentSubcomponentImpl(OpenAPSAMAFragment arg0) {

    }

    @Override
    public void inject(OpenAPSAMAFragment arg0) {
      injectOpenAPSAMAFragment(arg0);
    }

    @CanIgnoreReturnValue
    private OpenAPSAMAFragment injectOpenAPSAMAFragment(OpenAPSAMAFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      OpenAPSAMAFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      OpenAPSAMAFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      OpenAPSAMAFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      OpenAPSAMAFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      OpenAPSAMAFragment_MembersInjector.injectOpenAPSAMAPlugin(instance, DaggerAppComponent.this.openAPSAMAPluginProvider.get());
      OpenAPSAMAFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class OpenAPSSMBFragmentSubcomponentFactory implements FragmentsModule_ContributesOpenAPSSMBFragment.OpenAPSSMBFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesOpenAPSSMBFragment.OpenAPSSMBFragmentSubcomponent create(
        OpenAPSSMBFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new OpenAPSSMBFragmentSubcomponentImpl(arg0);
    }
  }

  private final class OpenAPSSMBFragmentSubcomponentImpl implements FragmentsModule_ContributesOpenAPSSMBFragment.OpenAPSSMBFragmentSubcomponent {
    private OpenAPSSMBFragmentSubcomponentImpl(OpenAPSSMBFragment arg0) {

    }

    @Override
    public void inject(OpenAPSSMBFragment arg0) {
      injectOpenAPSSMBFragment(arg0);
    }

    @CanIgnoreReturnValue
    private OpenAPSSMBFragment injectOpenAPSSMBFragment(OpenAPSSMBFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      OpenAPSSMBFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      OpenAPSSMBFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      OpenAPSSMBFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      OpenAPSSMBFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      OpenAPSSMBFragment_MembersInjector.injectOpenAPSSMBPlugin(instance, DaggerAppComponent.this.openAPSSMBPluginProvider.get());
      OpenAPSSMBFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class OverviewFragmentSubcomponentFactory implements FragmentsModule_ContributesOverviewFragment.OverviewFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesOverviewFragment.OverviewFragmentSubcomponent create(
        OverviewFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new OverviewFragmentSubcomponentImpl(arg0);
    }
  }

  private final class OverviewFragmentSubcomponentImpl implements FragmentsModule_ContributesOverviewFragment.OverviewFragmentSubcomponent {
    private OverviewFragmentSubcomponentImpl(OverviewFragment arg0) {

    }

    @Override
    public void inject(OverviewFragment arg0) {
      injectOverviewFragment(arg0);
    }

    @CanIgnoreReturnValue
    private OverviewFragment injectOverviewFragment(OverviewFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      OverviewFragment_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      OverviewFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      OverviewFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      OverviewFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      OverviewFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      OverviewFragment_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      OverviewFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      OverviewFragment_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      OverviewFragment_MembersInjector.injectStatusLightHandler(instance, DaggerAppComponent.this.statusLightHandlerProvider.get());
      OverviewFragment_MembersInjector.injectNsDeviceStatus(instance, DaggerAppComponent.this.nSDeviceStatusProvider.get());
      OverviewFragment_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      OverviewFragment_MembersInjector.injectConfigBuilderPlugin(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      OverviewFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      OverviewFragment_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      OverviewFragment_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      OverviewFragment_MembersInjector.injectDexcomPlugin(instance, DaggerAppComponent.this.dexcomPluginProvider.get());
      OverviewFragment_MembersInjector.injectXdripPlugin(instance, DaggerAppComponent.this.xdripPluginProvider.get());
      OverviewFragment_MembersInjector.injectNotificationStore(instance, DaggerAppComponent.this.notificationStoreProvider.get());
      OverviewFragment_MembersInjector.injectActionStringHandler(instance, DaggerAppComponent.this.actionStringHandlerProvider.get());
      OverviewFragment_MembersInjector.injectQuickWizard(instance, DaggerAppComponent.this.quickWizardProvider.get());
      OverviewFragment_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      OverviewFragment_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      OverviewFragment_MembersInjector.injectProtectionCheck(instance, DaggerAppComponent.this.protectionCheckProvider.get());
      OverviewFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      OverviewFragment_MembersInjector.injectOverviewMenus(instance, DaggerAppComponent.this.overviewMenusProvider.get());
      OverviewFragment_MembersInjector.injectSkinProvider(instance, DaggerAppComponent.this.skinProvider.get());
      OverviewFragment_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      OverviewFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      OverviewFragment_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class LocalInsightFragmentSubcomponentFactory implements FragmentsModule_ContributesLocalInsightFragment.LocalInsightFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesLocalInsightFragment.LocalInsightFragmentSubcomponent create(
        LocalInsightFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new LocalInsightFragmentSubcomponentImpl(arg0);
    }
  }

  private final class LocalInsightFragmentSubcomponentImpl implements FragmentsModule_ContributesLocalInsightFragment.LocalInsightFragmentSubcomponent {
    private LocalInsightFragmentSubcomponentImpl(LocalInsightFragment arg0) {

    }

    @Override
    public void inject(LocalInsightFragment arg0) {
      injectLocalInsightFragment(arg0);
    }

    @CanIgnoreReturnValue
    private LocalInsightFragment injectLocalInsightFragment(LocalInsightFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      LocalInsightFragment_MembersInjector.injectLocalInsightPlugin(instance, DaggerAppComponent.this.localInsightPluginProvider.get());
      LocalInsightFragment_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      LocalInsightFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      LocalInsightFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      LocalInsightFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      LocalInsightFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class LoopFragmentSubcomponentFactory implements FragmentsModule_ContributesLoopFragment.LoopFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesLoopFragment.LoopFragmentSubcomponent create(
        LoopFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new LoopFragmentSubcomponentImpl(arg0);
    }
  }

  private final class LoopFragmentSubcomponentImpl implements FragmentsModule_ContributesLoopFragment.LoopFragmentSubcomponent {
    private LoopFragmentSubcomponentImpl(LoopFragment arg0) {

    }

    @Override
    public void inject(LoopFragment arg0) {
      injectLoopFragment(arg0);
    }

    @CanIgnoreReturnValue
    private LoopFragment injectLoopFragment(LoopFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      LoopFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      LoopFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      LoopFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      LoopFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      LoopFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      LoopFragment_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      LoopFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class MaintenanceFragmentSubcomponentFactory implements FragmentsModule_ContributesMaintenanceFragment.MaintenanceFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesMaintenanceFragment.MaintenanceFragmentSubcomponent create(
        MaintenanceFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new MaintenanceFragmentSubcomponentImpl(arg0);
    }
  }

  private final class MaintenanceFragmentSubcomponentImpl implements FragmentsModule_ContributesMaintenanceFragment.MaintenanceFragmentSubcomponent {
    private MaintenanceFragmentSubcomponentImpl(MaintenanceFragment arg0) {

    }

    @Override
    public void inject(MaintenanceFragment arg0) {
      injectMaintenanceFragment(arg0);
    }

    @CanIgnoreReturnValue
    private MaintenanceFragment injectMaintenanceFragment(MaintenanceFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      MaintenanceFragment_MembersInjector.injectMaintenancePlugin(instance, DaggerAppComponent.this.maintenancePluginProvider.get());
      MaintenanceFragment_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      MaintenanceFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MaintenanceFragment_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      MaintenanceFragment_MembersInjector.injectFoodPlugin(instance, DaggerAppComponent.this.foodPluginProvider.get());
      MaintenanceFragment_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      return instance;
    }
  }

  private final class MedtronicFragmentSubcomponentFactory implements FragmentsModule_ContributesMedtronicFragment.MedtronicFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesMedtronicFragment.MedtronicFragmentSubcomponent create(
        MedtronicFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new MedtronicFragmentSubcomponentImpl(arg0);
    }
  }

  private final class MedtronicFragmentSubcomponentImpl implements FragmentsModule_ContributesMedtronicFragment.MedtronicFragmentSubcomponent {
    private MedtronicFragmentSubcomponentImpl(MedtronicFragment arg0) {

    }

    @Override
    public void inject(MedtronicFragment arg0) {
      injectMedtronicFragment(arg0);
    }

    @CanIgnoreReturnValue
    private MedtronicFragment injectMedtronicFragment(MedtronicFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      MedtronicFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MedtronicFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      MedtronicFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MedtronicFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MedtronicFragment_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MedtronicFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MedtronicFragment_MembersInjector.injectMedtronicPumpPlugin(instance, DaggerAppComponent.this.medtronicPumpPluginProvider.get());
      MedtronicFragment_MembersInjector.injectWarnColors(instance, DaggerAppComponent.this.warnColorsProvider.get());
      MedtronicFragment_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      MedtronicFragment_MembersInjector.injectMedtronicUtil(instance, DaggerAppComponent.this.medtronicUtilProvider.get());
      MedtronicFragment_MembersInjector.injectMedtronicPumpStatus(instance, DaggerAppComponent.this.medtronicPumpStatusProvider.get());
      MedtronicFragment_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      return instance;
    }
  }

  private final class OmnipodOverviewFragmentSubcomponentFactory implements FragmentsModule_ContributesOmnipodFragment.OmnipodOverviewFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesOmnipodFragment.OmnipodOverviewFragmentSubcomponent create(
        OmnipodOverviewFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new OmnipodOverviewFragmentSubcomponentImpl(arg0);
    }
  }

  private final class OmnipodOverviewFragmentSubcomponentImpl implements FragmentsModule_ContributesOmnipodFragment.OmnipodOverviewFragmentSubcomponent {
    private OmnipodOverviewFragmentSubcomponentImpl(OmnipodOverviewFragment arg0) {

    }

    @Override
    public void inject(OmnipodOverviewFragment arg0) {
      injectOmnipodOverviewFragment(arg0);
    }

    @CanIgnoreReturnValue
    private OmnipodOverviewFragment injectOmnipodOverviewFragment(
        OmnipodOverviewFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      OmnipodOverviewFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectOmnipodPumpPlugin(instance, DaggerAppComponent.this.omnipodPumpPluginProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectPodStateManager(instance, DaggerAppComponent.this.podStateManager());
      OmnipodOverviewFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectOmnipodUtil(instance, DaggerAppComponent.this.aapsOmnipodUtilProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectOmnipodAlertUtil(instance, DaggerAppComponent.this.omnipodAlertUtilProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectOmnipodManager(instance, DaggerAppComponent.this.aapsOmnipodManagerProvider.get());
      OmnipodOverviewFragment_MembersInjector.injectProtectionCheck(instance, DaggerAppComponent.this.protectionCheckProvider.get());
      return instance;
    }
  }

  private final class NSProfileFragmentSubcomponentFactory implements FragmentsModule_ContributesNSProfileFragment.NSProfileFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesNSProfileFragment.NSProfileFragmentSubcomponent create(
        NSProfileFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new NSProfileFragmentSubcomponentImpl(arg0);
    }
  }

  private final class NSProfileFragmentSubcomponentImpl implements FragmentsModule_ContributesNSProfileFragment.NSProfileFragmentSubcomponent {
    private NSProfileFragmentSubcomponentImpl(NSProfileFragment arg0) {

    }

    @Override
    public void inject(NSProfileFragment arg0) {
      injectNSProfileFragment(arg0);
    }

    @CanIgnoreReturnValue
    private NSProfileFragment injectNSProfileFragment(NSProfileFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      NSProfileFragment_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      NSProfileFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      NSProfileFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      NSProfileFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      NSProfileFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      NSProfileFragment_MembersInjector.injectNsProfilePlugin(instance, DaggerAppComponent.this.nSProfilePluginProvider.get());
      return instance;
    }
  }

  private final class NSClientFragmentSubcomponentFactory implements FragmentsModule_ContributesNSClientFragment.NSClientFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesNSClientFragment.NSClientFragmentSubcomponent create(
        NSClientFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new NSClientFragmentSubcomponentImpl(arg0);
    }
  }

  private final class NSClientFragmentSubcomponentImpl implements FragmentsModule_ContributesNSClientFragment.NSClientFragmentSubcomponent {
    private NSClientFragmentSubcomponentImpl(NSClientFragment arg0) {

    }

    @Override
    public void inject(NSClientFragment arg0) {
      injectNSClientFragment(arg0);
    }

    @CanIgnoreReturnValue
    private NSClientFragment injectNSClientFragment(NSClientFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      NSClientFragment_MembersInjector.injectNsClientPlugin(instance, DaggerAppComponent.this.nSClientPluginProvider.get());
      NSClientFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      NSClientFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      NSClientFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      NSClientFragment_MembersInjector.injectUploadQueue(instance, DaggerAppComponent.this.uploadQueue());
      NSClientFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class SmsCommunicatorFragmentSubcomponentFactory implements FragmentsModule_ContributesSmsCommunicatorFragment.SmsCommunicatorFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesSmsCommunicatorFragment.SmsCommunicatorFragmentSubcomponent create(
        SmsCommunicatorFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new SmsCommunicatorFragmentSubcomponentImpl(arg0);
    }
  }

  private final class SmsCommunicatorFragmentSubcomponentImpl implements FragmentsModule_ContributesSmsCommunicatorFragment.SmsCommunicatorFragmentSubcomponent {
    private SmsCommunicatorFragmentSubcomponentImpl(SmsCommunicatorFragment arg0) {

    }

    @Override
    public void inject(SmsCommunicatorFragment arg0) {
      injectSmsCommunicatorFragment(arg0);
    }

    @CanIgnoreReturnValue
    private SmsCommunicatorFragment injectSmsCommunicatorFragment(
        SmsCommunicatorFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      SmsCommunicatorFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      SmsCommunicatorFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SmsCommunicatorFragment_MembersInjector.injectSmsCommunicatorPlugin(instance, DaggerAppComponent.this.smsCommunicatorPluginProvider.get());
      SmsCommunicatorFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class WearFragmentSubcomponentFactory implements FragmentsModule_ContributesWearFragment.WearFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesWearFragment.WearFragmentSubcomponent create(
        WearFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new WearFragmentSubcomponentImpl(arg0);
    }
  }

  private final class WearFragmentSubcomponentImpl implements FragmentsModule_ContributesWearFragment.WearFragmentSubcomponent {
    private WearFragmentSubcomponentImpl(WearFragment arg0) {

    }

    @Override
    public void inject(WearFragment arg0) {
      injectWearFragment(arg0);
    }

    @CanIgnoreReturnValue
    private WearFragment injectWearFragment(WearFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      WearFragment_MembersInjector.injectWearPlugin(instance, DaggerAppComponent.this.wearPluginProvider.get());
      return instance;
    }
  }

  private final class TidepoolFragmentSubcomponentFactory implements FragmentsModule_ContributesTidepoolFragment.TidepoolFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTidepoolFragment.TidepoolFragmentSubcomponent create(
        TidepoolFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TidepoolFragmentSubcomponentImpl(arg0);
    }
  }

  private final class TidepoolFragmentSubcomponentImpl implements FragmentsModule_ContributesTidepoolFragment.TidepoolFragmentSubcomponent {
    private TidepoolFragmentSubcomponentImpl(TidepoolFragment arg0) {

    }

    @Override
    public void inject(TidepoolFragment arg0) {
      injectTidepoolFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TidepoolFragment injectTidepoolFragment(TidepoolFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      TidepoolFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TidepoolFragment_MembersInjector.injectTidepoolPlugin(instance, DaggerAppComponent.this.tidepoolPluginProvider.get());
      TidepoolFragment_MembersInjector.injectTidepoolUploader(instance, DaggerAppComponent.this.tidepoolUploaderProvider.get());
      TidepoolFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      TidepoolFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class TreatmentsFragmentSubcomponentFactory implements FragmentsModule_ContributesTreatmentsFragment.TreatmentsFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTreatmentsFragment.TreatmentsFragmentSubcomponent create(
        TreatmentsFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentsFragmentSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentsFragmentSubcomponentImpl implements FragmentsModule_ContributesTreatmentsFragment.TreatmentsFragmentSubcomponent {
    private TreatmentsFragmentSubcomponentImpl(TreatmentsFragment arg0) {

    }

    @Override
    public void inject(TreatmentsFragment arg0) {
      injectTreatmentsFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentsFragment injectTreatmentsFragment(TreatmentsFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      TreatmentsFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TreatmentsFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TreatmentsFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      TreatmentsFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      TreatmentsFragment_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      return instance;
    }
  }

  private final class TreatmentsBolusFragmentSubcomponentFactory implements FragmentsModule_ContributesTreatmentsBolusFragment.TreatmentsBolusFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTreatmentsBolusFragment.TreatmentsBolusFragmentSubcomponent create(
        TreatmentsBolusFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentsBolusFragmentSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentsBolusFragmentSubcomponentImpl implements FragmentsModule_ContributesTreatmentsBolusFragment.TreatmentsBolusFragmentSubcomponent {
    private TreatmentsBolusFragmentSubcomponentImpl(TreatmentsBolusFragment arg0) {

    }

    @Override
    public void inject(TreatmentsBolusFragment arg0) {
      injectTreatmentsBolusFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentsBolusFragment injectTreatmentsBolusFragment(
        TreatmentsBolusFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      TreatmentsBolusFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TreatmentsBolusFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      TreatmentsBolusFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TreatmentsBolusFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      TreatmentsBolusFragment_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      TreatmentsBolusFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      TreatmentsBolusFragment_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      TreatmentsBolusFragment_MembersInjector.injectUploadQueue(instance, DaggerAppComponent.this.uploadQueue());
      TreatmentsBolusFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      TreatmentsBolusFragment_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      return instance;
    }
  }

  private final class TreatmentsTemporaryBasalsFragmentSubcomponentFactory implements FragmentsModule_ContributesTreatmentsTemporaryBasalsFragment.TreatmentsTemporaryBasalsFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTreatmentsTemporaryBasalsFragment.TreatmentsTemporaryBasalsFragmentSubcomponent create(
        TreatmentsTemporaryBasalsFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentsTemporaryBasalsFragmentSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentsTemporaryBasalsFragmentSubcomponentImpl implements FragmentsModule_ContributesTreatmentsTemporaryBasalsFragment.TreatmentsTemporaryBasalsFragmentSubcomponent {
    private TreatmentsTemporaryBasalsFragmentSubcomponentImpl(
        TreatmentsTemporaryBasalsFragment arg0) {

    }

    @Override
    public void inject(TreatmentsTemporaryBasalsFragment arg0) {
      injectTreatmentsTemporaryBasalsFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentsTemporaryBasalsFragment injectTreatmentsTemporaryBasalsFragment(
        TreatmentsTemporaryBasalsFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      TreatmentsTemporaryBasalsFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TreatmentsTemporaryBasalsFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TreatmentsTemporaryBasalsFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      TreatmentsTemporaryBasalsFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      TreatmentsTemporaryBasalsFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      TreatmentsTemporaryBasalsFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class TreatmentsTempTargetFragmentSubcomponentFactory implements FragmentsModule_ContributesTreatmentsTempTargetFragment.TreatmentsTempTargetFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTreatmentsTempTargetFragment.TreatmentsTempTargetFragmentSubcomponent create(
        TreatmentsTempTargetFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentsTempTargetFragmentSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentsTempTargetFragmentSubcomponentImpl implements FragmentsModule_ContributesTreatmentsTempTargetFragment.TreatmentsTempTargetFragmentSubcomponent {
    private TreatmentsTempTargetFragmentSubcomponentImpl(TreatmentsTempTargetFragment arg0) {

    }

    @Override
    public void inject(TreatmentsTempTargetFragment arg0) {
      injectTreatmentsTempTargetFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentsTempTargetFragment injectTreatmentsTempTargetFragment(
        TreatmentsTempTargetFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      TreatmentsTempTargetFragment_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      TreatmentsTempTargetFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      TreatmentsTempTargetFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TreatmentsTempTargetFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      TreatmentsTempTargetFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TreatmentsTempTargetFragment_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      TreatmentsTempTargetFragment_MembersInjector.injectUploadQueue(instance, DaggerAppComponent.this.uploadQueue());
      TreatmentsTempTargetFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      TreatmentsTempTargetFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      TreatmentsTempTargetFragment_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      return instance;
    }
  }

  private final class TreatmentsExtendedBolusesFragmentSubcomponentFactory implements FragmentsModule_ContributesTreatmentsExtendedBolusesFragment.TreatmentsExtendedBolusesFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTreatmentsExtendedBolusesFragment.TreatmentsExtendedBolusesFragmentSubcomponent create(
        TreatmentsExtendedBolusesFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentsExtendedBolusesFragmentSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentsExtendedBolusesFragmentSubcomponentImpl implements FragmentsModule_ContributesTreatmentsExtendedBolusesFragment.TreatmentsExtendedBolusesFragmentSubcomponent {
    private TreatmentsExtendedBolusesFragmentSubcomponentImpl(
        TreatmentsExtendedBolusesFragment arg0) {

    }

    @Override
    public void inject(TreatmentsExtendedBolusesFragment arg0) {
      injectTreatmentsExtendedBolusesFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentsExtendedBolusesFragment injectTreatmentsExtendedBolusesFragment(
        TreatmentsExtendedBolusesFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      TreatmentsExtendedBolusesFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      TreatmentsExtendedBolusesFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TreatmentsExtendedBolusesFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TreatmentsExtendedBolusesFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      TreatmentsExtendedBolusesFragment_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      TreatmentsExtendedBolusesFragment_MembersInjector.injectUploadQueue(instance, DaggerAppComponent.this.uploadQueue());
      TreatmentsExtendedBolusesFragment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      TreatmentsExtendedBolusesFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class TreatmentsCareportalFragmentSubcomponentFactory implements FragmentsModule_ContributesTreatmentsCareportalFragment.TreatmentsCareportalFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTreatmentsCareportalFragment.TreatmentsCareportalFragmentSubcomponent create(
        TreatmentsCareportalFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentsCareportalFragmentSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentsCareportalFragmentSubcomponentImpl implements FragmentsModule_ContributesTreatmentsCareportalFragment.TreatmentsCareportalFragmentSubcomponent {
    private TreatmentsCareportalFragmentSubcomponentImpl(TreatmentsCareportalFragment arg0) {

    }

    @Override
    public void inject(TreatmentsCareportalFragment arg0) {
      injectTreatmentsCareportalFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentsCareportalFragment injectTreatmentsCareportalFragment(
        TreatmentsCareportalFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      TreatmentsCareportalFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TreatmentsCareportalFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      TreatmentsCareportalFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TreatmentsCareportalFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      TreatmentsCareportalFragment_MembersInjector.injectTranslator(instance, DaggerAppComponent.this.translatorProvider.get());
      TreatmentsCareportalFragment_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      TreatmentsCareportalFragment_MembersInjector.injectUploadQueue(instance, DaggerAppComponent.this.uploadQueue());
      TreatmentsCareportalFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      TreatmentsCareportalFragment_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      return instance;
    }
  }

  private final class TreatmentsProfileSwitchFragmentSubcomponentFactory implements FragmentsModule_ContributesTreatmentsProfileSwitchFragment.TreatmentsProfileSwitchFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTreatmentsProfileSwitchFragment.TreatmentsProfileSwitchFragmentSubcomponent create(
        TreatmentsProfileSwitchFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentsProfileSwitchFragmentSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentsProfileSwitchFragmentSubcomponentImpl implements FragmentsModule_ContributesTreatmentsProfileSwitchFragment.TreatmentsProfileSwitchFragmentSubcomponent {
    private TreatmentsProfileSwitchFragmentSubcomponentImpl(TreatmentsProfileSwitchFragment arg0) {

    }

    @Override
    public void inject(TreatmentsProfileSwitchFragment arg0) {
      injectTreatmentsProfileSwitchFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentsProfileSwitchFragment injectTreatmentsProfileSwitchFragment(
        TreatmentsProfileSwitchFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      TreatmentsProfileSwitchFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TreatmentsProfileSwitchFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      TreatmentsProfileSwitchFragment_MembersInjector.injectLocalProfilePlugin(instance, DaggerAppComponent.this.localProfilePluginProvider.get());
      TreatmentsProfileSwitchFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TreatmentsProfileSwitchFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      TreatmentsProfileSwitchFragment_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      TreatmentsProfileSwitchFragment_MembersInjector.injectUploadQueue(instance, DaggerAppComponent.this.uploadQueue());
      TreatmentsProfileSwitchFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      TreatmentsProfileSwitchFragment_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      return instance;
    }
  }

  private final class VirtualPumpFragmentSubcomponentFactory implements FragmentsModule_ContributesVirtualPumpFragment.VirtualPumpFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesVirtualPumpFragment.VirtualPumpFragmentSubcomponent create(
        VirtualPumpFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new VirtualPumpFragmentSubcomponentImpl(arg0);
    }
  }

  private final class VirtualPumpFragmentSubcomponentImpl implements FragmentsModule_ContributesVirtualPumpFragment.VirtualPumpFragmentSubcomponent {
    private VirtualPumpFragmentSubcomponentImpl(VirtualPumpFragment arg0) {

    }

    @Override
    public void inject(VirtualPumpFragment arg0) {
      injectVirtualPumpFragment(arg0);
    }

    @CanIgnoreReturnValue
    private VirtualPumpFragment injectVirtualPumpFragment(VirtualPumpFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      VirtualPumpFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      VirtualPumpFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      VirtualPumpFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      VirtualPumpFragment_MembersInjector.injectVirtualPumpPlugin(instance, DaggerAppComponent.this.virtualPumpPluginProvider.get());
      VirtualPumpFragment_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      return instance;
    }
  }

  private final class OpenHumansFragmentSubcomponentFactory implements FragmentsModule_ContributesOpenHumansFragment.OpenHumansFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesOpenHumansFragment.OpenHumansFragmentSubcomponent create(
        OpenHumansFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new OpenHumansFragmentSubcomponentImpl(arg0);
    }
  }

  private final class OpenHumansFragmentSubcomponentImpl implements FragmentsModule_ContributesOpenHumansFragment.OpenHumansFragmentSubcomponent {
    private OpenHumansFragmentSubcomponentImpl(OpenHumansFragment arg0) {

    }

    @Override
    public void inject(OpenHumansFragment arg0) {
      injectOpenHumansFragment(arg0);
    }

    @CanIgnoreReturnValue
    private OpenHumansFragment injectOpenHumansFragment(OpenHumansFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      OpenHumansFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      OpenHumansFragment_MembersInjector.injectOpenHumansUploader(instance, DaggerAppComponent.this.openHumansUploaderProvider.get());
      OpenHumansFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class CalibrationDialogSubcomponentFactory implements FragmentsModule_ContributesCalibrationDialog.CalibrationDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesCalibrationDialog.CalibrationDialogSubcomponent create(
        CalibrationDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new CalibrationDialogSubcomponentImpl(arg0);
    }
  }

  private final class CalibrationDialogSubcomponentImpl implements FragmentsModule_ContributesCalibrationDialog.CalibrationDialogSubcomponent {
    private CalibrationDialogSubcomponentImpl(CalibrationDialog arg0) {

    }

    @Override
    public void inject(CalibrationDialog arg0) {
      injectCalibrationDialog(arg0);
    }

    @CanIgnoreReturnValue
    private CalibrationDialog injectCalibrationDialog(CalibrationDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      CalibrationDialog_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      CalibrationDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CalibrationDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      CalibrationDialog_MembersInjector.injectXdripCalibrations(instance, DaggerAppComponent.this.xdripCalibrationsProvider.get());
      return instance;
    }
  }

  private final class CarbsDialogSubcomponentFactory implements FragmentsModule_ContributesCarbsDialog.CarbsDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesCarbsDialog.CarbsDialogSubcomponent create(CarbsDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new CarbsDialogSubcomponentImpl(arg0);
    }
  }

  private final class CarbsDialogSubcomponentImpl implements FragmentsModule_ContributesCarbsDialog.CarbsDialogSubcomponent {
    private CarbsDialogSubcomponentImpl(CarbsDialog arg0) {

    }

    @Override
    public void inject(CarbsDialog arg0) {
      injectCarbsDialog(arg0);
    }

    @CanIgnoreReturnValue
    private CarbsDialog injectCarbsDialog(CarbsDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      CarbsDialog_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      CarbsDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CarbsDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      CarbsDialog_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      CarbsDialog_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      CarbsDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      CarbsDialog_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      CarbsDialog_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      CarbsDialog_MembersInjector.injectCarbsGenerator(instance, DaggerAppComponent.this.carbsGeneratorProvider.get());
      return instance;
    }
  }

  private final class CareDialogSubcomponentFactory implements FragmentsModule_ContributesCareDialog.CareDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesCareDialog.CareDialogSubcomponent create(CareDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new CareDialogSubcomponentImpl(arg0);
    }
  }

  private final class CareDialogSubcomponentImpl implements FragmentsModule_ContributesCareDialog.CareDialogSubcomponent {
    private CareDialogSubcomponentImpl(CareDialog arg0) {

    }

    @Override
    public void inject(CareDialog arg0) {
      injectCareDialog(arg0);
    }

    @CanIgnoreReturnValue
    private CareDialog injectCareDialog(CareDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      CareDialog_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      CareDialog_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      CareDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CareDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      CareDialog_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      CareDialog_MembersInjector.injectTranslator(instance, DaggerAppComponent.this.translatorProvider.get());
      return instance;
    }
  }

  private final class EditActionDialogSubcomponentFactory implements FragmentsModule_ContributesEditActionDialog.EditActionDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesEditActionDialog.EditActionDialogSubcomponent create(
        EditActionDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new EditActionDialogSubcomponentImpl(arg0);
    }
  }

  private final class EditActionDialogSubcomponentImpl implements FragmentsModule_ContributesEditActionDialog.EditActionDialogSubcomponent {
    private EditActionDialogSubcomponentImpl(EditActionDialog arg0) {

    }

    @Override
    public void inject(EditActionDialog arg0) {
      injectEditActionDialog(arg0);
    }

    @CanIgnoreReturnValue
    private EditActionDialog injectEditActionDialog(EditActionDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      EditActionDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      EditActionDialog_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      return instance;
    }
  }

  private final class EditEventDialogSubcomponentFactory implements FragmentsModule_ContributesEditEventDialog.EditEventDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesEditEventDialog.EditEventDialogSubcomponent create(
        EditEventDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new EditEventDialogSubcomponentImpl(arg0);
    }
  }

  private final class EditEventDialogSubcomponentImpl implements FragmentsModule_ContributesEditEventDialog.EditEventDialogSubcomponent {
    private EditEventDialogSubcomponentImpl(EditEventDialog arg0) {

    }

    @Override
    public void inject(EditEventDialog arg0) {
      injectEditEventDialog(arg0);
    }

    @CanIgnoreReturnValue
    private EditEventDialog injectEditEventDialog(EditEventDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      EditEventDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      EditEventDialog_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      EditEventDialog_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      EditEventDialog_MembersInjector.injectAutomationPlugin(instance, DaggerAppComponent.this.automationPluginProvider.get());
      return instance;
    }
  }

  private final class EditTriggerDialogSubcomponentFactory implements FragmentsModule_ContributesEditTriggerDialog.EditTriggerDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesEditTriggerDialog.EditTriggerDialogSubcomponent create(
        EditTriggerDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new EditTriggerDialogSubcomponentImpl(arg0);
    }
  }

  private final class EditTriggerDialogSubcomponentImpl implements FragmentsModule_ContributesEditTriggerDialog.EditTriggerDialogSubcomponent {
    private EditTriggerDialogSubcomponentImpl(EditTriggerDialog arg0) {

    }

    @Override
    public void inject(EditTriggerDialog arg0) {
      injectEditTriggerDialog(arg0);
    }

    @CanIgnoreReturnValue
    private EditTriggerDialog injectEditTriggerDialog(EditTriggerDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      EditTriggerDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      EditTriggerDialog_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      EditTriggerDialog_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class EditQuickWizardDialogSubcomponentFactory implements FragmentsModule_ContributesEditQuickWizardDialog.EditQuickWizardDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesEditQuickWizardDialog.EditQuickWizardDialogSubcomponent create(
        EditQuickWizardDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new EditQuickWizardDialogSubcomponentImpl(arg0);
    }
  }

  private final class EditQuickWizardDialogSubcomponentImpl implements FragmentsModule_ContributesEditQuickWizardDialog.EditQuickWizardDialogSubcomponent {
    private EditQuickWizardDialogSubcomponentImpl(EditQuickWizardDialog arg0) {

    }

    @Override
    public void inject(EditQuickWizardDialog arg0) {
      injectEditQuickWizardDialog(arg0);
    }

    @CanIgnoreReturnValue
    private EditQuickWizardDialog injectEditQuickWizardDialog(EditQuickWizardDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      EditQuickWizardDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      EditQuickWizardDialog_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      EditQuickWizardDialog_MembersInjector.injectQuickWizard(instance, DaggerAppComponent.this.quickWizardProvider.get());
      EditQuickWizardDialog_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class ExtendedBolusDialogSubcomponentFactory implements FragmentsModule_ContributesExtendedBolusDialog.ExtendedBolusDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesExtendedBolusDialog.ExtendedBolusDialogSubcomponent create(
        ExtendedBolusDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new ExtendedBolusDialogSubcomponentImpl(arg0);
    }
  }

  private final class ExtendedBolusDialogSubcomponentImpl implements FragmentsModule_ContributesExtendedBolusDialog.ExtendedBolusDialogSubcomponent {
    private ExtendedBolusDialogSubcomponentImpl(ExtendedBolusDialog arg0) {

    }

    @Override
    public void inject(ExtendedBolusDialog arg0) {
      injectExtendedBolusDialog(arg0);
    }

    @CanIgnoreReturnValue
    private ExtendedBolusDialog injectExtendedBolusDialog(ExtendedBolusDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      ExtendedBolusDialog_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      ExtendedBolusDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ExtendedBolusDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      ExtendedBolusDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      ExtendedBolusDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class FillDialogSubcomponentFactory implements FragmentsModule_ContributesFillDialog.FillDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesFillDialog.FillDialogSubcomponent create(FillDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new FillDialogSubcomponentImpl(arg0);
    }
  }

  private final class FillDialogSubcomponentImpl implements FragmentsModule_ContributesFillDialog.FillDialogSubcomponent {
    private FillDialogSubcomponentImpl(FillDialog arg0) {

    }

    @Override
    public void inject(FillDialog arg0) {
      injectFillDialog(arg0);
    }

    @CanIgnoreReturnValue
    private FillDialog injectFillDialog(FillDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      FillDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      FillDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      FillDialog_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      FillDialog_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      FillDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      FillDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class ChooseActionDialogSubcomponentFactory implements FragmentsModule_ContributesChooseActionDialog.ChooseActionDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesChooseActionDialog.ChooseActionDialogSubcomponent create(
        ChooseActionDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new ChooseActionDialogSubcomponentImpl(arg0);
    }
  }

  private final class ChooseActionDialogSubcomponentImpl implements FragmentsModule_ContributesChooseActionDialog.ChooseActionDialogSubcomponent {
    private ChooseActionDialogSubcomponentImpl(ChooseActionDialog arg0) {

    }

    @Override
    public void inject(ChooseActionDialog arg0) {
      injectChooseActionDialog(arg0);
    }

    @CanIgnoreReturnValue
    private ChooseActionDialog injectChooseActionDialog(ChooseActionDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      ChooseActionDialog_MembersInjector.injectAutomationPlugin(instance, DaggerAppComponent.this.automationPluginProvider.get());
      ChooseActionDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ChooseActionDialog_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      return instance;
    }
  }

  private final class ChooseTriggerDialogSubcomponentFactory implements FragmentsModule_ContributesChooseTriggerDialog.ChooseTriggerDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesChooseTriggerDialog.ChooseTriggerDialogSubcomponent create(
        ChooseTriggerDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new ChooseTriggerDialogSubcomponentImpl(arg0);
    }
  }

  private final class ChooseTriggerDialogSubcomponentImpl implements FragmentsModule_ContributesChooseTriggerDialog.ChooseTriggerDialogSubcomponent {
    private ChooseTriggerDialogSubcomponentImpl(ChooseTriggerDialog arg0) {

    }

    @Override
    public void inject(ChooseTriggerDialog arg0) {
      injectChooseTriggerDialog(arg0);
    }

    @CanIgnoreReturnValue
    private ChooseTriggerDialog injectChooseTriggerDialog(ChooseTriggerDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      ChooseTriggerDialog_MembersInjector.injectAutomationPlugin(instance, DaggerAppComponent.this.automationPluginProvider.get());
      ChooseTriggerDialog_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      return instance;
    }
  }

  private final class InsulinDialogSubcomponentFactory implements FragmentsModule_ContributesInsulinDialog.InsulinDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesInsulinDialog.InsulinDialogSubcomponent create(
        InsulinDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new InsulinDialogSubcomponentImpl(arg0);
    }
  }

  private final class InsulinDialogSubcomponentImpl implements FragmentsModule_ContributesInsulinDialog.InsulinDialogSubcomponent {
    private InsulinDialogSubcomponentImpl(InsulinDialog arg0) {

    }

    @Override
    public void inject(InsulinDialog arg0) {
      injectInsulinDialog(arg0);
    }

    @CanIgnoreReturnValue
    private InsulinDialog injectInsulinDialog(InsulinDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      InsulinDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      InsulinDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      InsulinDialog_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      InsulinDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      InsulinDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      InsulinDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      InsulinDialog_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      InsulinDialog_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class UAMDialogSubcomponentFactory implements FragmentsModule_ContributesUAMDialog.UAMDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesUAMDialog.UAMDialogSubcomponent create(UAMDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new UAMDialogSubcomponentImpl(arg0);
    }
  }

  private final class UAMDialogSubcomponentImpl implements FragmentsModule_ContributesUAMDialog.UAMDialogSubcomponent {
    private UAMDialogSubcomponentImpl(UAMDialog arg0) {

    }

    @Override
    public void inject(UAMDialog arg0) {
      injectUAMDialog(arg0);
    }

    @CanIgnoreReturnValue
    private UAMDialog injectUAMDialog(UAMDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      UAMDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      UAMDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      UAMDialog_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      UAMDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      UAMDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      UAMDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      UAMDialog_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      UAMDialog_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class LoopDialogSubcomponentFactory implements FragmentsModule_ContributesLoopDialog.LoopDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesLoopDialog.LoopDialogSubcomponent create(LoopDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new LoopDialogSubcomponentImpl(arg0);
    }
  }

  private final class LoopDialogSubcomponentImpl implements FragmentsModule_ContributesLoopDialog.LoopDialogSubcomponent {
    private LoopDialogSubcomponentImpl(LoopDialog arg0) {

    }

    @Override
    public void inject(LoopDialog arg0) {
      injectLoopDialog(arg0);
    }

    @CanIgnoreReturnValue
    private LoopDialog injectLoopDialog(LoopDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      LoopDialog_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      LoopDialog_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      LoopDialog_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      LoopDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      LoopDialog_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      LoopDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      LoopDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      LoopDialog_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      LoopDialog_MembersInjector.injectObjectivesPlugin(instance, DaggerAppComponent.this.objectivesPluginProvider.get());
      LoopDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      LoopDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      LoopDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      LoopDialog_MembersInjector.injectConfigBuilderPlugin(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      return instance;
    }
  }

  private final class ObjectivesExamDialogSubcomponentFactory implements FragmentsModule_ContributesObjectivesExamDialog.ObjectivesExamDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesObjectivesExamDialog.ObjectivesExamDialogSubcomponent create(
        ObjectivesExamDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new ObjectivesExamDialogSubcomponentImpl(arg0);
    }
  }

  private final class ObjectivesExamDialogSubcomponentImpl implements FragmentsModule_ContributesObjectivesExamDialog.ObjectivesExamDialogSubcomponent {
    private ObjectivesExamDialogSubcomponentImpl(ObjectivesExamDialog arg0) {

    }

    @Override
    public void inject(ObjectivesExamDialog arg0) {
      injectObjectivesExamDialog(arg0);
    }

    @CanIgnoreReturnValue
    private ObjectivesExamDialog injectObjectivesExamDialog(ObjectivesExamDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      ObjectivesExamDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ObjectivesExamDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ObjectivesExamDialog_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class ProfileSwitchDialogSubcomponentFactory implements FragmentsModule_ContributesProfileSwitchDialog.ProfileSwitchDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesProfileSwitchDialog.ProfileSwitchDialogSubcomponent create(
        ProfileSwitchDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new ProfileSwitchDialogSubcomponentImpl(arg0);
    }
  }

  private final class ProfileSwitchDialogSubcomponentImpl implements FragmentsModule_ContributesProfileSwitchDialog.ProfileSwitchDialogSubcomponent {
    private ProfileSwitchDialogSubcomponentImpl(ProfileSwitchDialog arg0) {

    }

    @Override
    public void inject(ProfileSwitchDialog arg0) {
      injectProfileSwitchDialog(arg0);
    }

    @CanIgnoreReturnValue
    private ProfileSwitchDialog injectProfileSwitchDialog(ProfileSwitchDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      ProfileSwitchDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ProfileSwitchDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      ProfileSwitchDialog_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      ProfileSwitchDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class TempBasalDialogSubcomponentFactory implements FragmentsModule_ContributesTempBasalDialog.TempBasalDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTempBasalDialog.TempBasalDialogSubcomponent create(
        TempBasalDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new TempBasalDialogSubcomponentImpl(arg0);
    }
  }

  private final class TempBasalDialogSubcomponentImpl implements FragmentsModule_ContributesTempBasalDialog.TempBasalDialogSubcomponent {
    private TempBasalDialogSubcomponentImpl(TempBasalDialog arg0) {

    }

    @Override
    public void inject(TempBasalDialog arg0) {
      injectTempBasalDialog(arg0);
    }

    @CanIgnoreReturnValue
    private TempBasalDialog injectTempBasalDialog(TempBasalDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      TempBasalDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      TempBasalDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TempBasalDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      TempBasalDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      TempBasalDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      TempBasalDialog_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      return instance;
    }
  }

  private final class TempTargetDialogSubcomponentFactory implements FragmentsModule_ContributesTempTargetDialog.TempTargetDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTempTargetDialog.TempTargetDialogSubcomponent create(
        TempTargetDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new TempTargetDialogSubcomponentImpl(arg0);
    }
  }

  private final class TempTargetDialogSubcomponentImpl implements FragmentsModule_ContributesTempTargetDialog.TempTargetDialogSubcomponent {
    private TempTargetDialogSubcomponentImpl(TempTargetDialog arg0) {

    }

    @Override
    public void inject(TempTargetDialog arg0) {
      injectTempTargetDialog(arg0);
    }

    @CanIgnoreReturnValue
    private TempTargetDialog injectTempTargetDialog(TempTargetDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      TempTargetDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      TempTargetDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TempTargetDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      TempTargetDialog_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      TempTargetDialog_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      TempTargetDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      TempTargetDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      TempTargetDialog_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      return instance;
    }
  }

  private final class TreatmentDialogSubcomponentFactory implements FragmentsModule_ContributesTreatmentDialog.TreatmentDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesTreatmentDialog.TreatmentDialogSubcomponent create(
        TreatmentDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentDialogSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentDialogSubcomponentImpl implements FragmentsModule_ContributesTreatmentDialog.TreatmentDialogSubcomponent {
    private TreatmentDialogSubcomponentImpl(TreatmentDialog arg0) {

    }

    @Override
    public void inject(TreatmentDialog arg0) {
      injectTreatmentDialog(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentDialog injectTreatmentDialog(TreatmentDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DialogFragmentWithDate_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DialogFragmentWithDate_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DialogFragmentWithDate_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      TreatmentDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      TreatmentDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TreatmentDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      TreatmentDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      TreatmentDialog_MembersInjector.injectCtx(instance, DaggerAppComponent.this.application);
      TreatmentDialog_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class WizardDialogSubcomponentFactory implements FragmentsModule_ContributesWizardDialog.WizardDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesWizardDialog.WizardDialogSubcomponent create(
        WizardDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new WizardDialogSubcomponentImpl(arg0);
    }
  }

  private final class WizardDialogSubcomponentImpl implements FragmentsModule_ContributesWizardDialog.WizardDialogSubcomponent {
    private WizardDialogSubcomponentImpl(WizardDialog arg0) {

    }

    @Override
    public void inject(WizardDialog arg0) {
      injectWizardDialog(arg0);
    }

    @CanIgnoreReturnValue
    private WizardDialog injectWizardDialog(WizardDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      WizardDialog_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      WizardDialog_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      WizardDialog_MembersInjector.injectMainApp(instance, DaggerAppComponent.this.application);
      WizardDialog_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      WizardDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      WizardDialog_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      WizardDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      WizardDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      WizardDialog_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      WizardDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      WizardDialog_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class WizardInfoDialogSubcomponentFactory implements FragmentsModule_ContributesWizardInfoDialog.WizardInfoDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesWizardInfoDialog.WizardInfoDialogSubcomponent create(
        WizardInfoDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new WizardInfoDialogSubcomponentImpl(arg0);
    }
  }

  private final class WizardInfoDialogSubcomponentImpl implements FragmentsModule_ContributesWizardInfoDialog.WizardInfoDialogSubcomponent {
    private WizardInfoDialogSubcomponentImpl(WizardInfoDialog arg0) {

    }

    @Override
    public void inject(WizardInfoDialog arg0) {
      injectWizardInfoDialog(arg0);
    }

    @CanIgnoreReturnValue
    private WizardInfoDialog injectWizardInfoDialog(WizardInfoDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      WizardInfoDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      WizardInfoDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      return instance;
    }
  }

  private final class ExchangeAuthTokenDialogSubcomponentFactory implements FragmentsModule_ContributesExchangeAuthTokenDialot.ExchangeAuthTokenDialogSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesExchangeAuthTokenDialot.ExchangeAuthTokenDialogSubcomponent create(
        OpenHumansLoginActivity.ExchangeAuthTokenDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new ExchangeAuthTokenDialogSubcomponentImpl(arg0);
    }
  }

  private final class ExchangeAuthTokenDialogSubcomponentImpl implements FragmentsModule_ContributesExchangeAuthTokenDialot.ExchangeAuthTokenDialogSubcomponent {
    private ExchangeAuthTokenDialogSubcomponentImpl(
        OpenHumansLoginActivity.ExchangeAuthTokenDialog arg0) {

    }

    @Override
    public void inject(OpenHumansLoginActivity.ExchangeAuthTokenDialog arg0) {
      injectExchangeAuthTokenDialog(arg0);
    }

    @CanIgnoreReturnValue
    private OpenHumansLoginActivity.ExchangeAuthTokenDialog injectExchangeAuthTokenDialog(
        OpenHumansLoginActivity.ExchangeAuthTokenDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      OpenHumansLoginActivity_ExchangeAuthTokenDialog_MembersInjector.injectOpenHumansUploader(instance, DaggerAppComponent.this.openHumansUploaderProvider.get());
      return instance;
    }
  }

  private final class PasswordCheckSubcomponentFactory implements FragmentsModule_ContributesPasswordCheck.PasswordCheckSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesPasswordCheck.PasswordCheckSubcomponent create(
        PasswordCheck arg0) {
      Preconditions.checkNotNull(arg0);
      return new PasswordCheckSubcomponentImpl(arg0);
    }
  }

  private final class PasswordCheckSubcomponentImpl implements FragmentsModule_ContributesPasswordCheck.PasswordCheckSubcomponent {
    private PasswordCheckSubcomponentImpl(PasswordCheck arg0) {

    }

    @Override
    public void inject(PasswordCheck arg0) {
    }
  }

  private final class RileyLinkStatusGeneralFragmentSubcomponentFactory implements FragmentsModule_ContributesRileyLinkStatusGeneral.RileyLinkStatusGeneralFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesRileyLinkStatusGeneral.RileyLinkStatusGeneralFragmentSubcomponent create(
        RileyLinkStatusGeneralFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkStatusGeneralFragmentSubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkStatusGeneralFragmentSubcomponentImpl implements FragmentsModule_ContributesRileyLinkStatusGeneral.RileyLinkStatusGeneralFragmentSubcomponent {
    private RileyLinkStatusGeneralFragmentSubcomponentImpl(RileyLinkStatusGeneralFragment arg0) {

    }

    @Override
    public void inject(RileyLinkStatusGeneralFragment arg0) {
      injectRileyLinkStatusGeneralFragment(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkStatusGeneralFragment injectRileyLinkStatusGeneralFragment(
        RileyLinkStatusGeneralFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      RileyLinkStatusGeneralFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      RileyLinkStatusGeneralFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      RileyLinkStatusGeneralFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkStatusGeneralFragment_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RileyLinkStatusGeneralFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      RileyLinkStatusGeneralFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class RileyLinkStatusHistoryFragmentSubcomponentFactory implements FragmentsModule_ContributesRileyLinkStatusHistoryFragment.RileyLinkStatusHistoryFragmentSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesRileyLinkStatusHistoryFragment.RileyLinkStatusHistoryFragmentSubcomponent create(
        RileyLinkStatusHistoryFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkStatusHistoryFragmentSubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkStatusHistoryFragmentSubcomponentImpl implements FragmentsModule_ContributesRileyLinkStatusHistoryFragment.RileyLinkStatusHistoryFragmentSubcomponent {
    private RileyLinkStatusHistoryFragmentSubcomponentImpl(RileyLinkStatusHistoryFragment arg0) {

    }

    @Override
    public void inject(RileyLinkStatusHistoryFragment arg0) {
      injectRileyLinkStatusHistoryFragment(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkStatusHistoryFragment injectRileyLinkStatusHistoryFragment(
        RileyLinkStatusHistoryFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      RileyLinkStatusHistoryFragment_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      RileyLinkStatusHistoryFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      RileyLinkStatusHistoryFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class RileyLinkStatusDeviceMedtronicSubcomponentFactory implements FragmentsModule_ContributesRileyLinkStatusDeviceMedtronic.RileyLinkStatusDeviceMedtronicSubcomponent.Factory {
    @Override
    public FragmentsModule_ContributesRileyLinkStatusDeviceMedtronic.RileyLinkStatusDeviceMedtronicSubcomponent create(
        RileyLinkStatusDeviceMedtronic arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkStatusDeviceMedtronicSubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkStatusDeviceMedtronicSubcomponentImpl implements FragmentsModule_ContributesRileyLinkStatusDeviceMedtronic.RileyLinkStatusDeviceMedtronicSubcomponent {
    private RileyLinkStatusDeviceMedtronicSubcomponentImpl(RileyLinkStatusDeviceMedtronic arg0) {

    }

    @Override
    public void inject(RileyLinkStatusDeviceMedtronic arg0) {
      injectRileyLinkStatusDeviceMedtronic(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkStatusDeviceMedtronic injectRileyLinkStatusDeviceMedtronic(
        RileyLinkStatusDeviceMedtronic instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      RileyLinkStatusDeviceMedtronic_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      RileyLinkStatusDeviceMedtronic_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class AutoStartReceiverSubcomponentFactory implements ReceiversModule_ContributesAutoStartReceiver.AutoStartReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesAutoStartReceiver.AutoStartReceiverSubcomponent create(
        AutoStartReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new AutoStartReceiverSubcomponentImpl(arg0);
    }
  }

  private final class AutoStartReceiverSubcomponentImpl implements ReceiversModule_ContributesAutoStartReceiver.AutoStartReceiverSubcomponent {
    private AutoStartReceiverSubcomponentImpl(AutoStartReceiver arg0) {

    }

    @Override
    public void inject(AutoStartReceiver arg0) {
      injectAutoStartReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private AutoStartReceiver injectAutoStartReceiver(AutoStartReceiver instance) {
      AutoStartReceiver_MembersInjector.injectDummyServiceHelper(instance, DaggerAppComponent.this.dummyServiceHelperProvider.get());
      return instance;
    }
  }

  private final class BTReceiverSubcomponentFactory implements ReceiversModule_ContributesBTReceiver.BTReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesBTReceiver.BTReceiverSubcomponent create(BTReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new BTReceiverSubcomponentImpl(arg0);
    }
  }

  private final class BTReceiverSubcomponentImpl implements ReceiversModule_ContributesBTReceiver.BTReceiverSubcomponent {
    private BTReceiverSubcomponentImpl(BTReceiver arg0) {

    }

    @Override
    public void inject(BTReceiver arg0) {
      injectBTReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private BTReceiver injectBTReceiver(BTReceiver instance) {
      BTReceiver_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      return instance;
    }
  }

  private final class ChargingStateReceiverSubcomponentFactory implements ReceiversModule_ContributesChargingStateReceiver.ChargingStateReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesChargingStateReceiver.ChargingStateReceiverSubcomponent create(
        ChargingStateReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new ChargingStateReceiverSubcomponentImpl(arg0);
    }
  }

  private final class ChargingStateReceiverSubcomponentImpl implements ReceiversModule_ContributesChargingStateReceiver.ChargingStateReceiverSubcomponent {
    private ChargingStateReceiverSubcomponentImpl(ChargingStateReceiver arg0) {

    }

    @Override
    public void inject(ChargingStateReceiver arg0) {
      injectChargingStateReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private ChargingStateReceiver injectChargingStateReceiver(ChargingStateReceiver instance) {
      ChargingStateReceiver_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ChargingStateReceiver_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ChargingStateReceiver_MembersInjector.injectReceiverStatusStore(instance, DaggerAppComponent.this.receiverStatusStoreProvider.get());
      return instance;
    }
  }

  private final class DataReceiverSubcomponentFactory implements ReceiversModule_ContributesDataReceiver.DataReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesDataReceiver.DataReceiverSubcomponent create(
        DataReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new DataReceiverSubcomponentImpl(arg0);
    }
  }

  private final class DataReceiverSubcomponentImpl implements ReceiversModule_ContributesDataReceiver.DataReceiverSubcomponent {
    private DataReceiverSubcomponentImpl(DataReceiver arg0) {

    }

    @Override
    public void inject(DataReceiver arg0) {
      injectDataReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private DataReceiver injectDataReceiver(DataReceiver instance) {
      DataReceiver_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class KeepAliveReceiverSubcomponentFactory implements ReceiversModule_ContributesKeepAliveReceiver.KeepAliveReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesKeepAliveReceiver.KeepAliveReceiverSubcomponent create(
        KeepAliveReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new KeepAliveReceiverSubcomponentImpl(arg0);
    }
  }

  private final class KeepAliveReceiverSubcomponentImpl implements ReceiversModule_ContributesKeepAliveReceiver.KeepAliveReceiverSubcomponent {
    private KeepAliveReceiverSubcomponentImpl(KeepAliveReceiver arg0) {

    }

    @Override
    public void inject(KeepAliveReceiver arg0) {
      injectKeepAliveReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private KeepAliveReceiver injectKeepAliveReceiver(KeepAliveReceiver instance) {
      KeepAliveReceiver_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      KeepAliveReceiver_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      KeepAliveReceiver_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      KeepAliveReceiver_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      KeepAliveReceiver_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      KeepAliveReceiver_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      KeepAliveReceiver_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      KeepAliveReceiver_MembersInjector.injectLocalAlertUtils(instance, DaggerAppComponent.this.localAlertUtilsProvider.get());
      KeepAliveReceiver_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      KeepAliveReceiver_MembersInjector.injectReceiverStatusStore(instance, DaggerAppComponent.this.receiverStatusStoreProvider.get());
      KeepAliveReceiver_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      KeepAliveReceiver_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      KeepAliveReceiver_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class RileyLinkBluetoothStateReceiverSubcomponentFactory implements ReceiversModule_ContributesRileyLinkBluetoothStateReceiver.RileyLinkBluetoothStateReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesRileyLinkBluetoothStateReceiver.RileyLinkBluetoothStateReceiverSubcomponent create(
        RileyLinkBluetoothStateReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkBluetoothStateReceiverSubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkBluetoothStateReceiverSubcomponentImpl implements ReceiversModule_ContributesRileyLinkBluetoothStateReceiver.RileyLinkBluetoothStateReceiverSubcomponent {
    private RileyLinkBluetoothStateReceiverSubcomponentImpl(RileyLinkBluetoothStateReceiver arg0) {

    }

    @Override
    public void inject(RileyLinkBluetoothStateReceiver arg0) {
      injectRileyLinkBluetoothStateReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkBluetoothStateReceiver injectRileyLinkBluetoothStateReceiver(
        RileyLinkBluetoothStateReceiver instance) {
      RileyLinkBluetoothStateReceiver_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkBluetoothStateReceiver_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      RileyLinkBluetoothStateReceiver_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      return instance;
    }
  }

  private final class SmsReceiverSubcomponentFactory implements ReceiversModule_ContributesSmsReceiver.SmsReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesSmsReceiver.SmsReceiverSubcomponent create(SmsReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new SmsReceiverSubcomponentImpl(arg0);
    }
  }

  private final class SmsReceiverSubcomponentImpl implements ReceiversModule_ContributesSmsReceiver.SmsReceiverSubcomponent {
    private SmsReceiverSubcomponentImpl(SmsReceiver arg0) {

    }

    @Override
    public void inject(SmsReceiver arg0) {
      injectSmsReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private SmsReceiver injectSmsReceiver(SmsReceiver instance) {
      DataReceiver_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class TimeDateOrTZChangeReceiverSubcomponentFactory implements ReceiversModule_ContributesTimeDateOrTZChangeReceiver.TimeDateOrTZChangeReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesTimeDateOrTZChangeReceiver.TimeDateOrTZChangeReceiverSubcomponent create(
        TimeDateOrTZChangeReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new TimeDateOrTZChangeReceiverSubcomponentImpl(arg0);
    }
  }

  private final class TimeDateOrTZChangeReceiverSubcomponentImpl implements ReceiversModule_ContributesTimeDateOrTZChangeReceiver.TimeDateOrTZChangeReceiverSubcomponent {
    private TimeDateOrTZChangeReceiverSubcomponentImpl(TimeDateOrTZChangeReceiver arg0) {

    }

    @Override
    public void inject(TimeDateOrTZChangeReceiver arg0) {
      injectTimeDateOrTZChangeReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private TimeDateOrTZChangeReceiver injectTimeDateOrTZChangeReceiver(
        TimeDateOrTZChangeReceiver instance) {
      TimeDateOrTZChangeReceiver_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      TimeDateOrTZChangeReceiver_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CarbSuggestionReceiverSubcomponentFactory implements ReceiversModule_ContributesCarbSuggestionReceiver.CarbSuggestionReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesCarbSuggestionReceiver.CarbSuggestionReceiverSubcomponent create(
        CarbSuggestionReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new CarbSuggestionReceiverSubcomponentImpl(arg0);
    }
  }

  private final class CarbSuggestionReceiverSubcomponentImpl implements ReceiversModule_ContributesCarbSuggestionReceiver.CarbSuggestionReceiverSubcomponent {
    private CarbSuggestionReceiverSubcomponentImpl(CarbSuggestionReceiver arg0) {

    }

    @Override
    public void inject(CarbSuggestionReceiver arg0) {
      injectCarbSuggestionReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private CarbSuggestionReceiver injectCarbSuggestionReceiver(CarbSuggestionReceiver instance) {
      CarbSuggestionReceiver_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      return instance;
    }
  }

  private final class RileyLinkBroadcastReceiverSubcomponentFactory implements ReceiversModule_ContributesRileyLinkBroadcastReceiver.RileyLinkBroadcastReceiverSubcomponent.Factory {
    @Override
    public ReceiversModule_ContributesRileyLinkBroadcastReceiver.RileyLinkBroadcastReceiverSubcomponent create(
        RileyLinkBroadcastReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkBroadcastReceiverSubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkBroadcastReceiverSubcomponentImpl implements ReceiversModule_ContributesRileyLinkBroadcastReceiver.RileyLinkBroadcastReceiverSubcomponent {
    private RileyLinkBroadcastReceiverSubcomponentImpl(RileyLinkBroadcastReceiver arg0) {

    }

    @Override
    public void inject(RileyLinkBroadcastReceiver arg0) {
      injectRileyLinkBroadcastReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkBroadcastReceiver injectRileyLinkBroadcastReceiver(
        RileyLinkBroadcastReceiver instance) {
      RileyLinkBroadcastReceiver_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      RileyLinkBroadcastReceiver_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RileyLinkBroadcastReceiver_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkBroadcastReceiver_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RileyLinkBroadcastReceiver_MembersInjector.injectServiceTaskExecutor(instance, DaggerAppComponent.this.serviceTaskExecutorProvider.get());
      RileyLinkBroadcastReceiver_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class AlarmSoundServiceSubcomponentFactory implements ServicesModule_ContributesAlarmSoundService.AlarmSoundServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesAlarmSoundService.AlarmSoundServiceSubcomponent create(
        AlarmSoundService arg0) {
      Preconditions.checkNotNull(arg0);
      return new AlarmSoundServiceSubcomponentImpl(arg0);
    }
  }

  private final class AlarmSoundServiceSubcomponentImpl implements ServicesModule_ContributesAlarmSoundService.AlarmSoundServiceSubcomponent {
    private AlarmSoundServiceSubcomponentImpl(AlarmSoundService arg0) {

    }

    @Override
    public void inject(AlarmSoundService arg0) {
      injectAlarmSoundService(arg0);
    }

    @CanIgnoreReturnValue
    private AlarmSoundService injectAlarmSoundService(AlarmSoundService instance) {
      AlarmSoundService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      AlarmSoundService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      AlarmSoundService_MembersInjector.injectNotificationHolder(instance, DaggerAppComponent.this.notificationHolderProvider.get());
      AlarmSoundService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class DataServiceSubcomponentFactory implements ServicesModule_ContributesDataService.DataServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesDataService.DataServiceSubcomponent create(DataService arg0) {
      Preconditions.checkNotNull(arg0);
      return new DataServiceSubcomponentImpl(arg0);
    }
  }

  private final class DataServiceSubcomponentImpl implements ServicesModule_ContributesDataService.DataServiceSubcomponent {
    private DataServiceSubcomponentImpl(DataService arg0) {

    }

    @Override
    public void inject(DataService arg0) {
      injectDataService(arg0);
    }

    @CanIgnoreReturnValue
    private DataService injectDataService(DataService instance) {
      DataService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DataService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DataService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DataService_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      DataService_MembersInjector.injectSmsCommunicatorPlugin(instance, DaggerAppComponent.this.smsCommunicatorPluginProvider.get());
      DataService_MembersInjector.injectDexcomPlugin(instance, DaggerAppComponent.this.dexcomPluginProvider.get());
      DataService_MembersInjector.injectEversensePlugin(instance, DaggerAppComponent.this.eversensePluginProvider.get());
      DataService_MembersInjector.injectGlimpPlugin(instance, DaggerAppComponent.this.glimpPluginProvider.get());
      DataService_MembersInjector.injectMm640GPlugin(instance, DaggerAppComponent.this.mM640gPluginProvider.get());
      DataService_MembersInjector.injectNsClientSourcePlugin(instance, DaggerAppComponent.this.nSClientSourcePluginProvider.get());
      DataService_MembersInjector.injectPoctechPlugin(instance, DaggerAppComponent.this.poctechPluginProvider.get());
      DataService_MembersInjector.injectTomatoPlugin(instance, DaggerAppComponent.this.tomatoPluginProvider.get());
      DataService_MembersInjector.injectXdripPlugin(instance, DaggerAppComponent.this.xdripPluginProvider.get());
      DataService_MembersInjector.injectNsProfilePlugin(instance, DaggerAppComponent.this.nSProfilePluginProvider.get());
      DataService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DataService_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      DataService_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      return instance;
    }
  }

  private final class DismissNotificationServiceSubcomponentFactory implements ServicesModule_ContributesDismissNotificationService.DismissNotificationServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesDismissNotificationService.DismissNotificationServiceSubcomponent create(
        DismissNotificationService arg0) {
      Preconditions.checkNotNull(arg0);
      return new DismissNotificationServiceSubcomponentImpl(arg0);
    }
  }

  private final class DismissNotificationServiceSubcomponentImpl implements ServicesModule_ContributesDismissNotificationService.DismissNotificationServiceSubcomponent {
    private DismissNotificationServiceSubcomponentImpl(DismissNotificationService arg0) {

    }

    @Override
    public void inject(DismissNotificationService arg0) {
      injectDismissNotificationService(arg0);
    }

    @CanIgnoreReturnValue
    private DismissNotificationService injectDismissNotificationService(
        DismissNotificationService instance) {
      DismissNotificationService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      return instance;
    }
  }

  private final class DummyServiceSubcomponentFactory implements ServicesModule_ContributesDummyService.DummyServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesDummyService.DummyServiceSubcomponent create(
        DummyService arg0) {
      Preconditions.checkNotNull(arg0);
      return new DummyServiceSubcomponentImpl(arg0);
    }
  }

  private final class DummyServiceSubcomponentImpl implements ServicesModule_ContributesDummyService.DummyServiceSubcomponent {
    private DummyServiceSubcomponentImpl(DummyService arg0) {

    }

    @Override
    public void inject(DummyService arg0) {
      injectDummyService(arg0);
    }

    @CanIgnoreReturnValue
    private DummyService injectDummyService(DummyService instance) {
      DummyService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DummyService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DummyService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      DummyService_MembersInjector.injectNotificationHolder(instance, DaggerAppComponent.this.notificationHolderProvider.get());
      return instance;
    }
  }

  private final class LocationServiceSubcomponentFactory implements ServicesModule_ContributesLocationService.LocationServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesLocationService.LocationServiceSubcomponent create(
        LocationService arg0) {
      Preconditions.checkNotNull(arg0);
      return new LocationServiceSubcomponentImpl(arg0);
    }
  }

  private final class LocationServiceSubcomponentImpl implements ServicesModule_ContributesLocationService.LocationServiceSubcomponent {
    private LocationServiceSubcomponentImpl(LocationService arg0) {

    }

    @Override
    public void inject(LocationService arg0) {
      injectLocationService(arg0);
    }

    @CanIgnoreReturnValue
    private LocationService injectLocationService(LocationService instance) {
      LocationService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      LocationService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      LocationService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      LocationService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      LocationService_MembersInjector.injectNotificationHolder(instance, DaggerAppComponent.this.notificationHolderProvider.get());
      LocationService_MembersInjector.injectLastLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      return instance;
    }
  }

  private final class NSClientServiceSubcomponentFactory implements ServicesModule_ContributesNSClientService.NSClientServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesNSClientService.NSClientServiceSubcomponent create(
        NSClientService arg0) {
      Preconditions.checkNotNull(arg0);
      return new NSClientServiceSubcomponentImpl(arg0);
    }
  }

  private final class NSClientServiceSubcomponentImpl implements ServicesModule_ContributesNSClientService.NSClientServiceSubcomponent {
    private NSClientServiceSubcomponentImpl(NSClientService arg0) {

    }

    @Override
    public void inject(NSClientService arg0) {
      injectNSClientService(arg0);
    }

    @CanIgnoreReturnValue
    private NSClientService injectNSClientService(NSClientService instance) {
      NSClientService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      NSClientService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      NSClientService_MembersInjector.injectNsSettingsStatus(instance, DaggerAppComponent.this.nSSettingsStatusProvider.get());
      NSClientService_MembersInjector.injectNsDeviceStatus(instance, DaggerAppComponent.this.nSDeviceStatusProvider.get());
      NSClientService_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      NSClientService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      NSClientService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      NSClientService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      NSClientService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      NSClientService_MembersInjector.injectNsClientPlugin(instance, DaggerAppComponent.this.nSClientPluginProvider.get());
      NSClientService_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      NSClientService_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      NSClientService_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      NSClientService_MembersInjector.injectUploadQueue(instance, DaggerAppComponent.this.uploadQueue());
      return instance;
    }
  }

  private final class WatchUpdaterServiceSubcomponentFactory implements ServicesModule_ContributesWatchUpdaterService.WatchUpdaterServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesWatchUpdaterService.WatchUpdaterServiceSubcomponent create(
        WatchUpdaterService arg0) {
      Preconditions.checkNotNull(arg0);
      return new WatchUpdaterServiceSubcomponentImpl(arg0);
    }
  }

  private final class WatchUpdaterServiceSubcomponentImpl implements ServicesModule_ContributesWatchUpdaterService.WatchUpdaterServiceSubcomponent {
    private WatchUpdaterServiceSubcomponentImpl(WatchUpdaterService arg0) {

    }

    @Override
    public void inject(WatchUpdaterService arg0) {
      injectWatchUpdaterService(arg0);
    }

    @CanIgnoreReturnValue
    private WatchUpdaterService injectWatchUpdaterService(WatchUpdaterService instance) {
      WatchUpdaterService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      WatchUpdaterService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      WatchUpdaterService_MembersInjector.injectWearPlugin(instance, DaggerAppComponent.this.wearPluginProvider.get());
      WatchUpdaterService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      WatchUpdaterService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      WatchUpdaterService_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      WatchUpdaterService_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      WatchUpdaterService_MembersInjector.injectNsDeviceStatus(instance, DaggerAppComponent.this.nSDeviceStatusProvider.get());
      WatchUpdaterService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      WatchUpdaterService_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      WatchUpdaterService_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      WatchUpdaterService_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      WatchUpdaterService_MembersInjector.injectActionStringHandler(instance, DaggerAppComponent.this.actionStringHandlerProvider.get());
      WatchUpdaterService_MembersInjector.injectReceiverStatusStore(instance, DaggerAppComponent.this.receiverStatusStoreProvider.get());
      WatchUpdaterService_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class InsightAlertServiceSubcomponentFactory implements ServicesModule_ContributesInsightAlertService.InsightAlertServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesInsightAlertService.InsightAlertServiceSubcomponent create(
        InsightAlertService arg0) {
      Preconditions.checkNotNull(arg0);
      return new InsightAlertServiceSubcomponentImpl(arg0);
    }
  }

  private final class InsightAlertServiceSubcomponentImpl implements ServicesModule_ContributesInsightAlertService.InsightAlertServiceSubcomponent {
    private InsightAlertServiceSubcomponentImpl(InsightAlertService arg0) {

    }

    @Override
    public void inject(InsightAlertService arg0) {
      injectInsightAlertService(arg0);
    }

    @CanIgnoreReturnValue
    private InsightAlertService injectInsightAlertService(InsightAlertService instance) {
      InsightAlertService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      InsightAlertService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      InsightAlertService_MembersInjector.injectAlertUtils(instance, DaggerAppComponent.this.alertUtilsProvider.get());
      return instance;
    }
  }

  private final class InsightConnectionServiceSubcomponentFactory implements ServicesModule_ContributesInsightConnectionService.InsightConnectionServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesInsightConnectionService.InsightConnectionServiceSubcomponent create(
        InsightConnectionService arg0) {
      Preconditions.checkNotNull(arg0);
      return new InsightConnectionServiceSubcomponentImpl(arg0);
    }
  }

  private final class InsightConnectionServiceSubcomponentImpl implements ServicesModule_ContributesInsightConnectionService.InsightConnectionServiceSubcomponent {
    private InsightConnectionServiceSubcomponentImpl(InsightConnectionService arg0) {

    }

    @Override
    public void inject(InsightConnectionService arg0) {
      injectInsightConnectionService(arg0);
    }

    @CanIgnoreReturnValue
    private InsightConnectionService injectInsightConnectionService(
        InsightConnectionService instance) {
      InsightConnectionService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      InsightConnectionService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class RileyLinkServiceSubcomponentFactory implements ServicesModule_ContributesRileyLinkService.RileyLinkServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesRileyLinkService.RileyLinkServiceSubcomponent create(
        RileyLinkService arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkServiceSubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkServiceSubcomponentImpl implements ServicesModule_ContributesRileyLinkService.RileyLinkServiceSubcomponent {
    private RileyLinkServiceSubcomponentImpl(RileyLinkService arg0) {

    }

    @Override
    public void inject(RileyLinkService arg0) {
      injectRileyLinkService(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkService injectRileyLinkService(RileyLinkService instance) {
      RileyLinkService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RileyLinkService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      RileyLinkService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      RileyLinkService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      RileyLinkService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RileyLinkService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkBLE(instance, DaggerAppComponent.this.rileyLinkBLEProvider.get());
      RileyLinkService_MembersInjector.injectRfspy(instance, DaggerAppComponent.this.rFSpyProvider.get());
      return instance;
    }
  }

  private final class RileyLinkMedtronicServiceSubcomponentFactory implements ServicesModule_ContributesRileyLinkMedtronicService.RileyLinkMedtronicServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesRileyLinkMedtronicService.RileyLinkMedtronicServiceSubcomponent create(
        RileyLinkMedtronicService arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkMedtronicServiceSubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkMedtronicServiceSubcomponentImpl implements ServicesModule_ContributesRileyLinkMedtronicService.RileyLinkMedtronicServiceSubcomponent {
    private RileyLinkMedtronicServiceSubcomponentImpl(RileyLinkMedtronicService arg0) {

    }

    @Override
    public void inject(RileyLinkMedtronicService arg0) {
      injectRileyLinkMedtronicService(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkMedtronicService injectRileyLinkMedtronicService(
        RileyLinkMedtronicService instance) {
      RileyLinkService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RileyLinkService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      RileyLinkService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      RileyLinkService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      RileyLinkService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RileyLinkService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkBLE(instance, DaggerAppComponent.this.rileyLinkBLEProvider.get());
      RileyLinkService_MembersInjector.injectRfspy(instance, DaggerAppComponent.this.rFSpyProvider.get());
      RileyLinkMedtronicService_MembersInjector.injectMedtronicPumpPlugin(instance, DaggerAppComponent.this.medtronicPumpPluginProvider.get());
      RileyLinkMedtronicService_MembersInjector.injectMedtronicUtil(instance, DaggerAppComponent.this.medtronicUtilProvider.get());
      RileyLinkMedtronicService_MembersInjector.injectMedtronicUIPostprocessor(instance, DaggerAppComponent.this.medtronicUIPostprocessorProvider.get());
      RileyLinkMedtronicService_MembersInjector.injectMedtronicPumpStatus(instance, DaggerAppComponent.this.medtronicPumpStatusProvider.get());
      RileyLinkMedtronicService_MembersInjector.injectRfSpy(instance, DaggerAppComponent.this.rFSpyProvider.get());
      RileyLinkMedtronicService_MembersInjector.injectMedtronicCommunicationManager(instance, DaggerAppComponent.this.medtronicCommunicationManagerProvider.get());
      return instance;
    }
  }

  private final class RileyLinkOmnipodServiceSubcomponentFactory implements ServicesModule_ContributesRileyLinkOmnipodService.RileyLinkOmnipodServiceSubcomponent.Factory {
    @Override
    public ServicesModule_ContributesRileyLinkOmnipodService.RileyLinkOmnipodServiceSubcomponent create(
        RileyLinkOmnipodService arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkOmnipodServiceSubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkOmnipodServiceSubcomponentImpl implements ServicesModule_ContributesRileyLinkOmnipodService.RileyLinkOmnipodServiceSubcomponent {
    private RileyLinkOmnipodServiceSubcomponentImpl(RileyLinkOmnipodService arg0) {

    }

    @Override
    public void inject(RileyLinkOmnipodService arg0) {
      injectRileyLinkOmnipodService(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkOmnipodService injectRileyLinkOmnipodService(
        RileyLinkOmnipodService instance) {
      RileyLinkService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RileyLinkService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      RileyLinkService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      RileyLinkService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      RileyLinkService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RileyLinkService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      RileyLinkService_MembersInjector.injectRileyLinkBLE(instance, DaggerAppComponent.this.rileyLinkBLEProvider.get());
      RileyLinkService_MembersInjector.injectRfspy(instance, DaggerAppComponent.this.rFSpyProvider.get());
      RileyLinkOmnipodService_MembersInjector.injectOmnipodPumpPlugin(instance, DaggerAppComponent.this.omnipodPumpPluginProvider.get());
      RileyLinkOmnipodService_MembersInjector.injectAapsOmnipodUtil(instance, DaggerAppComponent.this.aapsOmnipodUtilProvider.get());
      RileyLinkOmnipodService_MembersInjector.injectPodStateManager(instance, DaggerAppComponent.this.podStateManager());
      RileyLinkOmnipodService_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      RileyLinkOmnipodService_MembersInjector.injectAapsOmnipodManager(instance, DaggerAppComponent.this.aapsOmnipodManagerProvider.get());
      RileyLinkOmnipodService_MembersInjector.injectOmnipodRileyLinkCommunicationManager(instance, DaggerAppComponent.this.omnipodRileyLinkCommunicationManagerProvider.get());
      return instance;
    }
  }

  private final class AutomationEventSubcomponentFactory implements AutomationModule_AutomationEventInjector.AutomationEventSubcomponent.Factory {
    @Override
    public AutomationModule_AutomationEventInjector.AutomationEventSubcomponent create(
        AutomationEvent arg0) {
      Preconditions.checkNotNull(arg0);
      return new AutomationEventSubcomponentImpl(arg0);
    }
  }

  private final class AutomationEventSubcomponentImpl implements AutomationModule_AutomationEventInjector.AutomationEventSubcomponent {
    private AutomationEventSubcomponentImpl(AutomationEvent arg0) {

    }

    @Override
    public void inject(AutomationEvent arg0) {
      injectAutomationEvent(arg0);
    }

    @CanIgnoreReturnValue
    private AutomationEvent injectAutomationEvent(AutomationEvent instance) {
      AutomationEvent_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class TriggerSubcomponentFactory implements AutomationModule_TriggerInjector.TriggerSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerInjector.TriggerSubcomponent create(Trigger arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerSubcomponentImpl(arg0);
    }
  }

  private final class TriggerSubcomponentImpl implements AutomationModule_TriggerInjector.TriggerSubcomponent {
    private TriggerSubcomponentImpl(Trigger arg0) {

    }

    @Override
    public void inject(Trigger arg0) {
      injectTrigger(arg0);
    }

    @CanIgnoreReturnValue
    private Trigger injectTrigger(Trigger instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerAutosensValueSubcomponentFactory implements AutomationModule_TriggerAutosensValueInjector.TriggerAutosensValueSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerAutosensValueInjector.TriggerAutosensValueSubcomponent create(
        TriggerAutosensValue arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerAutosensValueSubcomponentImpl(arg0);
    }
  }

  private final class TriggerAutosensValueSubcomponentImpl implements AutomationModule_TriggerAutosensValueInjector.TriggerAutosensValueSubcomponent {
    private TriggerAutosensValueSubcomponentImpl(TriggerAutosensValue arg0) {

    }

    @Override
    public void inject(TriggerAutosensValue arg0) {
      injectTriggerAutosensValue(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerAutosensValue injectTriggerAutosensValue(TriggerAutosensValue instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerBgSubcomponentFactory implements AutomationModule_TriggerBgInjector.TriggerBgSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerBgInjector.TriggerBgSubcomponent create(TriggerBg arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerBgSubcomponentImpl(arg0);
    }
  }

  private final class TriggerBgSubcomponentImpl implements AutomationModule_TriggerBgInjector.TriggerBgSubcomponent {
    private TriggerBgSubcomponentImpl(TriggerBg arg0) {

    }

    @Override
    public void inject(TriggerBg arg0) {
      injectTriggerBg(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerBg injectTriggerBg(TriggerBg instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerBolusAgoSubcomponentFactory implements AutomationModule_TriggerBolusAgoInjector.TriggerBolusAgoSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerBolusAgoInjector.TriggerBolusAgoSubcomponent create(
        TriggerBolusAgo arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerBolusAgoSubcomponentImpl(arg0);
    }
  }

  private final class TriggerBolusAgoSubcomponentImpl implements AutomationModule_TriggerBolusAgoInjector.TriggerBolusAgoSubcomponent {
    private TriggerBolusAgoSubcomponentImpl(TriggerBolusAgo arg0) {

    }

    @Override
    public void inject(TriggerBolusAgo arg0) {
      injectTriggerBolusAgo(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerBolusAgo injectTriggerBolusAgo(TriggerBolusAgo instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerCOBSubcomponentFactory implements AutomationModule_TriggerCOBInjector.TriggerCOBSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerCOBInjector.TriggerCOBSubcomponent create(TriggerCOB arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerCOBSubcomponentImpl(arg0);
    }
  }

  private final class TriggerCOBSubcomponentImpl implements AutomationModule_TriggerCOBInjector.TriggerCOBSubcomponent {
    private TriggerCOBSubcomponentImpl(TriggerCOB arg0) {

    }

    @Override
    public void inject(TriggerCOB arg0) {
      injectTriggerCOB(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerCOB injectTriggerCOB(TriggerCOB instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerConnectorSubcomponentFactory implements AutomationModule_TriggerConnectorInjector.TriggerConnectorSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerConnectorInjector.TriggerConnectorSubcomponent create(
        TriggerConnector arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerConnectorSubcomponentImpl(arg0);
    }
  }

  private final class TriggerConnectorSubcomponentImpl implements AutomationModule_TriggerConnectorInjector.TriggerConnectorSubcomponent {
    private TriggerConnectorSubcomponentImpl(TriggerConnector arg0) {

    }

    @Override
    public void inject(TriggerConnector arg0) {
      injectTriggerConnector(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerConnector injectTriggerConnector(TriggerConnector instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerDeltaSubcomponentFactory implements AutomationModule_TriggerDeltaInjector.TriggerDeltaSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerDeltaInjector.TriggerDeltaSubcomponent create(
        TriggerDelta arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerDeltaSubcomponentImpl(arg0);
    }
  }

  private final class TriggerDeltaSubcomponentImpl implements AutomationModule_TriggerDeltaInjector.TriggerDeltaSubcomponent {
    private TriggerDeltaSubcomponentImpl(TriggerDelta arg0) {

    }

    @Override
    public void inject(TriggerDelta arg0) {
      injectTriggerDelta(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerDelta injectTriggerDelta(TriggerDelta instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerDummySubcomponentFactory implements AutomationModule_TriggerDummyInjector.TriggerDummySubcomponent.Factory {
    @Override
    public AutomationModule_TriggerDummyInjector.TriggerDummySubcomponent create(
        TriggerDummy arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerDummySubcomponentImpl(arg0);
    }
  }

  private final class TriggerDummySubcomponentImpl implements AutomationModule_TriggerDummyInjector.TriggerDummySubcomponent {
    private TriggerDummySubcomponentImpl(TriggerDummy arg0) {

    }

    @Override
    public void inject(TriggerDummy arg0) {
      injectTriggerDummy(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerDummy injectTriggerDummy(TriggerDummy instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerIobSubcomponentFactory implements AutomationModule_TriggerIobInjector.TriggerIobSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerIobInjector.TriggerIobSubcomponent create(TriggerIob arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerIobSubcomponentImpl(arg0);
    }
  }

  private final class TriggerIobSubcomponentImpl implements AutomationModule_TriggerIobInjector.TriggerIobSubcomponent {
    private TriggerIobSubcomponentImpl(TriggerIob arg0) {

    }

    @Override
    public void inject(TriggerIob arg0) {
      injectTriggerIob(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerIob injectTriggerIob(TriggerIob instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerLocationSubcomponentFactory implements AutomationModule_TriggerLocationInjector.TriggerLocationSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerLocationInjector.TriggerLocationSubcomponent create(
        TriggerLocation arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerLocationSubcomponentImpl(arg0);
    }
  }

  private final class TriggerLocationSubcomponentImpl implements AutomationModule_TriggerLocationInjector.TriggerLocationSubcomponent {
    private TriggerLocationSubcomponentImpl(TriggerLocation arg0) {

    }

    @Override
    public void inject(TriggerLocation arg0) {
      injectTriggerLocation(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerLocation injectTriggerLocation(TriggerLocation instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerProfilePercentSubcomponentFactory implements AutomationModule_TriggerProfilePercentInjector.TriggerProfilePercentSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerProfilePercentInjector.TriggerProfilePercentSubcomponent create(
        TriggerProfilePercent arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerProfilePercentSubcomponentImpl(arg0);
    }
  }

  private final class TriggerProfilePercentSubcomponentImpl implements AutomationModule_TriggerProfilePercentInjector.TriggerProfilePercentSubcomponent {
    private TriggerProfilePercentSubcomponentImpl(TriggerProfilePercent arg0) {

    }

    @Override
    public void inject(TriggerProfilePercent arg0) {
      injectTriggerProfilePercent(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerProfilePercent injectTriggerProfilePercent(TriggerProfilePercent instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerPumpLastConnectionSubcomponentFactory implements AutomationModule_TriggerPumpLastConnectionInjector.TriggerPumpLastConnectionSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerPumpLastConnectionInjector.TriggerPumpLastConnectionSubcomponent create(
        TriggerPumpLastConnection arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerPumpLastConnectionSubcomponentImpl(arg0);
    }
  }

  private final class TriggerPumpLastConnectionSubcomponentImpl implements AutomationModule_TriggerPumpLastConnectionInjector.TriggerPumpLastConnectionSubcomponent {
    private TriggerPumpLastConnectionSubcomponentImpl(TriggerPumpLastConnection arg0) {

    }

    @Override
    public void inject(TriggerPumpLastConnection arg0) {
      injectTriggerPumpLastConnection(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerPumpLastConnection injectTriggerPumpLastConnection(
        TriggerPumpLastConnection instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerBTDeviceSubcomponentFactory implements AutomationModule_TriggerBTDeviceInjector.TriggerBTDeviceSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerBTDeviceInjector.TriggerBTDeviceSubcomponent create(
        TriggerBTDevice arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerBTDeviceSubcomponentImpl(arg0);
    }
  }

  private final class TriggerBTDeviceSubcomponentImpl implements AutomationModule_TriggerBTDeviceInjector.TriggerBTDeviceSubcomponent {
    private TriggerBTDeviceSubcomponentImpl(TriggerBTDevice arg0) {

    }

    @Override
    public void inject(TriggerBTDevice arg0) {
      injectTriggerBTDevice(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerBTDevice injectTriggerBTDevice(TriggerBTDevice instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      TriggerBTDevice_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      TriggerBTDevice_MembersInjector.injectAutomationPlugin(instance, DaggerAppComponent.this.automationPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerRecurringTimeSubcomponentFactory implements AutomationModule_TriggerRecurringTimeInjector.TriggerRecurringTimeSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerRecurringTimeInjector.TriggerRecurringTimeSubcomponent create(
        TriggerRecurringTime arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerRecurringTimeSubcomponentImpl(arg0);
    }
  }

  private final class TriggerRecurringTimeSubcomponentImpl implements AutomationModule_TriggerRecurringTimeInjector.TriggerRecurringTimeSubcomponent {
    private TriggerRecurringTimeSubcomponentImpl(TriggerRecurringTime arg0) {

    }

    @Override
    public void inject(TriggerRecurringTime arg0) {
      injectTriggerRecurringTime(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerRecurringTime injectTriggerRecurringTime(TriggerRecurringTime instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      TriggerRecurringTime_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class TriggerTempTargetSubcomponentFactory implements AutomationModule_TriggerTempTargetInjector.TriggerTempTargetSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerTempTargetInjector.TriggerTempTargetSubcomponent create(
        TriggerTempTarget arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerTempTargetSubcomponentImpl(arg0);
    }
  }

  private final class TriggerTempTargetSubcomponentImpl implements AutomationModule_TriggerTempTargetInjector.TriggerTempTargetSubcomponent {
    private TriggerTempTargetSubcomponentImpl(TriggerTempTarget arg0) {

    }

    @Override
    public void inject(TriggerTempTarget arg0) {
      injectTriggerTempTarget(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerTempTarget injectTriggerTempTarget(TriggerTempTarget instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class TriggerTimeSubcomponentFactory implements AutomationModule_TriggerTime.TriggerTimeSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerTime.TriggerTimeSubcomponent create(TriggerTime arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerTimeSubcomponentImpl(arg0);
    }
  }

  private final class TriggerTimeSubcomponentImpl implements AutomationModule_TriggerTime.TriggerTimeSubcomponent {
    private TriggerTimeSubcomponentImpl(TriggerTime arg0) {

    }

    @Override
    public void inject(TriggerTime arg0) {
      injectTriggerTime(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerTime injectTriggerTime(TriggerTime instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      TriggerTime_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class TriggerTimeRangeSubcomponentFactory implements AutomationModule_TriggerTimeRangeInjector.TriggerTimeRangeSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerTimeRangeInjector.TriggerTimeRangeSubcomponent create(
        TriggerTimeRange arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerTimeRangeSubcomponentImpl(arg0);
    }
  }

  private final class TriggerTimeRangeSubcomponentImpl implements AutomationModule_TriggerTimeRangeInjector.TriggerTimeRangeSubcomponent {
    private TriggerTimeRangeSubcomponentImpl(TriggerTimeRange arg0) {

    }

    @Override
    public void inject(TriggerTimeRange arg0) {
      injectTriggerTimeRange(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerTimeRange injectTriggerTimeRange(TriggerTimeRange instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      TriggerTimeRange_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class TriggerWifiSsidSubcomponentFactory implements AutomationModule_TriggerWifiSsidInjector.TriggerWifiSsidSubcomponent.Factory {
    @Override
    public AutomationModule_TriggerWifiSsidInjector.TriggerWifiSsidSubcomponent create(
        TriggerWifiSsid arg0) {
      Preconditions.checkNotNull(arg0);
      return new TriggerWifiSsidSubcomponentImpl(arg0);
    }
  }

  private final class TriggerWifiSsidSubcomponentImpl implements AutomationModule_TriggerWifiSsidInjector.TriggerWifiSsidSubcomponent {
    private TriggerWifiSsidSubcomponentImpl(TriggerWifiSsid arg0) {

    }

    @Override
    public void inject(TriggerWifiSsid arg0) {
      injectTriggerWifiSsid(arg0);
    }

    @CanIgnoreReturnValue
    private TriggerWifiSsid injectTriggerWifiSsid(TriggerWifiSsid instance) {
      Trigger_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Trigger_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Trigger_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Trigger_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Trigger_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Trigger_MembersInjector.injectLocationDataContainer(instance, DaggerAppComponent.this.lastLocationDataContainerProvider.get());
      Trigger_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Trigger_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Trigger_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      TriggerWifiSsid_MembersInjector.injectReceiverStatusStore(instance, DaggerAppComponent.this.receiverStatusStoreProvider.get());
      return instance;
    }
  }

  private final class ActionSubcomponentFactory implements AutomationModule_ActionInjector.ActionSubcomponent.Factory {
    @Override
    public AutomationModule_ActionInjector.ActionSubcomponent create(Action arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionSubcomponentImpl(arg0);
    }
  }

  private final class ActionSubcomponentImpl implements AutomationModule_ActionInjector.ActionSubcomponent {
    private ActionSubcomponentImpl(Action arg0) {

    }

    @Override
    public void inject(Action arg0) {
      injectAction(arg0);
    }

    @CanIgnoreReturnValue
    private Action injectAction(Action instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class ActionLoopDisableSubcomponentFactory implements AutomationModule_ActionLoopDisableInjector.ActionLoopDisableSubcomponent.Factory {
    @Override
    public AutomationModule_ActionLoopDisableInjector.ActionLoopDisableSubcomponent create(
        ActionLoopDisable arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionLoopDisableSubcomponentImpl(arg0);
    }
  }

  private final class ActionLoopDisableSubcomponentImpl implements AutomationModule_ActionLoopDisableInjector.ActionLoopDisableSubcomponent {
    private ActionLoopDisableSubcomponentImpl(ActionLoopDisable arg0) {

    }

    @Override
    public void inject(ActionLoopDisable arg0) {
      injectActionLoopDisable(arg0);
    }

    @CanIgnoreReturnValue
    private ActionLoopDisable injectActionLoopDisable(ActionLoopDisable instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionLoopDisable_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      ActionLoopDisable_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionLoopDisable_MembersInjector.injectConfigBuilderPlugin(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      ActionLoopDisable_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      ActionLoopDisable_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      return instance;
    }
  }

  private final class ActionLoopEnableSubcomponentFactory implements AutomationModule_ActionLoopEnableInjector.ActionLoopEnableSubcomponent.Factory {
    @Override
    public AutomationModule_ActionLoopEnableInjector.ActionLoopEnableSubcomponent create(
        ActionLoopEnable arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionLoopEnableSubcomponentImpl(arg0);
    }
  }

  private final class ActionLoopEnableSubcomponentImpl implements AutomationModule_ActionLoopEnableInjector.ActionLoopEnableSubcomponent {
    private ActionLoopEnableSubcomponentImpl(ActionLoopEnable arg0) {

    }

    @Override
    public void inject(ActionLoopEnable arg0) {
      injectActionLoopEnable(arg0);
    }

    @CanIgnoreReturnValue
    private ActionLoopEnable injectActionLoopEnable(ActionLoopEnable instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionLoopEnable_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionLoopEnable_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      ActionLoopEnable_MembersInjector.injectConfigBuilderPlugin(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      ActionLoopEnable_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      return instance;
    }
  }

  private final class ActionLoopResumeSubcomponentFactory implements AutomationModule_ActionLoopResumeInjector.ActionLoopResumeSubcomponent.Factory {
    @Override
    public AutomationModule_ActionLoopResumeInjector.ActionLoopResumeSubcomponent create(
        ActionLoopResume arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionLoopResumeSubcomponentImpl(arg0);
    }
  }

  private final class ActionLoopResumeSubcomponentImpl implements AutomationModule_ActionLoopResumeInjector.ActionLoopResumeSubcomponent {
    private ActionLoopResumeSubcomponentImpl(ActionLoopResume arg0) {

    }

    @Override
    public void inject(ActionLoopResume arg0) {
      injectActionLoopResume(arg0);
    }

    @CanIgnoreReturnValue
    private ActionLoopResume injectActionLoopResume(ActionLoopResume instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionLoopResume_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionLoopResume_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      ActionLoopResume_MembersInjector.injectConfigBuilderPlugin(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      ActionLoopResume_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      return instance;
    }
  }

  private final class ActionLoopSuspendSubcomponentFactory implements AutomationModule_ActionLoopSuspendInjector.ActionLoopSuspendSubcomponent.Factory {
    @Override
    public AutomationModule_ActionLoopSuspendInjector.ActionLoopSuspendSubcomponent create(
        ActionLoopSuspend arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionLoopSuspendSubcomponentImpl(arg0);
    }
  }

  private final class ActionLoopSuspendSubcomponentImpl implements AutomationModule_ActionLoopSuspendInjector.ActionLoopSuspendSubcomponent {
    private ActionLoopSuspendSubcomponentImpl(ActionLoopSuspend arg0) {

    }

    @Override
    public void inject(ActionLoopSuspend arg0) {
      injectActionLoopSuspend(arg0);
    }

    @CanIgnoreReturnValue
    private ActionLoopSuspend injectActionLoopSuspend(ActionLoopSuspend instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionLoopSuspend_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionLoopSuspend_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      ActionLoopSuspend_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      return instance;
    }
  }

  private final class ActionNotificationSubcomponentFactory implements AutomationModule_ActionNotificationInjector.ActionNotificationSubcomponent.Factory {
    @Override
    public AutomationModule_ActionNotificationInjector.ActionNotificationSubcomponent create(
        ActionNotification arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionNotificationSubcomponentImpl(arg0);
    }
  }

  private final class ActionNotificationSubcomponentImpl implements AutomationModule_ActionNotificationInjector.ActionNotificationSubcomponent {
    private ActionNotificationSubcomponentImpl(ActionNotification arg0) {

    }

    @Override
    public void inject(ActionNotification arg0) {
      injectActionNotification(arg0);
    }

    @CanIgnoreReturnValue
    private ActionNotification injectActionNotification(ActionNotification instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionNotification_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionNotification_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ActionNotification_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      return instance;
    }
  }

  private final class ActionAlarmSubcomponentFactory implements AutomationModule_ActionAlarmInjector.ActionAlarmSubcomponent.Factory {
    @Override
    public AutomationModule_ActionAlarmInjector.ActionAlarmSubcomponent create(ActionAlarm arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionAlarmSubcomponentImpl(arg0);
    }
  }

  private final class ActionAlarmSubcomponentImpl implements AutomationModule_ActionAlarmInjector.ActionAlarmSubcomponent {
    private ActionAlarmSubcomponentImpl(ActionAlarm arg0) {

    }

    @Override
    public void inject(ActionAlarm arg0) {
      injectActionAlarm(arg0);
    }

    @CanIgnoreReturnValue
    private ActionAlarm injectActionAlarm(ActionAlarm instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionAlarm_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionAlarm_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ActionAlarm_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      ActionAlarm_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      return instance;
    }
  }

  private final class ActionProfileSwitchSubcomponentFactory implements AutomationModule_ActionProfileSwitchInjector.ActionProfileSwitchSubcomponent.Factory {
    @Override
    public AutomationModule_ActionProfileSwitchInjector.ActionProfileSwitchSubcomponent create(
        ActionProfileSwitch arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionProfileSwitchSubcomponentImpl(arg0);
    }
  }

  private final class ActionProfileSwitchSubcomponentImpl implements AutomationModule_ActionProfileSwitchInjector.ActionProfileSwitchSubcomponent {
    private ActionProfileSwitchSubcomponentImpl(ActionProfileSwitch arg0) {

    }

    @Override
    public void inject(ActionProfileSwitch arg0) {
      injectActionProfileSwitch(arg0);
    }

    @CanIgnoreReturnValue
    private ActionProfileSwitch injectActionProfileSwitch(ActionProfileSwitch instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionProfileSwitch_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionProfileSwitch_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      ActionProfileSwitch_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      return instance;
    }
  }

  private final class ActionProfileSwitchPercentSubcomponentFactory implements AutomationModule_ActionProfileSwitchPercentInjector.ActionProfileSwitchPercentSubcomponent.Factory {
    @Override
    public AutomationModule_ActionProfileSwitchPercentInjector.ActionProfileSwitchPercentSubcomponent create(
        ActionProfileSwitchPercent arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionProfileSwitchPercentSubcomponentImpl(arg0);
    }
  }

  private final class ActionProfileSwitchPercentSubcomponentImpl implements AutomationModule_ActionProfileSwitchPercentInjector.ActionProfileSwitchPercentSubcomponent {
    private ActionProfileSwitchPercentSubcomponentImpl(ActionProfileSwitchPercent arg0) {

    }

    @Override
    public void inject(ActionProfileSwitchPercent arg0) {
      injectActionProfileSwitchPercent(arg0);
    }

    @CanIgnoreReturnValue
    private ActionProfileSwitchPercent injectActionProfileSwitchPercent(
        ActionProfileSwitchPercent instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionProfileSwitchPercent_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionProfileSwitchPercent_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class ActionSendSMSSubcomponentFactory implements AutomationModule_ActionSendSMSInjector.ActionSendSMSSubcomponent.Factory {
    @Override
    public AutomationModule_ActionSendSMSInjector.ActionSendSMSSubcomponent create(
        ActionSendSMS arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionSendSMSSubcomponentImpl(arg0);
    }
  }

  private final class ActionSendSMSSubcomponentImpl implements AutomationModule_ActionSendSMSInjector.ActionSendSMSSubcomponent {
    private ActionSendSMSSubcomponentImpl(ActionSendSMS arg0) {

    }

    @Override
    public void inject(ActionSendSMS arg0) {
      injectActionSendSMS(arg0);
    }

    @CanIgnoreReturnValue
    private ActionSendSMS injectActionSendSMS(ActionSendSMS instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionSendSMS_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionSendSMS_MembersInjector.injectSmsCommunicatorPlugin(instance, DaggerAppComponent.this.smsCommunicatorPluginProvider.get());
      return instance;
    }
  }

  private final class ActionStartTempTargetSubcomponentFactory implements AutomationModule_ActionStartTempTargetInjector.ActionStartTempTargetSubcomponent.Factory {
    @Override
    public AutomationModule_ActionStartTempTargetInjector.ActionStartTempTargetSubcomponent create(
        ActionStartTempTarget arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionStartTempTargetSubcomponentImpl(arg0);
    }
  }

  private final class ActionStartTempTargetSubcomponentImpl implements AutomationModule_ActionStartTempTargetInjector.ActionStartTempTargetSubcomponent {
    private ActionStartTempTargetSubcomponentImpl(ActionStartTempTarget arg0) {

    }

    @Override
    public void inject(ActionStartTempTarget arg0) {
      injectActionStartTempTarget(arg0);
    }

    @CanIgnoreReturnValue
    private ActionStartTempTarget injectActionStartTempTarget(ActionStartTempTarget instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionStartTempTarget_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionStartTempTarget_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class ActionStopTempTargetSubcomponentFactory implements AutomationModule_ActionStopTempTargetInjector.ActionStopTempTargetSubcomponent.Factory {
    @Override
    public AutomationModule_ActionStopTempTargetInjector.ActionStopTempTargetSubcomponent create(
        ActionStopTempTarget arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionStopTempTargetSubcomponentImpl(arg0);
    }
  }

  private final class ActionStopTempTargetSubcomponentImpl implements AutomationModule_ActionStopTempTargetInjector.ActionStopTempTargetSubcomponent {
    private ActionStopTempTargetSubcomponentImpl(ActionStopTempTarget arg0) {

    }

    @Override
    public void inject(ActionStopTempTarget arg0) {
      injectActionStopTempTarget(arg0);
    }

    @CanIgnoreReturnValue
    private ActionStopTempTarget injectActionStopTempTarget(ActionStopTempTarget instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ActionStopTempTarget_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ActionStopTempTarget_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class ActionDummySubcomponentFactory implements AutomationModule_ActionDummyInjector.ActionDummySubcomponent.Factory {
    @Override
    public AutomationModule_ActionDummyInjector.ActionDummySubcomponent create(ActionDummy arg0) {
      Preconditions.checkNotNull(arg0);
      return new ActionDummySubcomponentImpl(arg0);
    }
  }

  private final class ActionDummySubcomponentImpl implements AutomationModule_ActionDummyInjector.ActionDummySubcomponent {
    private ActionDummySubcomponentImpl(ActionDummy arg0) {

    }

    @Override
    public void inject(ActionDummy arg0) {
      injectActionDummy(arg0);
    }

    @CanIgnoreReturnValue
    private ActionDummy injectActionDummy(ActionDummy instance) {
      Action_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class ElementSubcomponentFactory implements AutomationModule_ElementInjector.ElementSubcomponent.Factory {
    @Override
    public AutomationModule_ElementInjector.ElementSubcomponent create(Element arg0) {
      Preconditions.checkNotNull(arg0);
      return new ElementSubcomponentImpl(arg0);
    }
  }

  private final class ElementSubcomponentImpl implements AutomationModule_ElementInjector.ElementSubcomponent {
    private ElementSubcomponentImpl(Element arg0) {

    }

    @Override
    public void inject(Element arg0) {
    }
  }

  private final class InputBgSubcomponentFactory implements AutomationModule_InputBgInjector.InputBgSubcomponent.Factory {
    @Override
    public AutomationModule_InputBgInjector.InputBgSubcomponent create(InputBg arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputBgSubcomponentImpl(arg0);
    }
  }

  private final class InputBgSubcomponentImpl implements AutomationModule_InputBgInjector.InputBgSubcomponent {
    private InputBgSubcomponentImpl(InputBg arg0) {

    }

    @Override
    public void inject(InputBg arg0) {
      injectInputBg(arg0);
    }

    @CanIgnoreReturnValue
    private InputBg injectInputBg(InputBg instance) {
      InputBg_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      return instance;
    }
  }

  private final class InputButtonSubcomponentFactory implements AutomationModule_InputButtonInjector.InputButtonSubcomponent.Factory {
    @Override
    public AutomationModule_InputButtonInjector.InputButtonSubcomponent create(InputButton arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputButtonSubcomponentImpl(arg0);
    }
  }

  private final class InputButtonSubcomponentImpl implements AutomationModule_InputButtonInjector.InputButtonSubcomponent {
    private InputButtonSubcomponentImpl(InputButton arg0) {

    }

    @Override
    public void inject(InputButton arg0) {
    }
  }

  private final class ComparatorSubcomponentFactory implements AutomationModule_ComparatorInjector.ComparatorSubcomponent.Factory {
    @Override
    public AutomationModule_ComparatorInjector.ComparatorSubcomponent create(Comparator arg0) {
      Preconditions.checkNotNull(arg0);
      return new ComparatorSubcomponentImpl(arg0);
    }
  }

  private final class ComparatorSubcomponentImpl implements AutomationModule_ComparatorInjector.ComparatorSubcomponent {
    private ComparatorSubcomponentImpl(Comparator arg0) {

    }

    @Override
    public void inject(Comparator arg0) {
      injectComparator(arg0);
    }

    @CanIgnoreReturnValue
    private Comparator injectComparator(Comparator instance) {
      Comparator_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class ComparatorConnectSubcomponentFactory implements AutomationModule_ComparatorConnectInjector.ComparatorConnectSubcomponent.Factory {
    @Override
    public AutomationModule_ComparatorConnectInjector.ComparatorConnectSubcomponent create(
        ComparatorConnect arg0) {
      Preconditions.checkNotNull(arg0);
      return new ComparatorConnectSubcomponentImpl(arg0);
    }
  }

  private final class ComparatorConnectSubcomponentImpl implements AutomationModule_ComparatorConnectInjector.ComparatorConnectSubcomponent {
    private ComparatorConnectSubcomponentImpl(ComparatorConnect arg0) {

    }

    @Override
    public void inject(ComparatorConnect arg0) {
      injectComparatorConnect(arg0);
    }

    @CanIgnoreReturnValue
    private ComparatorConnect injectComparatorConnect(ComparatorConnect instance) {
      ComparatorConnect_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class ComparatorExistsSubcomponentFactory implements AutomationModule_ComparatorExistsInjector.ComparatorExistsSubcomponent.Factory {
    @Override
    public AutomationModule_ComparatorExistsInjector.ComparatorExistsSubcomponent create(
        ComparatorExists arg0) {
      Preconditions.checkNotNull(arg0);
      return new ComparatorExistsSubcomponentImpl(arg0);
    }
  }

  private final class ComparatorExistsSubcomponentImpl implements AutomationModule_ComparatorExistsInjector.ComparatorExistsSubcomponent {
    private ComparatorExistsSubcomponentImpl(ComparatorExists arg0) {

    }

    @Override
    public void inject(ComparatorExists arg0) {
      injectComparatorExists(arg0);
    }

    @CanIgnoreReturnValue
    private ComparatorExists injectComparatorExists(ComparatorExists instance) {
      ComparatorExists_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class InputDateTimeSubcomponentFactory implements AutomationModule_InputDateTimeInjector.InputDateTimeSubcomponent.Factory {
    @Override
    public AutomationModule_InputDateTimeInjector.InputDateTimeSubcomponent create(
        InputDateTime arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputDateTimeSubcomponentImpl(arg0);
    }
  }

  private final class InputDateTimeSubcomponentImpl implements AutomationModule_InputDateTimeInjector.InputDateTimeSubcomponent {
    private InputDateTimeSubcomponentImpl(InputDateTime arg0) {

    }

    @Override
    public void inject(InputDateTime arg0) {
      injectInputDateTime(arg0);
    }

    @CanIgnoreReturnValue
    private InputDateTime injectInputDateTime(InputDateTime instance) {
      InputDateTime_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      InputDateTime_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      InputDateTime_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class InputDeltaSubcomponentFactory implements AutomationModule_InputDeltaInjector.InputDeltaSubcomponent.Factory {
    @Override
    public AutomationModule_InputDeltaInjector.InputDeltaSubcomponent create(InputDelta arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputDeltaSubcomponentImpl(arg0);
    }
  }

  private final class InputDeltaSubcomponentImpl implements AutomationModule_InputDeltaInjector.InputDeltaSubcomponent {
    private InputDeltaSubcomponentImpl(InputDelta arg0) {

    }

    @Override
    public void inject(InputDelta arg0) {
      injectInputDelta(arg0);
    }

    @CanIgnoreReturnValue
    private InputDelta injectInputDelta(InputDelta instance) {
      InputDelta_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class InputDoubleSubcomponentFactory implements AutomationModule_InputDoubleInjector.InputDoubleSubcomponent.Factory {
    @Override
    public AutomationModule_InputDoubleInjector.InputDoubleSubcomponent create(InputDouble arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputDoubleSubcomponentImpl(arg0);
    }
  }

  private final class InputDoubleSubcomponentImpl implements AutomationModule_InputDoubleInjector.InputDoubleSubcomponent {
    private InputDoubleSubcomponentImpl(InputDouble arg0) {

    }

    @Override
    public void inject(InputDouble arg0) {
    }
  }

  private final class InputDropdownMenuSubcomponentFactory implements AutomationModule_InputDropdownMenuInjector.InputDropdownMenuSubcomponent.Factory {
    @Override
    public AutomationModule_InputDropdownMenuInjector.InputDropdownMenuSubcomponent create(
        InputDropdownMenu arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputDropdownMenuSubcomponentImpl(arg0);
    }
  }

  private final class InputDropdownMenuSubcomponentImpl implements AutomationModule_InputDropdownMenuInjector.InputDropdownMenuSubcomponent {
    private InputDropdownMenuSubcomponentImpl(InputDropdownMenu arg0) {

    }

    @Override
    public void inject(InputDropdownMenu arg0) {
      injectInputDropdownMenu(arg0);
    }

    @CanIgnoreReturnValue
    private InputDropdownMenu injectInputDropdownMenu(InputDropdownMenu instance) {
      InputDropdownMenu_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class InputDurationSubcomponentFactory implements AutomationModule_InputDurationInjector.InputDurationSubcomponent.Factory {
    @Override
    public AutomationModule_InputDurationInjector.InputDurationSubcomponent create(
        InputDuration arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputDurationSubcomponentImpl(arg0);
    }
  }

  private final class InputDurationSubcomponentImpl implements AutomationModule_InputDurationInjector.InputDurationSubcomponent {
    private InputDurationSubcomponentImpl(InputDuration arg0) {

    }

    @Override
    public void inject(InputDuration arg0) {
    }
  }

  private final class InputInsulinSubcomponentFactory implements AutomationModule_InputInsulinInjector.InputInsulinSubcomponent.Factory {
    @Override
    public AutomationModule_InputInsulinInjector.InputInsulinSubcomponent create(
        InputInsulin arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputInsulinSubcomponentImpl(arg0);
    }
  }

  private final class InputInsulinSubcomponentImpl implements AutomationModule_InputInsulinInjector.InputInsulinSubcomponent {
    private InputInsulinSubcomponentImpl(InputInsulin arg0) {

    }

    @Override
    public void inject(InputInsulin arg0) {
    }
  }

  private final class InputLocationModeSubcomponentFactory implements AutomationModule_InputLocationModeInjector.InputLocationModeSubcomponent.Factory {
    @Override
    public AutomationModule_InputLocationModeInjector.InputLocationModeSubcomponent create(
        InputLocationMode arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputLocationModeSubcomponentImpl(arg0);
    }
  }

  private final class InputLocationModeSubcomponentImpl implements AutomationModule_InputLocationModeInjector.InputLocationModeSubcomponent {
    private InputLocationModeSubcomponentImpl(InputLocationMode arg0) {

    }

    @Override
    public void inject(InputLocationMode arg0) {
      injectInputLocationMode(arg0);
    }

    @CanIgnoreReturnValue
    private InputLocationMode injectInputLocationMode(InputLocationMode instance) {
      InputLocationMode_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class InputPercentSubcomponentFactory implements AutomationModule_InputPercentInjector.InputPercentSubcomponent.Factory {
    @Override
    public AutomationModule_InputPercentInjector.InputPercentSubcomponent create(
        InputPercent arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputPercentSubcomponentImpl(arg0);
    }
  }

  private final class InputPercentSubcomponentImpl implements AutomationModule_InputPercentInjector.InputPercentSubcomponent {
    private InputPercentSubcomponentImpl(InputPercent arg0) {

    }

    @Override
    public void inject(InputPercent arg0) {
    }
  }

  private final class InputProfileNameSubcomponentFactory implements AutomationModule_InputProfileNameInjector.InputProfileNameSubcomponent.Factory {
    @Override
    public AutomationModule_InputProfileNameInjector.InputProfileNameSubcomponent create(
        InputProfileName arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputProfileNameSubcomponentImpl(arg0);
    }
  }

  private final class InputProfileNameSubcomponentImpl implements AutomationModule_InputProfileNameInjector.InputProfileNameSubcomponent {
    private InputProfileNameSubcomponentImpl(InputProfileName arg0) {

    }

    @Override
    public void inject(InputProfileName arg0) {
      injectInputProfileName(arg0);
    }

    @CanIgnoreReturnValue
    private InputProfileName injectInputProfileName(InputProfileName instance) {
      InputProfileName_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      InputProfileName_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class InputStringSubcomponentFactory implements AutomationModule_InputStringInjector.InputStringSubcomponent.Factory {
    @Override
    public AutomationModule_InputStringInjector.InputStringSubcomponent create(InputString arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputStringSubcomponentImpl(arg0);
    }
  }

  private final class InputStringSubcomponentImpl implements AutomationModule_InputStringInjector.InputStringSubcomponent {
    private InputStringSubcomponentImpl(InputString arg0) {

    }

    @Override
    public void inject(InputString arg0) {
    }
  }

  private final class InputTempTargetSubcomponentFactory implements AutomationModule_InputTempTargetInjector.InputTempTargetSubcomponent.Factory {
    @Override
    public AutomationModule_InputTempTargetInjector.InputTempTargetSubcomponent create(
        InputTempTarget arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputTempTargetSubcomponentImpl(arg0);
    }
  }

  private final class InputTempTargetSubcomponentImpl implements AutomationModule_InputTempTargetInjector.InputTempTargetSubcomponent {
    private InputTempTargetSubcomponentImpl(InputTempTarget arg0) {

    }

    @Override
    public void inject(InputTempTarget arg0) {
      injectInputTempTarget(arg0);
    }

    @CanIgnoreReturnValue
    private InputTempTarget injectInputTempTarget(InputTempTarget instance) {
      InputTempTarget_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      return instance;
    }
  }

  private final class InputTimeRangeSubcomponentFactory implements AutomationModule_InputTimeRangeInjector.InputTimeRangeSubcomponent.Factory {
    @Override
    public AutomationModule_InputTimeRangeInjector.InputTimeRangeSubcomponent create(
        InputTimeRange arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputTimeRangeSubcomponentImpl(arg0);
    }
  }

  private final class InputTimeRangeSubcomponentImpl implements AutomationModule_InputTimeRangeInjector.InputTimeRangeSubcomponent {
    private InputTimeRangeSubcomponentImpl(InputTimeRange arg0) {

    }

    @Override
    public void inject(InputTimeRange arg0) {
      injectInputTimeRange(arg0);
    }

    @CanIgnoreReturnValue
    private InputTimeRange injectInputTimeRange(InputTimeRange instance) {
      InputTimeRange_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      InputTimeRange_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      InputTimeRange_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class InputTimeSubcomponentFactory implements AutomationModule_InputTimeInjector.InputTimeSubcomponent.Factory {
    @Override
    public AutomationModule_InputTimeInjector.InputTimeSubcomponent create(InputTime arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputTimeSubcomponentImpl(arg0);
    }
  }

  private final class InputTimeSubcomponentImpl implements AutomationModule_InputTimeInjector.InputTimeSubcomponent {
    private InputTimeSubcomponentImpl(InputTime arg0) {

    }

    @Override
    public void inject(InputTime arg0) {
      injectInputTime(arg0);
    }

    @CanIgnoreReturnValue
    private InputTime injectInputTime(InputTime instance) {
      InputTime_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      InputTime_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      InputTime_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class InputWeekDaySubcomponentFactory implements AutomationModule_InputWeekDayInjector.InputWeekDaySubcomponent.Factory {
    @Override
    public AutomationModule_InputWeekDayInjector.InputWeekDaySubcomponent create(
        InputWeekDay arg0) {
      Preconditions.checkNotNull(arg0);
      return new InputWeekDaySubcomponentImpl(arg0);
    }
  }

  private final class InputWeekDaySubcomponentImpl implements AutomationModule_InputWeekDayInjector.InputWeekDaySubcomponent {
    private InputWeekDaySubcomponentImpl(InputWeekDay arg0) {

    }

    @Override
    public void inject(InputWeekDay arg0) {
    }
  }

  private final class LabelWithElementSubcomponentFactory implements AutomationModule_LabelWithElementInjector.LabelWithElementSubcomponent.Factory {
    @Override
    public AutomationModule_LabelWithElementInjector.LabelWithElementSubcomponent create(
        LabelWithElement arg0) {
      Preconditions.checkNotNull(arg0);
      return new LabelWithElementSubcomponentImpl(arg0);
    }
  }

  private final class LabelWithElementSubcomponentImpl implements AutomationModule_LabelWithElementInjector.LabelWithElementSubcomponent {
    private LabelWithElementSubcomponentImpl(LabelWithElement arg0) {

    }

    @Override
    public void inject(LabelWithElement arg0) {
      injectLabelWithElement(arg0);
    }

    @CanIgnoreReturnValue
    private LabelWithElement injectLabelWithElement(LabelWithElement instance) {
      LabelWithElement_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class StaticLabelSubcomponentFactory implements AutomationModule_StaticLabelInjector.StaticLabelSubcomponent.Factory {
    @Override
    public AutomationModule_StaticLabelInjector.StaticLabelSubcomponent create(StaticLabel arg0) {
      Preconditions.checkNotNull(arg0);
      return new StaticLabelSubcomponentImpl(arg0);
    }
  }

  private final class StaticLabelSubcomponentImpl implements AutomationModule_StaticLabelInjector.StaticLabelSubcomponent {
    private StaticLabelSubcomponentImpl(StaticLabel arg0) {

    }

    @Override
    public void inject(StaticLabel arg0) {
      injectStaticLabel(arg0);
    }

    @CanIgnoreReturnValue
    private StaticLabel injectStaticLabel(StaticLabel instance) {
      StaticLabel_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class CommandQueueSubcomponentFactory implements CommandQueueModule_CommandQueueInjector.CommandQueueSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandQueueInjector.CommandQueueSubcomponent create(
        CommandQueue arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandQueueSubcomponentImpl(arg0);
    }
  }

  private final class CommandQueueSubcomponentImpl implements CommandQueueModule_CommandQueueInjector.CommandQueueSubcomponent {
    private CommandQueueSubcomponentImpl(CommandQueue arg0) {

    }

    @Override
    public void inject(CommandQueue arg0) {
    }
  }

  private final class CommandBolusSubcomponentFactory implements CommandQueueModule_CommandBolusInjector.CommandBolusSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandBolusInjector.CommandBolusSubcomponent create(
        CommandBolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandBolusSubcomponentImpl(arg0);
    }
  }

  private final class CommandBolusSubcomponentImpl implements CommandQueueModule_CommandBolusInjector.CommandBolusSubcomponent {
    private CommandBolusSubcomponentImpl(CommandBolus arg0) {

    }

    @Override
    public void inject(CommandBolus arg0) {
      injectCommandBolus(arg0);
    }

    @CanIgnoreReturnValue
    private CommandBolus injectCommandBolus(CommandBolus instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandBolus_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      CommandBolus_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandCancelExtendedBolusSubcomponentFactory implements CommandQueueModule_CommandCancelExtendedBolusInjector.CommandCancelExtendedBolusSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandCancelExtendedBolusInjector.CommandCancelExtendedBolusSubcomponent create(
        CommandCancelExtendedBolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandCancelExtendedBolusSubcomponentImpl(arg0);
    }
  }

  private final class CommandCancelExtendedBolusSubcomponentImpl implements CommandQueueModule_CommandCancelExtendedBolusInjector.CommandCancelExtendedBolusSubcomponent {
    private CommandCancelExtendedBolusSubcomponentImpl(CommandCancelExtendedBolus arg0) {

    }

    @Override
    public void inject(CommandCancelExtendedBolus arg0) {
      injectCommandCancelExtendedBolus(arg0);
    }

    @CanIgnoreReturnValue
    private CommandCancelExtendedBolus injectCommandCancelExtendedBolus(
        CommandCancelExtendedBolus instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandCancelExtendedBolus_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandCancelTempBasalSubcomponentFactory implements CommandQueueModule_CommandCancelTempBasalInjector.CommandCancelTempBasalSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandCancelTempBasalInjector.CommandCancelTempBasalSubcomponent create(
        CommandCancelTempBasal arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandCancelTempBasalSubcomponentImpl(arg0);
    }
  }

  private final class CommandCancelTempBasalSubcomponentImpl implements CommandQueueModule_CommandCancelTempBasalInjector.CommandCancelTempBasalSubcomponent {
    private CommandCancelTempBasalSubcomponentImpl(CommandCancelTempBasal arg0) {

    }

    @Override
    public void inject(CommandCancelTempBasal arg0) {
      injectCommandCancelTempBasal(arg0);
    }

    @CanIgnoreReturnValue
    private CommandCancelTempBasal injectCommandCancelTempBasal(CommandCancelTempBasal instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandCancelTempBasal_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandExtendedBolusSubcomponentFactory implements CommandQueueModule_CommandExtendedBolusInjector.CommandExtendedBolusSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandExtendedBolusInjector.CommandExtendedBolusSubcomponent create(
        CommandExtendedBolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandExtendedBolusSubcomponentImpl(arg0);
    }
  }

  private final class CommandExtendedBolusSubcomponentImpl implements CommandQueueModule_CommandExtendedBolusInjector.CommandExtendedBolusSubcomponent {
    private CommandExtendedBolusSubcomponentImpl(CommandExtendedBolus arg0) {

    }

    @Override
    public void inject(CommandExtendedBolus arg0) {
      injectCommandExtendedBolus(arg0);
    }

    @CanIgnoreReturnValue
    private CommandExtendedBolus injectCommandExtendedBolus(CommandExtendedBolus instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandExtendedBolus_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandInsightSetTBROverNotificationSubcomponentFactory implements CommandQueueModule_CommandInsightSetTBROverNotificationInjector.CommandInsightSetTBROverNotificationSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandInsightSetTBROverNotificationInjector.CommandInsightSetTBROverNotificationSubcomponent create(
        CommandInsightSetTBROverNotification arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandInsightSetTBROverNotificationSubcomponentImpl(arg0);
    }
  }

  private final class CommandInsightSetTBROverNotificationSubcomponentImpl implements CommandQueueModule_CommandInsightSetTBROverNotificationInjector.CommandInsightSetTBROverNotificationSubcomponent {
    private CommandInsightSetTBROverNotificationSubcomponentImpl(
        CommandInsightSetTBROverNotification arg0) {

    }

    @Override
    public void inject(CommandInsightSetTBROverNotification arg0) {
      injectCommandInsightSetTBROverNotification(arg0);
    }

    @CanIgnoreReturnValue
    private CommandInsightSetTBROverNotification injectCommandInsightSetTBROverNotification(
        CommandInsightSetTBROverNotification instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandInsightSetTBROverNotification_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandLoadEventsSubcomponentFactory implements CommandQueueModule_CommandLoadEventsInjector.CommandLoadEventsSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandLoadEventsInjector.CommandLoadEventsSubcomponent create(
        CommandLoadEvents arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandLoadEventsSubcomponentImpl(arg0);
    }
  }

  private final class CommandLoadEventsSubcomponentImpl implements CommandQueueModule_CommandLoadEventsInjector.CommandLoadEventsSubcomponent {
    private CommandLoadEventsSubcomponentImpl(CommandLoadEvents arg0) {

    }

    @Override
    public void inject(CommandLoadEvents arg0) {
      injectCommandLoadEvents(arg0);
    }

    @CanIgnoreReturnValue
    private CommandLoadEvents injectCommandLoadEvents(CommandLoadEvents instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandLoadEvents_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandLoadHistorySubcomponentFactory implements CommandQueueModule_CommandLoadHistoryInjector.CommandLoadHistorySubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandLoadHistoryInjector.CommandLoadHistorySubcomponent create(
        CommandLoadHistory arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandLoadHistorySubcomponentImpl(arg0);
    }
  }

  private final class CommandLoadHistorySubcomponentImpl implements CommandQueueModule_CommandLoadHistoryInjector.CommandLoadHistorySubcomponent {
    private CommandLoadHistorySubcomponentImpl(CommandLoadHistory arg0) {

    }

    @Override
    public void inject(CommandLoadHistory arg0) {
      injectCommandLoadHistory(arg0);
    }

    @CanIgnoreReturnValue
    private CommandLoadHistory injectCommandLoadHistory(CommandLoadHistory instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandLoadHistory_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandLoadTDDsSubcomponentFactory implements CommandQueueModule_CommandLoadTDDsInjector.CommandLoadTDDsSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandLoadTDDsInjector.CommandLoadTDDsSubcomponent create(
        CommandLoadTDDs arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandLoadTDDsSubcomponentImpl(arg0);
    }
  }

  private final class CommandLoadTDDsSubcomponentImpl implements CommandQueueModule_CommandLoadTDDsInjector.CommandLoadTDDsSubcomponent {
    private CommandLoadTDDsSubcomponentImpl(CommandLoadTDDs arg0) {

    }

    @Override
    public void inject(CommandLoadTDDs arg0) {
      injectCommandLoadTDDs(arg0);
    }

    @CanIgnoreReturnValue
    private CommandLoadTDDs injectCommandLoadTDDs(CommandLoadTDDs instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandLoadTDDs_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandReadStatusSubcomponentFactory implements CommandQueueModule_CommandReadStatusInjector.CommandReadStatusSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandReadStatusInjector.CommandReadStatusSubcomponent create(
        CommandReadStatus arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandReadStatusSubcomponentImpl(arg0);
    }
  }

  private final class CommandReadStatusSubcomponentImpl implements CommandQueueModule_CommandReadStatusInjector.CommandReadStatusSubcomponent {
    private CommandReadStatusSubcomponentImpl(CommandReadStatus arg0) {

    }

    @Override
    public void inject(CommandReadStatus arg0) {
      injectCommandReadStatus(arg0);
    }

    @CanIgnoreReturnValue
    private CommandReadStatus injectCommandReadStatus(CommandReadStatus instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandReadStatus_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      CommandReadStatus_MembersInjector.injectLocalAlertUtils(instance, DaggerAppComponent.this.localAlertUtilsProvider.get());
      return instance;
    }
  }

  private final class CommandSetProfileSubcomponentFactory implements CommandQueueModule_CommandSetProfileInjector.CommandSetProfileSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandSetProfileInjector.CommandSetProfileSubcomponent create(
        CommandSetProfile arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandSetProfileSubcomponentImpl(arg0);
    }
  }

  private final class CommandSetProfileSubcomponentImpl implements CommandQueueModule_CommandSetProfileInjector.CommandSetProfileSubcomponent {
    private CommandSetProfileSubcomponentImpl(CommandSetProfile arg0) {

    }

    @Override
    public void inject(CommandSetProfile arg0) {
      injectCommandSetProfile(arg0);
    }

    @CanIgnoreReturnValue
    private CommandSetProfile injectCommandSetProfile(CommandSetProfile instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandSetProfile_MembersInjector.injectSmsCommunicatorPlugin(instance, DaggerAppComponent.this.smsCommunicatorPluginProvider.get());
      CommandSetProfile_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      CommandSetProfile_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      return instance;
    }
  }

  private final class CommandSMBBolusSubcomponentFactory implements CommandQueueModule_CommandCommandSMBBolusInjector.CommandSMBBolusSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandCommandSMBBolusInjector.CommandSMBBolusSubcomponent create(
        CommandSMBBolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandSMBBolusSubcomponentImpl(arg0);
    }
  }

  private final class CommandSMBBolusSubcomponentImpl implements CommandQueueModule_CommandCommandSMBBolusInjector.CommandSMBBolusSubcomponent {
    private CommandSMBBolusSubcomponentImpl(CommandSMBBolus arg0) {

    }

    @Override
    public void inject(CommandSMBBolus arg0) {
      injectCommandSMBBolus(arg0);
    }

    @CanIgnoreReturnValue
    private CommandSMBBolus injectCommandSMBBolus(CommandSMBBolus instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandSMBBolus_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      CommandSMBBolus_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandStartPumpSubcomponentFactory implements CommandQueueModule_CommandStartPumpInjector.CommandStartPumpSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandStartPumpInjector.CommandStartPumpSubcomponent create(
        CommandStartPump arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandStartPumpSubcomponentImpl(arg0);
    }
  }

  private final class CommandStartPumpSubcomponentImpl implements CommandQueueModule_CommandStartPumpInjector.CommandStartPumpSubcomponent {
    private CommandStartPumpSubcomponentImpl(CommandStartPump arg0) {

    }

    @Override
    public void inject(CommandStartPump arg0) {
      injectCommandStartPump(arg0);
    }

    @CanIgnoreReturnValue
    private CommandStartPump injectCommandStartPump(CommandStartPump instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandStartPump_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandStopPumpSubcomponentFactory implements CommandQueueModule_CommandStopPumpInjector.CommandStopPumpSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandStopPumpInjector.CommandStopPumpSubcomponent create(
        CommandStopPump arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandStopPumpSubcomponentImpl(arg0);
    }
  }

  private final class CommandStopPumpSubcomponentImpl implements CommandQueueModule_CommandStopPumpInjector.CommandStopPumpSubcomponent {
    private CommandStopPumpSubcomponentImpl(CommandStopPump arg0) {

    }

    @Override
    public void inject(CommandStopPump arg0) {
      injectCommandStopPump(arg0);
    }

    @CanIgnoreReturnValue
    private CommandStopPump injectCommandStopPump(CommandStopPump instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandStopPump_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandTempBasalAbsoluteSubcomponentFactory implements CommandQueueModule_CommandTempBasalAbsoluteInjector.CommandTempBasalAbsoluteSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandTempBasalAbsoluteInjector.CommandTempBasalAbsoluteSubcomponent create(
        CommandTempBasalAbsolute arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandTempBasalAbsoluteSubcomponentImpl(arg0);
    }
  }

  private final class CommandTempBasalAbsoluteSubcomponentImpl implements CommandQueueModule_CommandTempBasalAbsoluteInjector.CommandTempBasalAbsoluteSubcomponent {
    private CommandTempBasalAbsoluteSubcomponentImpl(CommandTempBasalAbsolute arg0) {

    }

    @Override
    public void inject(CommandTempBasalAbsolute arg0) {
      injectCommandTempBasalAbsolute(arg0);
    }

    @CanIgnoreReturnValue
    private CommandTempBasalAbsolute injectCommandTempBasalAbsolute(
        CommandTempBasalAbsolute instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandTempBasalAbsolute_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandTempBasalPercentSubcomponentFactory implements CommandQueueModule_CommandTempBasalPercentInjector.CommandTempBasalPercentSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandTempBasalPercentInjector.CommandTempBasalPercentSubcomponent create(
        CommandTempBasalPercent arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandTempBasalPercentSubcomponentImpl(arg0);
    }
  }

  private final class CommandTempBasalPercentSubcomponentImpl implements CommandQueueModule_CommandTempBasalPercentInjector.CommandTempBasalPercentSubcomponent {
    private CommandTempBasalPercentSubcomponentImpl(CommandTempBasalPercent arg0) {

    }

    @Override
    public void inject(CommandTempBasalPercent arg0) {
      injectCommandTempBasalPercent(arg0);
    }

    @CanIgnoreReturnValue
    private CommandTempBasalPercent injectCommandTempBasalPercent(
        CommandTempBasalPercent instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandTempBasalPercent_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandSetUserSettingsSubcomponentFactory implements CommandQueueModule_CommandSetUserSettingsInjector.CommandSetUserSettingsSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandSetUserSettingsInjector.CommandSetUserSettingsSubcomponent create(
        CommandSetUserSettings arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandSetUserSettingsSubcomponentImpl(arg0);
    }
  }

  private final class CommandSetUserSettingsSubcomponentImpl implements CommandQueueModule_CommandSetUserSettingsInjector.CommandSetUserSettingsSubcomponent {
    private CommandSetUserSettingsSubcomponentImpl(CommandSetUserSettings arg0) {

    }

    @Override
    public void inject(CommandSetUserSettings arg0) {
      injectCommandSetUserSettings(arg0);
    }

    @CanIgnoreReturnValue
    private CommandSetUserSettings injectCommandSetUserSettings(CommandSetUserSettings instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandSetUserSettings_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class CommandCustomCommandSubcomponentFactory implements CommandQueueModule_CommandCustomCommandInjector.CommandCustomCommandSubcomponent.Factory {
    @Override
    public CommandQueueModule_CommandCustomCommandInjector.CommandCustomCommandSubcomponent create(
        CommandCustomCommand arg0) {
      Preconditions.checkNotNull(arg0);
      return new CommandCustomCommandSubcomponentImpl(arg0);
    }
  }

  private final class CommandCustomCommandSubcomponentImpl implements CommandQueueModule_CommandCustomCommandInjector.CommandCustomCommandSubcomponent {
    private CommandCustomCommandSubcomponentImpl(CommandCustomCommand arg0) {

    }

    @Override
    public void inject(CommandCustomCommand arg0) {
      injectCommandCustomCommand(arg0);
    }

    @CanIgnoreReturnValue
    private CommandCustomCommand injectCommandCustomCommand(CommandCustomCommand instance) {
      Command_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Command_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CommandCustomCommand_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class ObjectiveSubcomponentFactory implements ObjectivesModule_ObjectiveInjector.ObjectiveSubcomponent.Factory {
    @Override
    public ObjectivesModule_ObjectiveInjector.ObjectiveSubcomponent create(Objective arg0) {
      Preconditions.checkNotNull(arg0);
      return new ObjectiveSubcomponentImpl(arg0);
    }
  }

  private final class ObjectiveSubcomponentImpl implements ObjectivesModule_ObjectiveInjector.ObjectiveSubcomponent {
    private ObjectiveSubcomponentImpl(Objective arg0) {

    }

    @Override
    public void inject(Objective arg0) {
      injectObjective(arg0);
    }

    @CanIgnoreReturnValue
    private Objective injectObjective(Objective instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class Objective0SubcomponentFactory implements ObjectivesModule_Objective0Injector.Objective0Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective0Injector.Objective0Subcomponent create(Objective0 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective0SubcomponentImpl(arg0);
    }
  }

  private final class Objective0SubcomponentImpl implements ObjectivesModule_Objective0Injector.Objective0Subcomponent {
    private Objective0SubcomponentImpl(Objective0 arg0) {

    }

    @Override
    public void inject(Objective0 arg0) {
      injectObjective0(arg0);
    }

    @CanIgnoreReturnValue
    private Objective0 injectObjective0(Objective0 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Objective0_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective0_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Objective0_MembersInjector.injectVirtualPumpPlugin(instance, DaggerAppComponent.this.virtualPumpPluginProvider.get());
      Objective0_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      Objective0_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      Objective0_MembersInjector.injectNsClientPlugin(instance, DaggerAppComponent.this.nSClientPluginProvider.get());
      Objective0_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class Objective1SubcomponentFactory implements ObjectivesModule_Objective1Injector.Objective1Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective1Injector.Objective1Subcomponent create(Objective1 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective1SubcomponentImpl(arg0);
    }
  }

  private final class Objective1SubcomponentImpl implements ObjectivesModule_Objective1Injector.Objective1Subcomponent {
    private Objective1SubcomponentImpl(Objective1 arg0) {

    }

    @Override
    public void inject(Objective1 arg0) {
      injectObjective1(arg0);
    }

    @CanIgnoreReturnValue
    private Objective1 injectObjective1(Objective1 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Objective1_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective1_MembersInjector.injectActionsPlugin(instance, DaggerAppComponent.this.actionsPluginProvider.get());
      return instance;
    }
  }

  private final class Objective2SubcomponentFactory implements ObjectivesModule_Objective2Injector.Objective2Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective2Injector.Objective2Subcomponent create(Objective2 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective2SubcomponentImpl(arg0);
    }
  }

  private final class Objective2SubcomponentImpl implements ObjectivesModule_Objective2Injector.Objective2Subcomponent {
    private Objective2SubcomponentImpl(Objective2 arg0) {

    }

    @Override
    public void inject(Objective2 arg0) {
      injectObjective2(arg0);
    }

    @CanIgnoreReturnValue
    private Objective2 injectObjective2(Objective2 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class Objective3SubcomponentFactory implements ObjectivesModule_Objective3Injector.Objective3Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective3Injector.Objective3Subcomponent create(Objective3 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective3SubcomponentImpl(arg0);
    }
  }

  private final class Objective3SubcomponentImpl implements ObjectivesModule_Objective3Injector.Objective3Subcomponent {
    private Objective3SubcomponentImpl(Objective3 arg0) {

    }

    @Override
    public void inject(Objective3 arg0) {
      injectObjective3(arg0);
    }

    @CanIgnoreReturnValue
    private Objective3 injectObjective3(Objective3 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Objective3_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective3_MembersInjector.injectObjectivesPlugin(instance, DaggerAppComponent.this.objectivesPluginProvider.get());
      Objective3_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Objective3_MembersInjector.injectNsClientPlugin(instance, DaggerAppComponent.this.nSClientPluginProvider.get());
      return instance;
    }
  }

  private final class Objective4SubcomponentFactory implements ObjectivesModule_Objective4Injector.Objective4Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective4Injector.Objective4Subcomponent create(Objective4 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective4SubcomponentImpl(arg0);
    }
  }

  private final class Objective4SubcomponentImpl implements ObjectivesModule_Objective4Injector.Objective4Subcomponent {
    private Objective4SubcomponentImpl(Objective4 arg0) {

    }

    @Override
    public void inject(Objective4 arg0) {
      injectObjective4(arg0);
    }

    @CanIgnoreReturnValue
    private Objective4 injectObjective4(Objective4 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class Objective5SubcomponentFactory implements ObjectivesModule_Objective5Injector.Objective5Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective5Injector.Objective5Subcomponent create(Objective5 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective5SubcomponentImpl(arg0);
    }
  }

  private final class Objective5SubcomponentImpl implements ObjectivesModule_Objective5Injector.Objective5Subcomponent {
    private Objective5SubcomponentImpl(Objective5 arg0) {

    }

    @Override
    public void inject(Objective5 arg0) {
      injectObjective5(arg0);
    }

    @CanIgnoreReturnValue
    private Objective5 injectObjective5(Objective5 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Objective5_MembersInjector.injectSafetyPlugin(instance, DaggerAppComponent.this.safetyPluginProvider.get());
      return instance;
    }
  }

  private final class Objective6SubcomponentFactory implements ObjectivesModule_Objective6Injector.Objective6Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective6Injector.Objective6Subcomponent create(Objective6 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective6SubcomponentImpl(arg0);
    }
  }

  private final class Objective6SubcomponentImpl implements ObjectivesModule_Objective6Injector.Objective6Subcomponent {
    private Objective6SubcomponentImpl(Objective6 arg0) {

    }

    @Override
    public void inject(Objective6 arg0) {
      injectObjective6(arg0);
    }

    @CanIgnoreReturnValue
    private Objective6 injectObjective6(Objective6 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Objective6_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      return instance;
    }
  }

  private final class Objective7SubcomponentFactory implements ObjectivesModule_Objective7Injector.Objective7Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective7Injector.Objective7Subcomponent create(Objective7 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective7SubcomponentImpl(arg0);
    }
  }

  private final class Objective7SubcomponentImpl implements ObjectivesModule_Objective7Injector.Objective7Subcomponent {
    private Objective7SubcomponentImpl(Objective7 arg0) {

    }

    @Override
    public void inject(Objective7 arg0) {
      injectObjective7(arg0);
    }

    @CanIgnoreReturnValue
    private Objective7 injectObjective7(Objective7 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class Objective8SubcomponentFactory implements ObjectivesModule_Objective8Injector.Objective8Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective8Injector.Objective8Subcomponent create(Objective8 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective8SubcomponentImpl(arg0);
    }
  }

  private final class Objective8SubcomponentImpl implements ObjectivesModule_Objective8Injector.Objective8Subcomponent {
    private Objective8SubcomponentImpl(Objective8 arg0) {

    }

    @Override
    public void inject(Objective8 arg0) {
      injectObjective8(arg0);
    }

    @CanIgnoreReturnValue
    private Objective8 injectObjective8(Objective8 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class Objective9SubcomponentFactory implements ObjectivesModule_Objective9Injector.Objective9Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective9Injector.Objective9Subcomponent create(Objective9 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective9SubcomponentImpl(arg0);
    }
  }

  private final class Objective9SubcomponentImpl implements ObjectivesModule_Objective9Injector.Objective9Subcomponent {
    private Objective9SubcomponentImpl(Objective9 arg0) {

    }

    @Override
    public void inject(Objective9 arg0) {
      injectObjective9(arg0);
    }

    @CanIgnoreReturnValue
    private Objective9 injectObjective9(Objective9 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class Objective10SubcomponentFactory implements ObjectivesModule_Objective10Injector.Objective10Subcomponent.Factory {
    @Override
    public ObjectivesModule_Objective10Injector.Objective10Subcomponent create(Objective10 arg0) {
      Preconditions.checkNotNull(arg0);
      return new Objective10SubcomponentImpl(arg0);
    }
  }

  private final class Objective10SubcomponentImpl implements ObjectivesModule_Objective10Injector.Objective10Subcomponent {
    private Objective10SubcomponentImpl(Objective10 arg0) {

    }

    @Override
    public void inject(Objective10 arg0) {
      injectObjective10(arg0);
    }

    @CanIgnoreReturnValue
    private Objective10 injectObjective10(Objective10 instance) {
      Objective_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      Objective_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class SWBreakSubcomponentFactory implements WizardModule_SwBreakInjector.SWBreakSubcomponent.Factory {
    @Override
    public WizardModule_SwBreakInjector.SWBreakSubcomponent create(SWBreak arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWBreakSubcomponentImpl(arg0);
    }
  }

  private final class SWBreakSubcomponentImpl implements WizardModule_SwBreakInjector.SWBreakSubcomponent {
    private SWBreakSubcomponentImpl(SWBreak arg0) {

    }

    @Override
    public void inject(SWBreak arg0) {
      injectSWBreak(arg0);
    }

    @CanIgnoreReturnValue
    private SWBreak injectSWBreak(SWBreak instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWButtonSubcomponentFactory implements WizardModule_SwButtonInjector.SWButtonSubcomponent.Factory {
    @Override
    public WizardModule_SwButtonInjector.SWButtonSubcomponent create(SWButton arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWButtonSubcomponentImpl(arg0);
    }
  }

  private final class SWButtonSubcomponentImpl implements WizardModule_SwButtonInjector.SWButtonSubcomponent {
    private SWButtonSubcomponentImpl(SWButton arg0) {

    }

    @Override
    public void inject(SWButton arg0) {
      injectSWButton(arg0);
    }

    @CanIgnoreReturnValue
    private SWButton injectSWButton(SWButton instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWEditNumberWithUnitsSubcomponentFactory implements WizardModule_SwEditNumberWithUnitsInjector.SWEditNumberWithUnitsSubcomponent.Factory {
    @Override
    public WizardModule_SwEditNumberWithUnitsInjector.SWEditNumberWithUnitsSubcomponent create(
        SWEditNumberWithUnits arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWEditNumberWithUnitsSubcomponentImpl(arg0);
    }
  }

  private final class SWEditNumberWithUnitsSubcomponentImpl implements WizardModule_SwEditNumberWithUnitsInjector.SWEditNumberWithUnitsSubcomponent {
    private SWEditNumberWithUnitsSubcomponentImpl(SWEditNumberWithUnits arg0) {

    }

    @Override
    public void inject(SWEditNumberWithUnits arg0) {
      injectSWEditNumberWithUnits(arg0);
    }

    @CanIgnoreReturnValue
    private SWEditNumberWithUnits injectSWEditNumberWithUnits(SWEditNumberWithUnits instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      SWEditNumberWithUnits_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      return instance;
    }
  }

  private final class SWEditStringSubcomponentFactory implements WizardModule_SwEditStringInjector.SWEditStringSubcomponent.Factory {
    @Override
    public WizardModule_SwEditStringInjector.SWEditStringSubcomponent create(SWEditString arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWEditStringSubcomponentImpl(arg0);
    }
  }

  private final class SWEditStringSubcomponentImpl implements WizardModule_SwEditStringInjector.SWEditStringSubcomponent {
    private SWEditStringSubcomponentImpl(SWEditString arg0) {

    }

    @Override
    public void inject(SWEditString arg0) {
      injectSWEditString(arg0);
    }

    @CanIgnoreReturnValue
    private SWEditString injectSWEditString(SWEditString instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWEditEncryptedPasswordSubcomponentFactory implements WizardModule_SwEditEncryptedPasswordInjector.SWEditEncryptedPasswordSubcomponent.Factory {
    @Override
    public WizardModule_SwEditEncryptedPasswordInjector.SWEditEncryptedPasswordSubcomponent create(
        SWEditEncryptedPassword arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWEditEncryptedPasswordSubcomponentImpl(arg0);
    }
  }

  private final class SWEditEncryptedPasswordSubcomponentImpl implements WizardModule_SwEditEncryptedPasswordInjector.SWEditEncryptedPasswordSubcomponent {
    private SWEditEncryptedPasswordSubcomponentImpl(SWEditEncryptedPassword arg0) {

    }

    @Override
    public void inject(SWEditEncryptedPassword arg0) {
      injectSWEditEncryptedPassword(arg0);
    }

    @CanIgnoreReturnValue
    private SWEditEncryptedPassword injectSWEditEncryptedPassword(
        SWEditEncryptedPassword instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWEditUrlSubcomponentFactory implements WizardModule_SwEditUrlInjector.SWEditUrlSubcomponent.Factory {
    @Override
    public WizardModule_SwEditUrlInjector.SWEditUrlSubcomponent create(SWEditUrl arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWEditUrlSubcomponentImpl(arg0);
    }
  }

  private final class SWEditUrlSubcomponentImpl implements WizardModule_SwEditUrlInjector.SWEditUrlSubcomponent {
    private SWEditUrlSubcomponentImpl(SWEditUrl arg0) {

    }

    @Override
    public void inject(SWEditUrl arg0) {
      injectSWEditUrl(arg0);
    }

    @CanIgnoreReturnValue
    private SWEditUrl injectSWEditUrl(SWEditUrl instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWFragmentSubcomponentFactory implements WizardModule_SwFragmentInjector.SWFragmentSubcomponent.Factory {
    @Override
    public WizardModule_SwFragmentInjector.SWFragmentSubcomponent create(SWFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWFragmentSubcomponentImpl(arg0);
    }
  }

  private final class SWFragmentSubcomponentImpl implements WizardModule_SwFragmentInjector.SWFragmentSubcomponent {
    private SWFragmentSubcomponentImpl(SWFragment arg0) {

    }

    @Override
    public void inject(SWFragment arg0) {
      injectSWFragment(arg0);
    }

    @CanIgnoreReturnValue
    private SWFragment injectSWFragment(SWFragment instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWHtmlLinkSubcomponentFactory implements WizardModule_SwHtmlLinkInjector.SWHtmlLinkSubcomponent.Factory {
    @Override
    public WizardModule_SwHtmlLinkInjector.SWHtmlLinkSubcomponent create(SWHtmlLink arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWHtmlLinkSubcomponentImpl(arg0);
    }
  }

  private final class SWHtmlLinkSubcomponentImpl implements WizardModule_SwHtmlLinkInjector.SWHtmlLinkSubcomponent {
    private SWHtmlLinkSubcomponentImpl(SWHtmlLink arg0) {

    }

    @Override
    public void inject(SWHtmlLink arg0) {
      injectSWHtmlLink(arg0);
    }

    @CanIgnoreReturnValue
    private SWHtmlLink injectSWHtmlLink(SWHtmlLink instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWInfotextSubcomponentFactory implements WizardModule_SwInfotextInjector.SWInfotextSubcomponent.Factory {
    @Override
    public WizardModule_SwInfotextInjector.SWInfotextSubcomponent create(SWInfotext arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWInfotextSubcomponentImpl(arg0);
    }
  }

  private final class SWInfotextSubcomponentImpl implements WizardModule_SwInfotextInjector.SWInfotextSubcomponent {
    private SWInfotextSubcomponentImpl(SWInfotext arg0) {

    }

    @Override
    public void inject(SWInfotext arg0) {
      injectSWInfotext(arg0);
    }

    @CanIgnoreReturnValue
    private SWInfotext injectSWInfotext(SWInfotext instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWItemSubcomponentFactory implements WizardModule_SwItemInjector.SWItemSubcomponent.Factory {
    @Override
    public WizardModule_SwItemInjector.SWItemSubcomponent create(SWItem arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWItemSubcomponentImpl(arg0);
    }
  }

  private final class SWItemSubcomponentImpl implements WizardModule_SwItemInjector.SWItemSubcomponent {
    private SWItemSubcomponentImpl(SWItem arg0) {

    }

    @Override
    public void inject(SWItem arg0) {
      injectSWItem(arg0);
    }

    @CanIgnoreReturnValue
    private SWItem injectSWItem(SWItem instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWPluginSubcomponentFactory implements WizardModule_SwPluginInjector.SWPluginSubcomponent.Factory {
    @Override
    public WizardModule_SwPluginInjector.SWPluginSubcomponent create(SWPlugin arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWPluginSubcomponentImpl(arg0);
    }
  }

  private final class SWPluginSubcomponentImpl implements WizardModule_SwPluginInjector.SWPluginSubcomponent {
    private SWPluginSubcomponentImpl(SWPlugin arg0) {

    }

    @Override
    public void inject(SWPlugin arg0) {
      injectSWPlugin(arg0);
    }

    @CanIgnoreReturnValue
    private SWPlugin injectSWPlugin(SWPlugin instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      SWPlugin_MembersInjector.injectPluginStore(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      SWPlugin_MembersInjector.injectConfigBuilderPlugin(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      return instance;
    }
  }

  private final class SWRadioButtonSubcomponentFactory implements WizardModule_SwRadioButtonInjector.SWRadioButtonSubcomponent.Factory {
    @Override
    public WizardModule_SwRadioButtonInjector.SWRadioButtonSubcomponent create(SWRadioButton arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWRadioButtonSubcomponentImpl(arg0);
    }
  }

  private final class SWRadioButtonSubcomponentImpl implements WizardModule_SwRadioButtonInjector.SWRadioButtonSubcomponent {
    private SWRadioButtonSubcomponentImpl(SWRadioButton arg0) {

    }

    @Override
    public void inject(SWRadioButton arg0) {
      injectSWRadioButton(arg0);
    }

    @CanIgnoreReturnValue
    private SWRadioButton injectSWRadioButton(SWRadioButton instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class SWScreenSubcomponentFactory implements WizardModule_SwScreenInjector.SWScreenSubcomponent.Factory {
    @Override
    public WizardModule_SwScreenInjector.SWScreenSubcomponent create(SWScreen arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWScreenSubcomponentImpl(arg0);
    }
  }

  private final class SWScreenSubcomponentImpl implements WizardModule_SwScreenInjector.SWScreenSubcomponent {
    private SWScreenSubcomponentImpl(SWScreen arg0) {

    }

    @Override
    public void inject(SWScreen arg0) {
      injectSWScreen(arg0);
    }

    @CanIgnoreReturnValue
    private SWScreen injectSWScreen(SWScreen instance) {
      SWScreen_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class SWEventListenerSubcomponentFactory implements WizardModule_SwEventListenerInjector.SWEventListenerSubcomponent.Factory {
    @Override
    public WizardModule_SwEventListenerInjector.SWEventListenerSubcomponent create(
        SWEventListener arg0) {
      Preconditions.checkNotNull(arg0);
      return new SWEventListenerSubcomponentImpl(arg0);
    }
  }

  private final class SWEventListenerSubcomponentImpl implements WizardModule_SwEventListenerInjector.SWEventListenerSubcomponent {
    private SWEventListenerSubcomponentImpl(SWEventListener arg0) {

    }

    @Override
    public void inject(SWEventListener arg0) {
      injectSWEventListener(arg0);
    }

    @CanIgnoreReturnValue
    private SWEventListener injectSWEventListener(SWEventListener instance) {
      SWItem_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      SWItem_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      SWItem_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      SWItem_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class ServiceTaskSubcomponentFactory implements RileyLinkModule_ServiceTaskProvider.ServiceTaskSubcomponent.Factory {
    @Override
    public RileyLinkModule_ServiceTaskProvider.ServiceTaskSubcomponent create(ServiceTask arg0) {
      Preconditions.checkNotNull(arg0);
      return new ServiceTaskSubcomponentImpl(arg0);
    }
  }

  private final class ServiceTaskSubcomponentImpl implements RileyLinkModule_ServiceTaskProvider.ServiceTaskSubcomponent {
    private ServiceTaskSubcomponentImpl(ServiceTask arg0) {

    }

    @Override
    public void inject(ServiceTask arg0) {
      injectServiceTask(arg0);
    }

    @CanIgnoreReturnValue
    private ServiceTask injectServiceTask(ServiceTask instance) {
      ServiceTask_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class PumpTaskSubcomponentFactory implements RileyLinkModule_PumpTaskProvider.PumpTaskSubcomponent.Factory {
    @Override
    public RileyLinkModule_PumpTaskProvider.PumpTaskSubcomponent create(PumpTask arg0) {
      Preconditions.checkNotNull(arg0);
      return new PumpTaskSubcomponentImpl(arg0);
    }
  }

  private final class PumpTaskSubcomponentImpl implements RileyLinkModule_PumpTaskProvider.PumpTaskSubcomponent {
    private PumpTaskSubcomponentImpl(PumpTask arg0) {

    }

    @Override
    public void inject(PumpTask arg0) {
      injectPumpTask(arg0);
    }

    @CanIgnoreReturnValue
    private PumpTask injectPumpTask(PumpTask instance) {
      ServiceTask_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class DiscoverGattServicesTaskSubcomponentFactory implements RileyLinkModule_DiscoverGattServicesTaskProvider.DiscoverGattServicesTaskSubcomponent.Factory {
    @Override
    public RileyLinkModule_DiscoverGattServicesTaskProvider.DiscoverGattServicesTaskSubcomponent create(
        DiscoverGattServicesTask arg0) {
      Preconditions.checkNotNull(arg0);
      return new DiscoverGattServicesTaskSubcomponentImpl(arg0);
    }
  }

  private final class DiscoverGattServicesTaskSubcomponentImpl implements RileyLinkModule_DiscoverGattServicesTaskProvider.DiscoverGattServicesTaskSubcomponent {
    private DiscoverGattServicesTaskSubcomponentImpl(DiscoverGattServicesTask arg0) {

    }

    @Override
    public void inject(DiscoverGattServicesTask arg0) {
      injectDiscoverGattServicesTask(arg0);
    }

    @CanIgnoreReturnValue
    private DiscoverGattServicesTask injectDiscoverGattServicesTask(
        DiscoverGattServicesTask instance) {
      ServiceTask_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DiscoverGattServicesTask_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class InitializePumpManagerTaskSubcomponentFactory implements RileyLinkModule_InitializePumpManagerTaskProvider.InitializePumpManagerTaskSubcomponent.Factory {
    @Override
    public RileyLinkModule_InitializePumpManagerTaskProvider.InitializePumpManagerTaskSubcomponent create(
        InitializePumpManagerTask arg0) {
      Preconditions.checkNotNull(arg0);
      return new InitializePumpManagerTaskSubcomponentImpl(arg0);
    }
  }

  private final class InitializePumpManagerTaskSubcomponentImpl implements RileyLinkModule_InitializePumpManagerTaskProvider.InitializePumpManagerTaskSubcomponent {
    private InitializePumpManagerTaskSubcomponentImpl(InitializePumpManagerTask arg0) {

    }

    @Override
    public void inject(InitializePumpManagerTask arg0) {
      injectInitializePumpManagerTask(arg0);
    }

    @CanIgnoreReturnValue
    private InitializePumpManagerTask injectInitializePumpManagerTask(
        InitializePumpManagerTask instance) {
      ServiceTask_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      InitializePumpManagerTask_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      InitializePumpManagerTask_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      InitializePumpManagerTask_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      InitializePumpManagerTask_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      return instance;
    }
  }

  private final class ResetRileyLinkConfigurationTaskSubcomponentFactory implements RileyLinkModule_ResetRileyLinkConfigurationTaskProvider.ResetRileyLinkConfigurationTaskSubcomponent.Factory {
    @Override
    public RileyLinkModule_ResetRileyLinkConfigurationTaskProvider.ResetRileyLinkConfigurationTaskSubcomponent create(
        ResetRileyLinkConfigurationTask arg0) {
      Preconditions.checkNotNull(arg0);
      return new ResetRileyLinkConfigurationTaskSubcomponentImpl(arg0);
    }
  }

  private final class ResetRileyLinkConfigurationTaskSubcomponentImpl implements RileyLinkModule_ResetRileyLinkConfigurationTaskProvider.ResetRileyLinkConfigurationTaskSubcomponent {
    private ResetRileyLinkConfigurationTaskSubcomponentImpl(ResetRileyLinkConfigurationTask arg0) {

    }

    @Override
    public void inject(ResetRileyLinkConfigurationTask arg0) {
      injectResetRileyLinkConfigurationTask(arg0);
    }

    @CanIgnoreReturnValue
    private ResetRileyLinkConfigurationTask injectResetRileyLinkConfigurationTask(
        ResetRileyLinkConfigurationTask instance) {
      ServiceTask_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      ResetRileyLinkConfigurationTask_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      ResetRileyLinkConfigurationTask_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ResetRileyLinkConfigurationTask_MembersInjector.injectRfSpy(instance, DaggerAppComponent.this.rFSpyProvider.get());
      return instance;
    }
  }

  private final class WakeAndTuneTaskSubcomponentFactory implements RileyLinkModule_WakeAndTuneTaskProvider.WakeAndTuneTaskSubcomponent.Factory {
    @Override
    public RileyLinkModule_WakeAndTuneTaskProvider.WakeAndTuneTaskSubcomponent create(
        WakeAndTuneTask arg0) {
      Preconditions.checkNotNull(arg0);
      return new WakeAndTuneTaskSubcomponentImpl(arg0);
    }
  }

  private final class WakeAndTuneTaskSubcomponentImpl implements RileyLinkModule_WakeAndTuneTaskProvider.WakeAndTuneTaskSubcomponent {
    private WakeAndTuneTaskSubcomponentImpl(WakeAndTuneTask arg0) {

    }

    @Override
    public void inject(WakeAndTuneTask arg0) {
      injectWakeAndTuneTask(arg0);
    }

    @CanIgnoreReturnValue
    private WakeAndTuneTask injectWakeAndTuneTask(WakeAndTuneTask instance) {
      ServiceTask_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      WakeAndTuneTask_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      return instance;
    }
  }

  private final class RadioResponseSubcomponentFactory implements RileyLinkModule_RadioResponseProvider.RadioResponseSubcomponent.Factory {
    @Override
    public RileyLinkModule_RadioResponseProvider.RadioResponseSubcomponent create(
        RadioResponse arg0) {
      Preconditions.checkNotNull(arg0);
      return new RadioResponseSubcomponentImpl(arg0);
    }
  }

  private final class RadioResponseSubcomponentImpl implements RileyLinkModule_RadioResponseProvider.RadioResponseSubcomponent {
    private RadioResponseSubcomponentImpl(RadioResponse arg0) {

    }

    @Override
    public void inject(RadioResponse arg0) {
      injectRadioResponse(arg0);
    }

    @CanIgnoreReturnValue
    private RadioResponse injectRadioResponse(RadioResponse instance) {
      RadioResponse_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RadioResponse_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RadioResponse_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      return instance;
    }
  }

  private final class RileyLinkBLESubcomponentFactory implements RileyLinkModule_RileyLinkBLEProvider.RileyLinkBLESubcomponent.Factory {
    @Override
    public RileyLinkModule_RileyLinkBLEProvider.RileyLinkBLESubcomponent create(RileyLinkBLE arg0) {
      Preconditions.checkNotNull(arg0);
      return new RileyLinkBLESubcomponentImpl(arg0);
    }
  }

  private final class RileyLinkBLESubcomponentImpl implements RileyLinkModule_RileyLinkBLEProvider.RileyLinkBLESubcomponent {
    private RileyLinkBLESubcomponentImpl(RileyLinkBLE arg0) {

    }

    @Override
    public void inject(RileyLinkBLE arg0) {
      injectRileyLinkBLE(arg0);
    }

    @CanIgnoreReturnValue
    private RileyLinkBLE injectRileyLinkBLE(RileyLinkBLE instance) {
      RileyLinkBLE_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkBLE_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RileyLinkBLE_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      RileyLinkBLE_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RileyLinkBLE_MembersInjector.injectOnInit(instance);
      return instance;
    }
  }

  private final class RFSpySubcomponentFactory implements RileyLinkModule_RfSpyProvider.RFSpySubcomponent.Factory {
    @Override
    public RileyLinkModule_RfSpyProvider.RFSpySubcomponent create(RFSpy arg0) {
      Preconditions.checkNotNull(arg0);
      return new RFSpySubcomponentImpl(arg0);
    }
  }

  private final class RFSpySubcomponentImpl implements RileyLinkModule_RfSpyProvider.RFSpySubcomponent {
    private RFSpySubcomponentImpl(RFSpy arg0) {

    }

    @Override
    public void inject(RFSpy arg0) {
      injectRFSpy(arg0);
    }

    @CanIgnoreReturnValue
    private RFSpy injectRFSpy(RFSpy instance) {
      RFSpy_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RFSpy_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      RFSpy_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RFSpy_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RFSpy_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      RFSpy_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      RFSpy_MembersInjector.injectOnInit(instance);
      return instance;
    }
  }

  private final class SendAndListenSubcomponentFactory implements RileyLinkModule_SendAndListenProvider.SendAndListenSubcomponent.Factory {
    @Override
    public RileyLinkModule_SendAndListenProvider.SendAndListenSubcomponent create(
        SendAndListen arg0) {
      Preconditions.checkNotNull(arg0);
      return new SendAndListenSubcomponentImpl(arg0);
    }
  }

  private final class SendAndListenSubcomponentImpl implements RileyLinkModule_SendAndListenProvider.SendAndListenSubcomponent {
    private SendAndListenSubcomponentImpl(SendAndListen arg0) {

    }

    @Override
    public void inject(SendAndListen arg0) {
      injectSendAndListen(arg0);
    }

    @CanIgnoreReturnValue
    private SendAndListen injectSendAndListen(SendAndListen instance) {
      SendAndListen_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      return instance;
    }
  }

  private final class SetPreambleSubcomponentFactory implements RileyLinkModule_SetPreambleProvider.SetPreambleSubcomponent.Factory {
    @Override
    public RileyLinkModule_SetPreambleProvider.SetPreambleSubcomponent create(SetPreamble arg0) {
      Preconditions.checkNotNull(arg0);
      return new SetPreambleSubcomponentImpl(arg0);
    }
  }

  private final class SetPreambleSubcomponentImpl implements RileyLinkModule_SetPreambleProvider.SetPreambleSubcomponent {
    private SetPreambleSubcomponentImpl(SetPreamble arg0) {

    }

    @Override
    public void inject(SetPreamble arg0) {
      injectSetPreamble(arg0);
    }

    @CanIgnoreReturnValue
    private SetPreamble injectSetPreamble(SetPreamble instance) {
      SetPreamble_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      return instance;
    }
  }

  private final class RadioPacketSubcomponentFactory implements RileyLinkModule_RadioPacketProvider.RadioPacketSubcomponent.Factory {
    @Override
    public RileyLinkModule_RadioPacketProvider.RadioPacketSubcomponent create(RadioPacket arg0) {
      Preconditions.checkNotNull(arg0);
      return new RadioPacketSubcomponentImpl(arg0);
    }
  }

  private final class RadioPacketSubcomponentImpl implements RileyLinkModule_RadioPacketProvider.RadioPacketSubcomponent {
    private RadioPacketSubcomponentImpl(RadioPacket arg0) {

    }

    @Override
    public void inject(RadioPacket arg0) {
      injectRadioPacket(arg0);
    }

    @CanIgnoreReturnValue
    private RadioPacket injectRadioPacket(RadioPacket instance) {
      RadioPacket_MembersInjector.injectRileyLinkUtil(instance, DaggerAppComponent.this.rileyLinkUtilProvider.get());
      return instance;
    }
  }

  private final class MedtronicCommunicationManagerSubcomponentFactory implements MedtronicModule_MedtronicCommunicationManagerProvider.MedtronicCommunicationManagerSubcomponent.Factory {
    @Override
    public MedtronicModule_MedtronicCommunicationManagerProvider.MedtronicCommunicationManagerSubcomponent create(
        MedtronicCommunicationManager arg0) {
      Preconditions.checkNotNull(arg0);
      return new MedtronicCommunicationManagerSubcomponentImpl(arg0);
    }
  }

  private final class MedtronicCommunicationManagerSubcomponentImpl implements MedtronicModule_MedtronicCommunicationManagerProvider.MedtronicCommunicationManagerSubcomponent {
    private MedtronicCommunicationManagerSubcomponentImpl(MedtronicCommunicationManager arg0) {

    }

    @Override
    public void inject(MedtronicCommunicationManager arg0) {
      injectMedtronicCommunicationManager(arg0);
    }

    @CanIgnoreReturnValue
    private MedtronicCommunicationManager injectMedtronicCommunicationManager(
        MedtronicCommunicationManager instance) {
      RileyLinkCommunicationManager_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectServiceTaskExecutor(instance, DaggerAppComponent.this.serviceTaskExecutorProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectRfspy(instance, DaggerAppComponent.this.rFSpyProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      RileyLinkCommunicationManager_MembersInjector.injectActivePluginProvider(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MedtronicCommunicationManager_MembersInjector.injectMedtronicPumpStatus(instance, DaggerAppComponent.this.medtronicPumpStatusProvider.get());
      MedtronicCommunicationManager_MembersInjector.injectMedtronicPumpPlugin(instance, DaggerAppComponent.this.medtronicPumpPluginProvider.get());
      MedtronicCommunicationManager_MembersInjector.injectMedtronicConverter(instance, DaggerAppComponent.this.medtronicConverterProvider.get());
      MedtronicCommunicationManager_MembersInjector.injectMedtronicUtil(instance, DaggerAppComponent.this.medtronicUtilProvider.get());
      MedtronicCommunicationManager_MembersInjector.injectMedtronicPumpHistoryDecoder(instance, DaggerAppComponent.this.medtronicPumpHistoryDecoderProvider.get());
      MedtronicCommunicationManager_MembersInjector.injectOnInit(instance);
      return instance;
    }
  }

  private final class MedtronicUITaskSubcomponentFactory implements MedtronicModule_MedtronicUITaskProvider.MedtronicUITaskSubcomponent.Factory {
    @Override
    public MedtronicModule_MedtronicUITaskProvider.MedtronicUITaskSubcomponent create(
        MedtronicUITask arg0) {
      Preconditions.checkNotNull(arg0);
      return new MedtronicUITaskSubcomponentImpl(arg0);
    }
  }

  private final class MedtronicUITaskSubcomponentImpl implements MedtronicModule_MedtronicUITaskProvider.MedtronicUITaskSubcomponent {
    private MedtronicUITaskSubcomponentImpl(MedtronicUITask arg0) {

    }

    @Override
    public void inject(MedtronicUITask arg0) {
      injectMedtronicUITask(arg0);
    }

    @CanIgnoreReturnValue
    private MedtronicUITask injectMedtronicUITask(MedtronicUITask instance) {
      MedtronicUITask_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MedtronicUITask_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MedtronicUITask_MembersInjector.injectMedtronicPumpStatus(instance, DaggerAppComponent.this.medtronicPumpStatusProvider.get());
      MedtronicUITask_MembersInjector.injectMedtronicUtil(instance, DaggerAppComponent.this.medtronicUtilProvider.get());
      return instance;
    }
  }

  private final class PodManagementActivitySubcomponentFactory implements OmnipodModule_ContributesPodManagementActivity.PodManagementActivitySubcomponent.Factory {
    @Override
    public OmnipodModule_ContributesPodManagementActivity.PodManagementActivitySubcomponent create(
        PodManagementActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PodManagementActivitySubcomponentImpl(arg0);
    }
  }

  private final class PodManagementActivitySubcomponentImpl implements OmnipodModule_ContributesPodManagementActivity.PodManagementActivitySubcomponent {
    private PodManagementActivitySubcomponentImpl(PodManagementActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(PodManagementActivity arg0) {
      injectPodManagementActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PodManagementActivity injectPodManagementActivity(PodManagementActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      PodManagementActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      PodManagementActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      PodManagementActivity_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      PodManagementActivity_MembersInjector.injectPodStateManager(instance, DaggerAppComponent.this.podStateManager());
      PodManagementActivity_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      PodManagementActivity_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      PodManagementActivity_MembersInjector.injectAapsOmnipodManager(instance, DaggerAppComponent.this.aapsOmnipodManagerProvider.get());
      PodManagementActivity_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      PodManagementActivity_MembersInjector.injectOmnipodPumpPlugin(instance, DaggerAppComponent.this.omnipodPumpPluginProvider.get());
      PodManagementActivity_MembersInjector.injectServiceTaskExecutor(instance, DaggerAppComponent.this.serviceTaskExecutorProvider.get());
      return instance;
    }
  }

  private final class PodHistoryActivitySubcomponentFactory implements OmnipodModule_ContributesPodHistoryActivity.PodHistoryActivitySubcomponent.Factory {
    @Override
    public OmnipodModule_ContributesPodHistoryActivity.PodHistoryActivitySubcomponent create(
        PodHistoryActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PodHistoryActivitySubcomponentImpl(arg0);
    }
  }

  private final class PodHistoryActivitySubcomponentImpl implements OmnipodModule_ContributesPodHistoryActivity.PodHistoryActivitySubcomponent {
    private PodHistoryActivitySubcomponentImpl(PodHistoryActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(PodHistoryActivity arg0) {
      injectPodHistoryActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PodHistoryActivity injectPodHistoryActivity(PodHistoryActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      PodHistoryActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      PodHistoryActivity_MembersInjector.injectAapsOmnipodUtil(instance, DaggerAppComponent.this.aapsOmnipodUtilProvider.get());
      PodHistoryActivity_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      PodHistoryActivity_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class PodActivationWizardActivitySubcomponentFactory implements OmnipodModule_ContributesActivationWizardActivity.PodActivationWizardActivitySubcomponent.Factory {
    @Override
    public OmnipodModule_ContributesActivationWizardActivity.PodActivationWizardActivitySubcomponent create(
        PodActivationWizardActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PodActivationWizardActivitySubcomponentImpl(arg0);
    }
  }

  private final class PodActivationWizardActivitySubcomponentImpl implements OmnipodModule_ContributesActivationWizardActivity.PodActivationWizardActivitySubcomponent {
    private Provider<OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent.Factory> deactivatePodActionFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent.Factory> insertCannulaActionFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent.Factory> initializePodActionFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent.Factory> attachPodInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent.Factory> deactivatePodInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent.Factory> fillPodInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent.Factory> podDeactivatedInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent.Factory> podDiscardedInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent.Factory> podActivatedInfoFragmentSubcomponentFactoryProvider;

    private Provider<InitializePodActionViewModel> initializePodActionViewModelProvider;

    private Provider<InsertCannulaActionViewModel> insertCannulaActionViewModelProvider;

    private Provider<DeactivatePodActionViewModel> deactivatePodActionViewModelProvider;

    private PodActivationWizardActivitySubcomponentImpl(PodActivationWizardActivity arg0) {

      initialize(arg0);
    }

    private Map<Class<?>, Provider<AndroidInjector.Factory<?>>> mapOfClassOfAndProviderOfAndroidInjectorFactoryOf(
        ) {
      return ImmutableMap.<Class<?>, Provider<AndroidInjector.Factory<?>>>builderWithExpectedSize(420).put(HistoryBrowseActivity.class, (Provider) DaggerAppComponent.this.historyBrowseActivitySubcomponentFactoryProvider).put(InsightAlertActivity.class, (Provider) DaggerAppComponent.this.insightAlertActivitySubcomponentFactoryProvider).put(InsightPairingActivity.class, (Provider) DaggerAppComponent.this.insightPairingActivitySubcomponentFactoryProvider).put(InsightPairingInformationActivity.class, (Provider) DaggerAppComponent.this.insightPairingInformationActivitySubcomponentFactoryProvider).put(LogSettingActivity.class, (Provider) DaggerAppComponent.this.logSettingActivitySubcomponentFactoryProvider).put(MainActivity.class, (Provider) DaggerAppComponent.this.mainActivitySubcomponentFactoryProvider).put(MedtronicHistoryActivity.class, (Provider) DaggerAppComponent.this.medtronicHistoryActivitySubcomponentFactoryProvider).put(PreferencesActivity.class, (Provider) DaggerAppComponent.this.preferencesActivitySubcomponentFactoryProvider).put(QuickWizardListActivity.class, (Provider) DaggerAppComponent.this.quickWizardListActivitySubcomponentFactoryProvider).put(RequestDexcomPermissionActivity.class, (Provider) DaggerAppComponent.this.requestDexcomPermissionActivitySubcomponentFactoryProvider).put(RileyLinkStatusActivity.class, (Provider) DaggerAppComponent.this.rileyLinkStatusActivitySubcomponentFactoryProvider).put(RileyLinkBLEConfigActivity.class, (Provider) DaggerAppComponent.this.rileyLinkBLEConfigActivitySubcomponentFactoryProvider).put(SetupWizardActivity.class, (Provider) DaggerAppComponent.this.setupWizardActivitySubcomponentFactoryProvider).put(SingleFragmentActivity.class, (Provider) DaggerAppComponent.this.singleFragmentActivitySubcomponentFactoryProvider).put(SmsCommunicatorOtpActivity.class, (Provider) DaggerAppComponent.this.smsCommunicatorOtpActivitySubcomponentFactoryProvider).put(StatsActivity.class, (Provider) DaggerAppComponent.this.statsActivitySubcomponentFactoryProvider).put(SurveyActivity.class, (Provider) DaggerAppComponent.this.surveyActivitySubcomponentFactoryProvider).put(ProfileHelperActivity.class, (Provider) DaggerAppComponent.this.profileHelperActivitySubcomponentFactoryProvider).put(OpenHumansLoginActivity.class, (Provider) DaggerAppComponent.this.openHumansLoginActivitySubcomponentFactoryProvider).put(MyPreferenceFragment.class, (Provider) DaggerAppComponent.this.myPreferenceFragmentSubcomponentFactoryProvider).put(ActionsFragment.class, (Provider) DaggerAppComponent.this.actionsFragmentSubcomponentFactoryProvider).put(AutomationFragment.class, (Provider) DaggerAppComponent.this.automationFragmentSubcomponentFactoryProvider).put(BGSourceFragment.class, (Provider) DaggerAppComponent.this.bGSourceFragmentSubcomponentFactoryProvider).put(ComboFragment.class, (Provider) DaggerAppComponent.this.comboFragmentSubcomponentFactoryProvider).put(ConfigBuilderFragment.class, (Provider) DaggerAppComponent.this.configBuilderFragmentSubcomponentFactoryProvider).put(FoodFragment.class, (Provider) DaggerAppComponent.this.foodFragmentSubcomponentFactoryProvider).put(InsulinFragment.class, (Provider) DaggerAppComponent.this.insulinFragmentSubcomponentFactoryProvider).put(LocalProfileFragment.class, (Provider) DaggerAppComponent.this.localProfileFragmentSubcomponentFactoryProvider).put(ObjectivesFragment.class, (Provider) DaggerAppComponent.this.objectivesFragmentSubcomponentFactoryProvider).put(OpenAPSAMAFragment.class, (Provider) DaggerAppComponent.this.openAPSAMAFragmentSubcomponentFactoryProvider).put(OpenAPSSMBFragment.class, (Provider) DaggerAppComponent.this.openAPSSMBFragmentSubcomponentFactoryProvider).put(OverviewFragment.class, (Provider) DaggerAppComponent.this.overviewFragmentSubcomponentFactoryProvider).put(LocalInsightFragment.class, (Provider) DaggerAppComponent.this.localInsightFragmentSubcomponentFactoryProvider).put(LoopFragment.class, (Provider) DaggerAppComponent.this.loopFragmentSubcomponentFactoryProvider).put(MaintenanceFragment.class, (Provider) DaggerAppComponent.this.maintenanceFragmentSubcomponentFactoryProvider).put(MedtronicFragment.class, (Provider) DaggerAppComponent.this.medtronicFragmentSubcomponentFactoryProvider).put(OmnipodOverviewFragment.class, (Provider) DaggerAppComponent.this.omnipodOverviewFragmentSubcomponentFactoryProvider).put(NSProfileFragment.class, (Provider) DaggerAppComponent.this.nSProfileFragmentSubcomponentFactoryProvider).put(NSClientFragment.class, (Provider) DaggerAppComponent.this.nSClientFragmentSubcomponentFactoryProvider).put(SmsCommunicatorFragment.class, (Provider) DaggerAppComponent.this.smsCommunicatorFragmentSubcomponentFactoryProvider).put(WearFragment.class, (Provider) DaggerAppComponent.this.wearFragmentSubcomponentFactoryProvider).put(TidepoolFragment.class, (Provider) DaggerAppComponent.this.tidepoolFragmentSubcomponentFactoryProvider).put(TreatmentsFragment.class, (Provider) DaggerAppComponent.this.treatmentsFragmentSubcomponentFactoryProvider).put(TreatmentsBolusFragment.class, (Provider) DaggerAppComponent.this.treatmentsBolusFragmentSubcomponentFactoryProvider).put(TreatmentsTemporaryBasalsFragment.class, (Provider) DaggerAppComponent.this.treatmentsTemporaryBasalsFragmentSubcomponentFactoryProvider).put(TreatmentsTempTargetFragment.class, (Provider) DaggerAppComponent.this.treatmentsTempTargetFragmentSubcomponentFactoryProvider).put(TreatmentsExtendedBolusesFragment.class, (Provider) DaggerAppComponent.this.treatmentsExtendedBolusesFragmentSubcomponentFactoryProvider).put(TreatmentsCareportalFragment.class, (Provider) DaggerAppComponent.this.treatmentsCareportalFragmentSubcomponentFactoryProvider).put(TreatmentsProfileSwitchFragment.class, (Provider) DaggerAppComponent.this.treatmentsProfileSwitchFragmentSubcomponentFactoryProvider).put(VirtualPumpFragment.class, (Provider) DaggerAppComponent.this.virtualPumpFragmentSubcomponentFactoryProvider).put(OpenHumansFragment.class, (Provider) DaggerAppComponent.this.openHumansFragmentSubcomponentFactoryProvider).put(CalibrationDialog.class, (Provider) DaggerAppComponent.this.calibrationDialogSubcomponentFactoryProvider).put(CarbsDialog.class, (Provider) DaggerAppComponent.this.carbsDialogSubcomponentFactoryProvider).put(CareDialog.class, (Provider) DaggerAppComponent.this.careDialogSubcomponentFactoryProvider).put(EditActionDialog.class, (Provider) DaggerAppComponent.this.editActionDialogSubcomponentFactoryProvider).put(EditEventDialog.class, (Provider) DaggerAppComponent.this.editEventDialogSubcomponentFactoryProvider).put(EditTriggerDialog.class, (Provider) DaggerAppComponent.this.editTriggerDialogSubcomponentFactoryProvider).put(EditQuickWizardDialog.class, (Provider) DaggerAppComponent.this.editQuickWizardDialogSubcomponentFactoryProvider).put(ExtendedBolusDialog.class, (Provider) DaggerAppComponent.this.extendedBolusDialogSubcomponentFactoryProvider).put(FillDialog.class, (Provider) DaggerAppComponent.this.fillDialogSubcomponentFactoryProvider).put(ChooseActionDialog.class, (Provider) DaggerAppComponent.this.chooseActionDialogSubcomponentFactoryProvider).put(ChooseTriggerDialog.class, (Provider) DaggerAppComponent.this.chooseTriggerDialogSubcomponentFactoryProvider).put(InsulinDialog.class, (Provider) DaggerAppComponent.this.insulinDialogSubcomponentFactoryProvider).put(UAMDialog.class, (Provider) DaggerAppComponent.this.uAMDialogSubcomponentFactoryProvider).put(LoopDialog.class, (Provider) DaggerAppComponent.this.loopDialogSubcomponentFactoryProvider).put(ObjectivesExamDialog.class, (Provider) DaggerAppComponent.this.objectivesExamDialogSubcomponentFactoryProvider).put(ProfileSwitchDialog.class, (Provider) DaggerAppComponent.this.profileSwitchDialogSubcomponentFactoryProvider).put(TempBasalDialog.class, (Provider) DaggerAppComponent.this.tempBasalDialogSubcomponentFactoryProvider).put(TempTargetDialog.class, (Provider) DaggerAppComponent.this.tempTargetDialogSubcomponentFactoryProvider).put(TreatmentDialog.class, (Provider) DaggerAppComponent.this.treatmentDialogSubcomponentFactoryProvider).put(WizardDialog.class, (Provider) DaggerAppComponent.this.wizardDialogSubcomponentFactoryProvider).put(WizardInfoDialog.class, (Provider) DaggerAppComponent.this.wizardInfoDialogSubcomponentFactoryProvider).put(OpenHumansLoginActivity.ExchangeAuthTokenDialog.class, (Provider) DaggerAppComponent.this.exchangeAuthTokenDialogSubcomponentFactoryProvider).put(PasswordCheck.class, (Provider) DaggerAppComponent.this.passwordCheckSubcomponentFactoryProvider).put(RileyLinkStatusGeneralFragment.class, (Provider) DaggerAppComponent.this.rileyLinkStatusGeneralFragmentSubcomponentFactoryProvider).put(RileyLinkStatusHistoryFragment.class, (Provider) DaggerAppComponent.this.rileyLinkStatusHistoryFragmentSubcomponentFactoryProvider).put(RileyLinkStatusDeviceMedtronic.class, (Provider) DaggerAppComponent.this.rileyLinkStatusDeviceMedtronicSubcomponentFactoryProvider).put(AutoStartReceiver.class, (Provider) DaggerAppComponent.this.autoStartReceiverSubcomponentFactoryProvider).put(BTReceiver.class, (Provider) DaggerAppComponent.this.bTReceiverSubcomponentFactoryProvider).put(ChargingStateReceiver.class, (Provider) DaggerAppComponent.this.chargingStateReceiverSubcomponentFactoryProvider).put(DataReceiver.class, (Provider) DaggerAppComponent.this.dataReceiverSubcomponentFactoryProvider).put(KeepAliveReceiver.class, (Provider) DaggerAppComponent.this.keepAliveReceiverSubcomponentFactoryProvider).put(RileyLinkBluetoothStateReceiver.class, (Provider) DaggerAppComponent.this.rileyLinkBluetoothStateReceiverSubcomponentFactoryProvider).put(SmsReceiver.class, (Provider) DaggerAppComponent.this.smsReceiverSubcomponentFactoryProvider).put(TimeDateOrTZChangeReceiver.class, (Provider) DaggerAppComponent.this.timeDateOrTZChangeReceiverSubcomponentFactoryProvider).put(CarbSuggestionReceiver.class, (Provider) DaggerAppComponent.this.carbSuggestionReceiverSubcomponentFactoryProvider).put(RileyLinkBroadcastReceiver.class, (Provider) DaggerAppComponent.this.rileyLinkBroadcastReceiverSubcomponentFactoryProvider).put(AlarmSoundService.class, (Provider) DaggerAppComponent.this.alarmSoundServiceSubcomponentFactoryProvider).put(DataService.class, (Provider) DaggerAppComponent.this.dataServiceSubcomponentFactoryProvider).put(DismissNotificationService.class, (Provider) DaggerAppComponent.this.dismissNotificationServiceSubcomponentFactoryProvider).put(DummyService.class, (Provider) DaggerAppComponent.this.dummyServiceSubcomponentFactoryProvider).put(LocationService.class, (Provider) DaggerAppComponent.this.locationServiceSubcomponentFactoryProvider).put(NSClientService.class, (Provider) DaggerAppComponent.this.nSClientServiceSubcomponentFactoryProvider).put(WatchUpdaterService.class, (Provider) DaggerAppComponent.this.watchUpdaterServiceSubcomponentFactoryProvider).put(InsightAlertService.class, (Provider) DaggerAppComponent.this.insightAlertServiceSubcomponentFactoryProvider).put(InsightConnectionService.class, (Provider) DaggerAppComponent.this.insightConnectionServiceSubcomponentFactoryProvider).put(RileyLinkService.class, (Provider) DaggerAppComponent.this.rileyLinkServiceSubcomponentFactoryProvider).put(RileyLinkMedtronicService.class, (Provider) DaggerAppComponent.this.rileyLinkMedtronicServiceSubcomponentFactoryProvider).put(RileyLinkOmnipodService.class, (Provider) DaggerAppComponent.this.rileyLinkOmnipodServiceSubcomponentFactoryProvider).put(AutomationEvent.class, (Provider) DaggerAppComponent.this.automationEventSubcomponentFactoryProvider).put(Trigger.class, (Provider) DaggerAppComponent.this.triggerSubcomponentFactoryProvider).put(TriggerAutosensValue.class, (Provider) DaggerAppComponent.this.triggerAutosensValueSubcomponentFactoryProvider).put(TriggerBg.class, (Provider) DaggerAppComponent.this.triggerBgSubcomponentFactoryProvider).put(TriggerBolusAgo.class, (Provider) DaggerAppComponent.this.triggerBolusAgoSubcomponentFactoryProvider).put(TriggerCOB.class, (Provider) DaggerAppComponent.this.triggerCOBSubcomponentFactoryProvider).put(TriggerConnector.class, (Provider) DaggerAppComponent.this.triggerConnectorSubcomponentFactoryProvider).put(TriggerDelta.class, (Provider) DaggerAppComponent.this.triggerDeltaSubcomponentFactoryProvider).put(TriggerDummy.class, (Provider) DaggerAppComponent.this.triggerDummySubcomponentFactoryProvider).put(TriggerIob.class, (Provider) DaggerAppComponent.this.triggerIobSubcomponentFactoryProvider).put(TriggerLocation.class, (Provider) DaggerAppComponent.this.triggerLocationSubcomponentFactoryProvider).put(TriggerProfilePercent.class, (Provider) DaggerAppComponent.this.triggerProfilePercentSubcomponentFactoryProvider).put(TriggerPumpLastConnection.class, (Provider) DaggerAppComponent.this.triggerPumpLastConnectionSubcomponentFactoryProvider).put(TriggerBTDevice.class, (Provider) DaggerAppComponent.this.triggerBTDeviceSubcomponentFactoryProvider).put(TriggerRecurringTime.class, (Provider) DaggerAppComponent.this.triggerRecurringTimeSubcomponentFactoryProvider).put(TriggerTempTarget.class, (Provider) DaggerAppComponent.this.triggerTempTargetSubcomponentFactoryProvider).put(TriggerTime.class, (Provider) DaggerAppComponent.this.triggerTimeSubcomponentFactoryProvider).put(TriggerTimeRange.class, (Provider) DaggerAppComponent.this.triggerTimeRangeSubcomponentFactoryProvider).put(TriggerWifiSsid.class, (Provider) DaggerAppComponent.this.triggerWifiSsidSubcomponentFactoryProvider).put(Action.class, (Provider) DaggerAppComponent.this.actionSubcomponentFactoryProvider).put(ActionLoopDisable.class, (Provider) DaggerAppComponent.this.actionLoopDisableSubcomponentFactoryProvider).put(ActionLoopEnable.class, (Provider) DaggerAppComponent.this.actionLoopEnableSubcomponentFactoryProvider).put(ActionLoopResume.class, (Provider) DaggerAppComponent.this.actionLoopResumeSubcomponentFactoryProvider).put(ActionLoopSuspend.class, (Provider) DaggerAppComponent.this.actionLoopSuspendSubcomponentFactoryProvider).put(ActionNotification.class, (Provider) DaggerAppComponent.this.actionNotificationSubcomponentFactoryProvider).put(ActionAlarm.class, (Provider) DaggerAppComponent.this.actionAlarmSubcomponentFactoryProvider).put(ActionProfileSwitch.class, (Provider) DaggerAppComponent.this.actionProfileSwitchSubcomponentFactoryProvider).put(ActionProfileSwitchPercent.class, (Provider) DaggerAppComponent.this.actionProfileSwitchPercentSubcomponentFactoryProvider).put(ActionSendSMS.class, (Provider) DaggerAppComponent.this.actionSendSMSSubcomponentFactoryProvider).put(ActionStartTempTarget.class, (Provider) DaggerAppComponent.this.actionStartTempTargetSubcomponentFactoryProvider).put(ActionStopTempTarget.class, (Provider) DaggerAppComponent.this.actionStopTempTargetSubcomponentFactoryProvider).put(ActionDummy.class, (Provider) DaggerAppComponent.this.actionDummySubcomponentFactoryProvider).put(Element.class, (Provider) DaggerAppComponent.this.elementSubcomponentFactoryProvider).put(InputBg.class, (Provider) DaggerAppComponent.this.inputBgSubcomponentFactoryProvider).put(InputButton.class, (Provider) DaggerAppComponent.this.inputButtonSubcomponentFactoryProvider).put(Comparator.class, (Provider) DaggerAppComponent.this.comparatorSubcomponentFactoryProvider).put(ComparatorConnect.class, (Provider) DaggerAppComponent.this.comparatorConnectSubcomponentFactoryProvider).put(ComparatorExists.class, (Provider) DaggerAppComponent.this.comparatorExistsSubcomponentFactoryProvider).put(InputDateTime.class, (Provider) DaggerAppComponent.this.inputDateTimeSubcomponentFactoryProvider).put(InputDelta.class, (Provider) DaggerAppComponent.this.inputDeltaSubcomponentFactoryProvider).put(InputDouble.class, (Provider) DaggerAppComponent.this.inputDoubleSubcomponentFactoryProvider).put(InputDropdownMenu.class, (Provider) DaggerAppComponent.this.inputDropdownMenuSubcomponentFactoryProvider).put(InputDuration.class, (Provider) DaggerAppComponent.this.inputDurationSubcomponentFactoryProvider).put(InputInsulin.class, (Provider) DaggerAppComponent.this.inputInsulinSubcomponentFactoryProvider).put(InputLocationMode.class, (Provider) DaggerAppComponent.this.inputLocationModeSubcomponentFactoryProvider).put(InputPercent.class, (Provider) DaggerAppComponent.this.inputPercentSubcomponentFactoryProvider).put(InputProfileName.class, (Provider) DaggerAppComponent.this.inputProfileNameSubcomponentFactoryProvider).put(InputString.class, (Provider) DaggerAppComponent.this.inputStringSubcomponentFactoryProvider).put(InputTempTarget.class, (Provider) DaggerAppComponent.this.inputTempTargetSubcomponentFactoryProvider).put(InputTimeRange.class, (Provider) DaggerAppComponent.this.inputTimeRangeSubcomponentFactoryProvider).put(InputTime.class, (Provider) DaggerAppComponent.this.inputTimeSubcomponentFactoryProvider).put(InputWeekDay.class, (Provider) DaggerAppComponent.this.inputWeekDaySubcomponentFactoryProvider).put(LabelWithElement.class, (Provider) DaggerAppComponent.this.labelWithElementSubcomponentFactoryProvider).put(StaticLabel.class, (Provider) DaggerAppComponent.this.staticLabelSubcomponentFactoryProvider).put(CommandQueue.class, (Provider) DaggerAppComponent.this.commandQueueSubcomponentFactoryProvider).put(CommandBolus.class, (Provider) DaggerAppComponent.this.commandBolusSubcomponentFactoryProvider).put(CommandCancelExtendedBolus.class, (Provider) DaggerAppComponent.this.commandCancelExtendedBolusSubcomponentFactoryProvider).put(CommandCancelTempBasal.class, (Provider) DaggerAppComponent.this.commandCancelTempBasalSubcomponentFactoryProvider).put(CommandExtendedBolus.class, (Provider) DaggerAppComponent.this.commandExtendedBolusSubcomponentFactoryProvider).put(CommandInsightSetTBROverNotification.class, (Provider) DaggerAppComponent.this.commandInsightSetTBROverNotificationSubcomponentFactoryProvider).put(CommandLoadEvents.class, (Provider) DaggerAppComponent.this.commandLoadEventsSubcomponentFactoryProvider).put(CommandLoadHistory.class, (Provider) DaggerAppComponent.this.commandLoadHistorySubcomponentFactoryProvider).put(CommandLoadTDDs.class, (Provider) DaggerAppComponent.this.commandLoadTDDsSubcomponentFactoryProvider).put(CommandReadStatus.class, (Provider) DaggerAppComponent.this.commandReadStatusSubcomponentFactoryProvider).put(CommandSetProfile.class, (Provider) DaggerAppComponent.this.commandSetProfileSubcomponentFactoryProvider).put(CommandSMBBolus.class, (Provider) DaggerAppComponent.this.commandSMBBolusSubcomponentFactoryProvider).put(CommandStartPump.class, (Provider) DaggerAppComponent.this.commandStartPumpSubcomponentFactoryProvider).put(CommandStopPump.class, (Provider) DaggerAppComponent.this.commandStopPumpSubcomponentFactoryProvider).put(CommandTempBasalAbsolute.class, (Provider) DaggerAppComponent.this.commandTempBasalAbsoluteSubcomponentFactoryProvider).put(CommandTempBasalPercent.class, (Provider) DaggerAppComponent.this.commandTempBasalPercentSubcomponentFactoryProvider).put(CommandSetUserSettings.class, (Provider) DaggerAppComponent.this.commandSetUserSettingsSubcomponentFactoryProvider).put(CommandCustomCommand.class, (Provider) DaggerAppComponent.this.commandCustomCommandSubcomponentFactoryProvider).put(Objective.class, (Provider) DaggerAppComponent.this.objectiveSubcomponentFactoryProvider).put(Objective0.class, (Provider) DaggerAppComponent.this.objective0SubcomponentFactoryProvider).put(Objective1.class, (Provider) DaggerAppComponent.this.objective1SubcomponentFactoryProvider).put(Objective2.class, (Provider) DaggerAppComponent.this.objective2SubcomponentFactoryProvider).put(Objective3.class, (Provider) DaggerAppComponent.this.objective3SubcomponentFactoryProvider).put(Objective4.class, (Provider) DaggerAppComponent.this.objective4SubcomponentFactoryProvider).put(Objective5.class, (Provider) DaggerAppComponent.this.objective5SubcomponentFactoryProvider).put(Objective6.class, (Provider) DaggerAppComponent.this.objective6SubcomponentFactoryProvider).put(Objective7.class, (Provider) DaggerAppComponent.this.objective7SubcomponentFactoryProvider).put(Objective8.class, (Provider) DaggerAppComponent.this.objective8SubcomponentFactoryProvider).put(Objective9.class, (Provider) DaggerAppComponent.this.objective9SubcomponentFactoryProvider).put(Objective10.class, (Provider) DaggerAppComponent.this.objective10SubcomponentFactoryProvider).put(SWBreak.class, (Provider) DaggerAppComponent.this.sWBreakSubcomponentFactoryProvider).put(SWButton.class, (Provider) DaggerAppComponent.this.sWButtonSubcomponentFactoryProvider).put(SWEditNumberWithUnits.class, (Provider) DaggerAppComponent.this.sWEditNumberWithUnitsSubcomponentFactoryProvider).put(SWEditString.class, (Provider) DaggerAppComponent.this.sWEditStringSubcomponentFactoryProvider).put(SWEditEncryptedPassword.class, (Provider) DaggerAppComponent.this.sWEditEncryptedPasswordSubcomponentFactoryProvider).put(SWEditUrl.class, (Provider) DaggerAppComponent.this.sWEditUrlSubcomponentFactoryProvider).put(SWFragment.class, (Provider) DaggerAppComponent.this.sWFragmentSubcomponentFactoryProvider).put(SWHtmlLink.class, (Provider) DaggerAppComponent.this.sWHtmlLinkSubcomponentFactoryProvider).put(SWInfotext.class, (Provider) DaggerAppComponent.this.sWInfotextSubcomponentFactoryProvider).put(SWItem.class, (Provider) DaggerAppComponent.this.sWItemSubcomponentFactoryProvider).put(SWPlugin.class, (Provider) DaggerAppComponent.this.sWPluginSubcomponentFactoryProvider).put(SWRadioButton.class, (Provider) DaggerAppComponent.this.sWRadioButtonSubcomponentFactoryProvider).put(SWScreen.class, (Provider) DaggerAppComponent.this.sWScreenSubcomponentFactoryProvider).put(SWEventListener.class, (Provider) DaggerAppComponent.this.sWEventListenerSubcomponentFactoryProvider).put(ServiceTask.class, (Provider) DaggerAppComponent.this.serviceTaskSubcomponentFactoryProvider).put(PumpTask.class, (Provider) DaggerAppComponent.this.pumpTaskSubcomponentFactoryProvider).put(DiscoverGattServicesTask.class, (Provider) DaggerAppComponent.this.discoverGattServicesTaskSubcomponentFactoryProvider).put(InitializePumpManagerTask.class, (Provider) DaggerAppComponent.this.initializePumpManagerTaskSubcomponentFactoryProvider).put(ResetRileyLinkConfigurationTask.class, (Provider) DaggerAppComponent.this.resetRileyLinkConfigurationTaskSubcomponentFactoryProvider).put(WakeAndTuneTask.class, (Provider) DaggerAppComponent.this.wakeAndTuneTaskSubcomponentFactoryProvider).put(RadioResponse.class, (Provider) DaggerAppComponent.this.radioResponseSubcomponentFactoryProvider).put(RileyLinkBLE.class, (Provider) DaggerAppComponent.this.rileyLinkBLESubcomponentFactoryProvider).put(RFSpy.class, (Provider) DaggerAppComponent.this.rFSpySubcomponentFactoryProvider).put(SendAndListen.class, (Provider) DaggerAppComponent.this.sendAndListenSubcomponentFactoryProvider).put(SetPreamble.class, (Provider) DaggerAppComponent.this.setPreambleSubcomponentFactoryProvider).put(RadioPacket.class, (Provider) DaggerAppComponent.this.radioPacketSubcomponentFactoryProvider).put(MedtronicCommunicationManager.class, (Provider) DaggerAppComponent.this.medtronicCommunicationManagerSubcomponentFactoryProvider).put(MedtronicUITask.class, (Provider) DaggerAppComponent.this.medtronicUITaskSubcomponentFactoryProvider).put(PodManagementActivity.class, (Provider) DaggerAppComponent.this.podManagementActivitySubcomponentFactoryProvider).put(PodHistoryActivity.class, (Provider) DaggerAppComponent.this.podHistoryActivitySubcomponentFactoryProvider).put(PodActivationWizardActivity.class, (Provider) DaggerAppComponent.this.podActivationWizardActivitySubcomponentFactoryProvider).put(PodDeactivationWizardActivity.class, (Provider) DaggerAppComponent.this.podDeactivationWizardActivitySubcomponentFactoryProvider).put(OmnipodRileyLinkCommunicationManager.class, (Provider) DaggerAppComponent.this.omnipodRileyLinkCommunicationManagerSubcomponentFactoryProvider).put(RLHistoryItemOmnipod.class, (Provider) DaggerAppComponent.this.rLHistoryItemOmnipodSubcomponentFactoryProvider).put(LoggerCallback.class, (Provider) DaggerAppComponent.this.loggerCallbackSubcomponentFactoryProvider).put(DetermineBasalResultSMB.class, (Provider) DaggerAppComponent.this.determineBasalResultSMBSubcomponentFactoryProvider).put(DetermineBasalResultAMA.class, (Provider) DaggerAppComponent.this.determineBasalResultAMASubcomponentFactoryProvider).put(DetermineBasalAdapterAMAJS.class, (Provider) DaggerAppComponent.this.determineBasalAdapterAMAJSSubcomponentFactoryProvider).put(DetermineBasalAdapterSMBJS.class, (Provider) DaggerAppComponent.this.determineBasalAdapterSMBJSSubcomponentFactoryProvider).put(IobCobThread.class, (Provider) DaggerAppComponent.this.iobCobThreadSubcomponentFactoryProvider).put(IobCobOref1Thread.class, (Provider) DaggerAppComponent.this.iobCobOref1ThreadSubcomponentFactoryProvider).put(CryptoUtil.class, (Provider) DaggerAppComponent.this.cryptoUtilSubcomponentFactoryProvider).put(EncryptedPrefsFormat.class, (Provider) DaggerAppComponent.this.encryptedPrefsFormatSubcomponentFactoryProvider).put(ClassicPrefsFormat.class, (Provider) DaggerAppComponent.this.classicPrefsFormatSubcomponentFactoryProvider).put(PrefFileListProvider.class, (Provider) DaggerAppComponent.this.prefFileListProviderSubcomponentFactoryProvider).put(NotificationWithAction.class, (Provider) DaggerAppComponent.this.notificationWithActionSubcomponentFactoryProvider).put(GraphData.class, (Provider) DaggerAppComponent.this.graphDataSubcomponentFactoryProvider).put(GlucoseStatus.class, (Provider) DaggerAppComponent.this.glucoseStatusSubcomponentFactoryProvider).put(DatabaseHelper.class, (Provider) DaggerAppComponent.this.databaseHelperSubcomponentFactoryProvider).put(TreatmentService.class, (Provider) DaggerAppComponent.this.treatmentServiceSubcomponentFactoryProvider).put(FoodService.class, (Provider) DaggerAppComponent.this.foodServiceSubcomponentFactoryProvider).put(BolusWizard.class, (Provider) DaggerAppComponent.this.bolusWizardSubcomponentFactoryProvider).put(QuickWizardEntry.class, (Provider) DaggerAppComponent.this.quickWizardEntrySubcomponentFactoryProvider).put(AuthRequest.class, (Provider) DaggerAppComponent.this.authRequestSubcomponentFactoryProvider).put(SkinListPreference.class, (Provider) DaggerAppComponent.this.skinListPreferenceSubcomponentFactoryProvider).put(NetworkChangeReceiver.class, (Provider) DaggerAppComponent.this.networkChangeReceiverSubcomponentFactoryProvider).put(PrefImportListActivity.class, (Provider) DaggerAppComponent.this.prefImportListActivitySubcomponentFactoryProvider).put(TDDStatsActivity.class, (Provider) DaggerAppComponent.this.tDDStatsActivitySubcomponentFactoryProvider).put(BolusProgressHelperActivity.class, (Provider) DaggerAppComponent.this.bolusProgressHelperActivitySubcomponentFactoryProvider).put(ErrorHelperActivity.class, (Provider) DaggerAppComponent.this.errorHelperActivitySubcomponentFactoryProvider).put(BolusProgressDialog.class, (Provider) DaggerAppComponent.this.bolusProgressDialogSubcomponentFactoryProvider).put(ErrorDialog.class, (Provider) DaggerAppComponent.this.errorDialogSubcomponentFactoryProvider).put(NtpProgressDialog.class, (Provider) DaggerAppComponent.this.ntpProgressDialogSubcomponentFactoryProvider).put(ProfileViewerDialog.class, (Provider) DaggerAppComponent.this.profileViewerDialogSubcomponentFactoryProvider).put(PumpEnactResult.class, (Provider) DaggerAppComponent.this.pumpEnactResultSubcomponentFactoryProvider).put(APSResult.class, (Provider) DaggerAppComponent.this.aPSResultSubcomponentFactoryProvider).put(AutosensData.class, (Provider) DaggerAppComponent.this.autosensDataSubcomponentFactoryProvider).put(Profile.class, (Provider) DaggerAppComponent.this.profileSubcomponentFactoryProvider).put(ProfileStore.class, (Provider) DaggerAppComponent.this.profileStoreSubcomponentFactoryProvider).put(BgReading.class, (Provider) DaggerAppComponent.this.bgReadingSubcomponentFactoryProvider).put(Treatment.class, (Provider) DaggerAppComponent.this.treatmentSubcomponentFactoryProvider).put(ProfileSwitch.class, (Provider) DaggerAppComponent.this.profileSwitchSubcomponentFactoryProvider).put(TemporaryBasal.class, (Provider) DaggerAppComponent.this.temporaryBasalSubcomponentFactoryProvider).put(CareportalEvent.class, (Provider) DaggerAppComponent.this.careportalEventSubcomponentFactoryProvider).put(ExtendedBolus.class, (Provider) DaggerAppComponent.this.extendedBolusSubcomponentFactoryProvider).put(DanaFragment.class, (Provider) DaggerAppComponent.this.danaFragmentSubcomponentFactoryProvider).put(DanaHistoryActivity.class, (Provider) DaggerAppComponent.this.danaHistoryActivitySubcomponentFactoryProvider).put(DanaUserOptionsActivity.class, (Provider) DaggerAppComponent.this.danaUserOptionsActivitySubcomponentFactoryProvider).put(MessageBase.class, (Provider) DaggerAppComponent.this.messageBaseSubcomponentFactoryProvider).put(MsgSetTime.class, (Provider) DaggerAppComponent.this.msgSetTimeSubcomponentFactoryProvider).put(MsgBolusProgress.class, (Provider) DaggerAppComponent.this.msgBolusProgressSubcomponentFactoryProvider).put(MsgBolusStart.class, (Provider) DaggerAppComponent.this.msgBolusStartSubcomponentFactoryProvider).put(MsgBolusStartWithSpeed.class, (Provider) DaggerAppComponent.this.msgBolusStartWithSpeedSubcomponentFactoryProvider).put(MsgBolusStop.class, (Provider) DaggerAppComponent.this.msgBolusStopSubcomponentFactoryProvider).put(MsgCheckValue.class, (Provider) DaggerAppComponent.this.msgCheckValueSubcomponentFactoryProvider).put(MsgError.class, (Provider) DaggerAppComponent.this.msgErrorSubcomponentFactoryProvider).put(MsgHistoryAll.class, (Provider) DaggerAppComponent.this.msgHistoryAllSubcomponentFactoryProvider).put(MsgHistoryAllDone.class, (Provider) DaggerAppComponent.this.msgHistoryAllDoneSubcomponentFactoryProvider).put(MsgHistoryDone.class, (Provider) DaggerAppComponent.this.msgHistoryDoneSubcomponentFactoryProvider).put(MsgHistoryNewDone.class, (Provider) DaggerAppComponent.this.msgHistoryNewDoneSubcomponentFactoryProvider).put(MsgInitConnStatusBasic.class, (Provider) DaggerAppComponent.this.msgInitConnStatusBasicSubcomponentFactoryProvider).put(MsgInitConnStatusBolus.class, (Provider) DaggerAppComponent.this.msgInitConnStatusBolusSubcomponentFactoryProvider).put(MsgInitConnStatusOption.class, (Provider) DaggerAppComponent.this.msgInitConnStatusOptionSubcomponentFactoryProvider).put(MsgInitConnStatusTime.class, (Provider) DaggerAppComponent.this.msgInitConnStatusTimeSubcomponentFactoryProvider).put(MsgPCCommStart.class, (Provider) DaggerAppComponent.this.msgPCCommStartSubcomponentFactoryProvider).put(MsgPCCommStop.class, (Provider) DaggerAppComponent.this.msgPCCommStopSubcomponentFactoryProvider).put(MsgSetActivateBasalProfile.class, (Provider) DaggerAppComponent.this.msgSetActivateBasalProfileSubcomponentFactoryProvider).put(MsgSetBasalProfile.class, (Provider) DaggerAppComponent.this.msgSetBasalProfileSubcomponentFactoryProvider).put(MsgSetCarbsEntry.class, (Provider) DaggerAppComponent.this.msgSetCarbsEntrySubcomponentFactoryProvider).put(MsgSetExtendedBolusStart.class, (Provider) DaggerAppComponent.this.msgSetExtendedBolusStartSubcomponentFactoryProvider).put(MsgSetExtendedBolusStop.class, (Provider) DaggerAppComponent.this.msgSetExtendedBolusStopSubcomponentFactoryProvider).put(MsgSetSingleBasalProfile.class, (Provider) DaggerAppComponent.this.msgSetSingleBasalProfileSubcomponentFactoryProvider).put(MsgSetTempBasalStart.class, (Provider) DaggerAppComponent.this.msgSetTempBasalStartSubcomponentFactoryProvider).put(MsgSetTempBasalStop.class, (Provider) DaggerAppComponent.this.msgSetTempBasalStopSubcomponentFactoryProvider).put(MsgSetUserOptions.class, (Provider) DaggerAppComponent.this.msgSetUserOptionsSubcomponentFactoryProvider).put(MsgSettingActiveProfile.class, (Provider) DaggerAppComponent.this.msgSettingActiveProfileSubcomponentFactoryProvider).put(MsgSettingBasal.class, (Provider) DaggerAppComponent.this.msgSettingBasalSubcomponentFactoryProvider).put(MsgSettingBasalProfileAll.class, (Provider) DaggerAppComponent.this.msgSettingBasalProfileAllSubcomponentFactoryProvider).put(MsgSettingGlucose.class, (Provider) DaggerAppComponent.this.msgSettingGlucoseSubcomponentFactoryProvider).put(MsgSettingMaxValues.class, (Provider) DaggerAppComponent.this.msgSettingMaxValuesSubcomponentFactoryProvider).put(MsgSettingMeal.class, (Provider) DaggerAppComponent.this.msgSettingMealSubcomponentFactoryProvider).put(MsgSettingProfileRatios.class, (Provider) DaggerAppComponent.this.msgSettingProfileRatiosSubcomponentFactoryProvider).put(MsgSettingProfileRatiosAll.class, (Provider) DaggerAppComponent.this.msgSettingProfileRatiosAllSubcomponentFactoryProvider).put(MsgSettingPumpTime.class, (Provider) DaggerAppComponent.this.msgSettingPumpTimeSubcomponentFactoryProvider).put(MsgSettingShippingInfo.class, (Provider) DaggerAppComponent.this.msgSettingShippingInfoSubcomponentFactoryProvider).put(MsgSettingUserOptions.class, (Provider) DaggerAppComponent.this.msgSettingUserOptionsSubcomponentFactoryProvider).put(MsgStatus.class, (Provider) DaggerAppComponent.this.msgStatusSubcomponentFactoryProvider).put(MsgStatusBasic.class, (Provider) DaggerAppComponent.this.msgStatusBasicSubcomponentFactoryProvider).put(MsgStatusBolusExtended.class, (Provider) DaggerAppComponent.this.msgStatusBolusExtendedSubcomponentFactoryProvider).put(MsgStatusProfile.class, (Provider) DaggerAppComponent.this.msgStatusProfileSubcomponentFactoryProvider).put(MsgStatusTempBasal.class, (Provider) DaggerAppComponent.this.msgStatusTempBasalSubcomponentFactoryProvider).put(MsgHistoryBolus.class, (Provider) DaggerAppComponent.this.msgHistoryBolusSubcomponentFactoryProvider).put(MsgHistoryDailyInsulin.class, (Provider) DaggerAppComponent.this.msgHistoryDailyInsulinSubcomponentFactoryProvider).put(MsgHistoryGlucose.class, (Provider) DaggerAppComponent.this.msgHistoryGlucoseSubcomponentFactoryProvider).put(MsgHistoryAlarm.class, (Provider) DaggerAppComponent.this.msgHistoryAlarmSubcomponentFactoryProvider).put(MsgHistoryError.class, (Provider) DaggerAppComponent.this.msgHistoryErrorSubcomponentFactoryProvider).put(MsgHistoryCarbo.class, (Provider) DaggerAppComponent.this.msgHistoryCarboSubcomponentFactoryProvider).put(MsgHistoryRefill.class, (Provider) DaggerAppComponent.this.msgHistoryRefillSubcomponentFactoryProvider).put(MsgHistorySuspend.class, (Provider) DaggerAppComponent.this.msgHistorySuspendSubcomponentFactoryProvider).put(MsgHistoryBasalHour.class, (Provider) DaggerAppComponent.this.msgHistoryBasalHourSubcomponentFactoryProvider).put(MsgHistoryNew.class, (Provider) DaggerAppComponent.this.msgHistoryNewSubcomponentFactoryProvider).put(MsgCheckValue_v2.class, (Provider) DaggerAppComponent.this.msgCheckValue_v2SubcomponentFactoryProvider).put(MsgHistoryEvents_v2.class, (Provider) DaggerAppComponent.this.msgHistoryEvents_v2SubcomponentFactoryProvider).put(MsgSetAPSTempBasalStart_v2.class, (Provider) DaggerAppComponent.this.msgSetAPSTempBasalStart_v2SubcomponentFactoryProvider).put(MsgSetHistoryEntry_v2.class, (Provider) DaggerAppComponent.this.msgSetHistoryEntry_v2SubcomponentFactoryProvider).put(MsgStatusAPS_v2.class, (Provider) DaggerAppComponent.this.msgStatusAPS_v2SubcomponentFactoryProvider).put(MsgStatusBolusExtended_v2.class, (Provider) DaggerAppComponent.this.msgStatusBolusExtended_v2SubcomponentFactoryProvider).put(MsgStatusTempBasal_v2.class, (Provider) DaggerAppComponent.this.msgStatusTempBasal_v2SubcomponentFactoryProvider).put(MsgCheckValue_k.class, (Provider) DaggerAppComponent.this.msgCheckValue_kSubcomponentFactoryProvider).put(MsgInitConnStatusBasic_k.class, (Provider) DaggerAppComponent.this.msgInitConnStatusBasic_kSubcomponentFactoryProvider).put(MsgInitConnStatusBolus_k.class, (Provider) DaggerAppComponent.this.msgInitConnStatusBolus_kSubcomponentFactoryProvider).put(MsgInitConnStatusTime_k.class, (Provider) DaggerAppComponent.this.msgInitConnStatusTime_kSubcomponentFactoryProvider).put(MsgSettingBasalProfileAll_k.class, (Provider) DaggerAppComponent.this.msgSettingBasalProfileAll_kSubcomponentFactoryProvider).put(MsgSettingBasal_k.class, (Provider) DaggerAppComponent.this.msgSettingBasal_kSubcomponentFactoryProvider).put(MsgStatusBasic_k.class, (Provider) DaggerAppComponent.this.msgStatusBasic_kSubcomponentFactoryProvider).put(MsgStatus_k.class, (Provider) DaggerAppComponent.this.msgStatus_kSubcomponentFactoryProvider).put(AbstractDanaRExecutionService.class, (Provider) DaggerAppComponent.this.abstractDanaRExecutionServiceSubcomponentFactoryProvider).put(DanaRv2ExecutionService.class, (Provider) DaggerAppComponent.this.danaRv2ExecutionServiceSubcomponentFactoryProvider).put(DanaRExecutionService.class, (Provider) DaggerAppComponent.this.danaRExecutionServiceSubcomponentFactoryProvider).put(DanaRKoreanExecutionService.class, (Provider) DaggerAppComponent.this.danaRKoreanExecutionServiceSubcomponentFactoryProvider).put(DanaRS_Packet.class, (Provider) DaggerAppComponent.this.danaRS_PacketSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Basal_Rate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Get_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Profile_Basal_Rate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Profile_Number.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Get_Profile_NumberSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Basal_Rate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Profile_Basal_Rate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Profile_Number.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Profile_NumberSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Suspend_Off.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Suspend_OffSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Suspend_On.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Suspend_OnSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Temporary_Basal.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Temporary_Basal_State.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Bolus_Option.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Initial_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Initial_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Calculation_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_CIR_CF_Array.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_24_CIR_CF_Array.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Dual_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Dual_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Extended_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Bolus_State.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Step_Bolus_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Bolus_Option.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Initial_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Initial_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_CIR_CF_Array.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_24_CIR_CF_Array.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Dual_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Dual_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Extended_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Extended_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Step_Bolus_Start.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Step_Bolus_Stop.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentFactoryProvider).put(DanaRS_Packet_Etc_Keep_Connection.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Etc_Keep_ConnectionSubcomponentFactoryProvider).put(DanaRS_Packet_Etc_Set_History_Save.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Etc_Set_History_SaveSubcomponentFactoryProvider).put(DanaRS_Packet_General_Delivery_Status.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Delivery_StatusSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Password.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_PasswordSubcomponentFactoryProvider).put(DanaRS_Packet_General_Initial_Screen_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Initial_Screen_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Alarm.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Notify_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Delivery_Complete.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Notify_Delivery_CompleteSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Delivery_Rate_Display.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Missed_Bolus_Alarm.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_Pump_Time.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Get_Pump_TimeSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_User_Option.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Get_User_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_Pump_Time.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Set_Pump_TimeSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_User_Option.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Set_User_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_History_.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_SubcomponentFactoryProvider).put(DanaRS_Packet_History_Alarm.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_History_All_History.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_All_HistorySubcomponentFactoryProvider).put(DanaRS_Packet_History_Basal.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_History_Blood_Glucose.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_Blood_GlucoseSubcomponentFactoryProvider).put(DanaRS_Packet_History_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Review_Bolus_Avg.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Review_Bolus_AvgSubcomponentFactoryProvider).put(DanaRS_Packet_History_Carbohydrate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_CarbohydrateSubcomponentFactoryProvider).put(DanaRS_Packet_History_Daily.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_DailySubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_More_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_More_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Pump_Check.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_Pump_CheckSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Shipping_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_Shipping_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Today_Delivery_Total.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_User_Time_Change_Flag.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentFactoryProvider).put(DanaRS_Packet_History_Prime.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_PrimeSubcomponentFactoryProvider).put(DanaRS_Packet_History_Refill.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_RefillSubcomponentFactoryProvider).put(DanaRS_Packet_General_Set_History_Upload_Mode.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Set_History_Upload_ModeSubcomponentFactoryProvider).put(DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentFactoryProvider).put(DanaRS_Packet_History_Suspend.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_SuspendSubcomponentFactoryProvider).put(DanaRS_Packet_History_Temporary.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_TemporarySubcomponentFactoryProvider).put(DanaRS_Packet_APS_Basal_Set_Temporary_Basal.class, (Provider) DaggerAppComponent.this.danaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_APS_History_Events.class, (Provider) DaggerAppComponent.this.danaRS_Packet_APS_History_EventsSubcomponentFactoryProvider).put(DanaRS_Packet_APS_Set_Event_History.class, (Provider) DaggerAppComponent.this.danaRS_Packet_APS_Set_Event_HistorySubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Shipping_Version.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_Shipping_VersionSubcomponentFactoryProvider).put(DanaRS_Packet_Review_Get_Pump_Dec_Ratio.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider).put(BLEScanActivity.class, (Provider) DaggerAppComponent.this.bLEScanActivitySubcomponentFactoryProvider).put(PairingHelperActivity.class, (Provider) DaggerAppComponent.this.pairingHelperActivitySubcomponentFactoryProvider).put(EnterPinActivity.class, (Provider) DaggerAppComponent.this.enterPinActivitySubcomponentFactoryProvider).put(PairingProgressDialog.class, (Provider) DaggerAppComponent.this.pairingProgressDialogSubcomponentFactoryProvider).put(DanaRSService.class, (Provider) DaggerAppComponent.this.danaRSServiceSubcomponentFactoryProvider).put(OHUploadWorker.class, (Provider) DaggerAppComponent.this.oHUploadWorkerSubcomponentFactoryProvider).put(DeactivatePodActionFragment.class, (Provider) deactivatePodActionFragmentSubcomponentFactoryProvider).put(InsertCannulaActionFragment.class, (Provider) insertCannulaActionFragmentSubcomponentFactoryProvider).put(InitializePodActionFragment.class, (Provider) initializePodActionFragmentSubcomponentFactoryProvider).put(AttachPodInfoFragment.class, (Provider) attachPodInfoFragmentSubcomponentFactoryProvider).put(DeactivatePodInfoFragment.class, (Provider) deactivatePodInfoFragmentSubcomponentFactoryProvider).put(FillPodInfoFragment.class, (Provider) fillPodInfoFragmentSubcomponentFactoryProvider).put(PodDeactivatedInfoFragment.class, (Provider) podDeactivatedInfoFragmentSubcomponentFactoryProvider).put(PodDiscardedInfoFragment.class, (Provider) podDiscardedInfoFragmentSubcomponentFactoryProvider).put(PodActivatedInfoFragment.class, (Provider) podActivatedInfoFragmentSubcomponentFactoryProvider).build();
    }

    private DispatchingAndroidInjector<Object> dispatchingAndroidInjectorOfObject() {
      return DispatchingAndroidInjector_Factory.newInstance(mapOfClassOfAndProviderOfAndroidInjectorFactoryOf(), ImmutableMap.<String, Provider<AndroidInjector.Factory<?>>>of());
    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    private Map<Class<? extends ViewModel>, Provider<ViewModel>> omnipodPluginQualifierMapOfClassOfAndProviderOfViewModel(
        ) {
      return ImmutableMap.<Class<? extends ViewModel>, Provider<ViewModel>>of(InitializePodActionViewModel.class, (Provider) initializePodActionViewModelProvider, InsertCannulaActionViewModel.class, (Provider) insertCannulaActionViewModelProvider, DeactivatePodActionViewModel.class, (Provider) deactivatePodActionViewModelProvider);
    }

    private ViewModelProvider.Factory omnipodPluginQualifierViewModelProviderFactory() {
      return OmnipodWizardModule_Companion_ProvidesViewModelFactoryFactory.providesViewModelFactory(omnipodPluginQualifierMapOfClassOfAndProviderOfViewModel());
    }

    @SuppressWarnings("unchecked")
    private void initialize(final PodActivationWizardActivity arg0) {
      this.deactivatePodActionFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent.Factory get(
            ) {
          return new DeactivatePodActionFragmentSubcomponentFactory();
        }
      };
      this.insertCannulaActionFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent.Factory get(
            ) {
          return new InsertCannulaActionFragmentSubcomponentFactory();
        }
      };
      this.initializePodActionFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent.Factory get(
            ) {
          return new InitializePodActionFragmentSubcomponentFactory();
        }
      };
      this.attachPodInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent.Factory get(
            ) {
          return new AttachPodInfoFragmentSubcomponentFactory();
        }
      };
      this.deactivatePodInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent.Factory get(
            ) {
          return new DeactivatePodInfoFragmentSubcomponentFactory();
        }
      };
      this.fillPodInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent.Factory get(
            ) {
          return new FillPodInfoFragmentSubcomponentFactory();
        }
      };
      this.podDeactivatedInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent.Factory get(
            ) {
          return new PodDeactivatedInfoFragmentSubcomponentFactory();
        }
      };
      this.podDiscardedInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent.Factory get(
            ) {
          return new PodDiscardedInfoFragmentSubcomponentFactory();
        }
      };
      this.podActivatedInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent.Factory get(
            ) {
          return new PodActivatedInfoFragmentSubcomponentFactory();
        }
      };
      this.initializePodActionViewModelProvider = InitializePodActionViewModel_Factory.create(DaggerAppComponent.this.aapsOmnipodManagerProvider);
      this.insertCannulaActionViewModelProvider = InsertCannulaActionViewModel_Factory.create(DaggerAppComponent.this.aapsOmnipodManagerProvider, DaggerAppComponent.this.provideProfileFunctionProvider);
      this.deactivatePodActionViewModelProvider = DeactivatePodActionViewModel_Factory.create(DaggerAppComponent.this.aapsOmnipodManagerProvider, (Provider) DaggerAppComponent.this.commandQueueProvider);
    }

    @Override
    public void inject(PodActivationWizardActivity arg0) {
      injectPodActivationWizardActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PodActivationWizardActivity injectPodActivationWizardActivity(
        PodActivationWizardActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      PodActivationWizardActivity_MembersInjector.injectPodStateManager(instance, DaggerAppComponent.this.podStateManager());
      return instance;
    }

    private final class DeactivatePodActionFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent create(
          DeactivatePodActionFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new DeactivatePodActionFragmentSubcomponentImpl(arg0);
      }
    }

    private final class DeactivatePodActionFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent {
      private DeactivatePodActionFragmentSubcomponentImpl(DeactivatePodActionFragment arg0) {

      }

      @Override
      public void inject(DeactivatePodActionFragment arg0) {
        injectDeactivatePodActionFragment(arg0);
      }

      @CanIgnoreReturnValue
      private DeactivatePodActionFragment injectDeactivatePodActionFragment(
          DeactivatePodActionFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        DeactivatePodActionFragment_MembersInjector.injectViewModelFactory(instance, PodActivationWizardActivitySubcomponentImpl.this.omnipodPluginQualifierViewModelProviderFactory());
        DeactivatePodActionFragment_MembersInjector.injectAapsOmnipodManager(instance, DaggerAppComponent.this.aapsOmnipodManagerProvider.get());
        return instance;
      }
    }

    private final class InsertCannulaActionFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent create(
          InsertCannulaActionFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new InsertCannulaActionFragmentSubcomponentImpl(arg0);
      }
    }

    private final class InsertCannulaActionFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent {
      private InsertCannulaActionFragmentSubcomponentImpl(InsertCannulaActionFragment arg0) {

      }

      @Override
      public void inject(InsertCannulaActionFragment arg0) {
        injectInsertCannulaActionFragment(arg0);
      }

      @CanIgnoreReturnValue
      private InsertCannulaActionFragment injectInsertCannulaActionFragment(
          InsertCannulaActionFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        PodActivationActionFragmentBase_MembersInjector.injectPodStateManager(instance, DaggerAppComponent.this.podStateManager());
        InsertCannulaActionFragment_MembersInjector.injectViewModelFactory(instance, PodActivationWizardActivitySubcomponentImpl.this.omnipodPluginQualifierViewModelProviderFactory());
        return instance;
      }
    }

    private final class InitializePodActionFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent create(
          InitializePodActionFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new InitializePodActionFragmentSubcomponentImpl(arg0);
      }
    }

    private final class InitializePodActionFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent {
      private InitializePodActionFragmentSubcomponentImpl(InitializePodActionFragment arg0) {

      }

      @Override
      public void inject(InitializePodActionFragment arg0) {
        injectInitializePodActionFragment(arg0);
      }

      @CanIgnoreReturnValue
      private InitializePodActionFragment injectInitializePodActionFragment(
          InitializePodActionFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        PodActivationActionFragmentBase_MembersInjector.injectPodStateManager(instance, DaggerAppComponent.this.podStateManager());
        InitializePodActionFragment_MembersInjector.injectViewModelFactory(instance, PodActivationWizardActivitySubcomponentImpl.this.omnipodPluginQualifierViewModelProviderFactory());
        return instance;
      }
    }

    private final class AttachPodInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent create(
          AttachPodInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new AttachPodInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class AttachPodInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent {
      private AttachPodInfoFragmentSubcomponentImpl(AttachPodInfoFragment arg0) {

      }

      @Override
      public void inject(AttachPodInfoFragment arg0) {
        injectAttachPodInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private AttachPodInfoFragment injectAttachPodInfoFragment(AttachPodInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class DeactivatePodInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent create(
          DeactivatePodInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new DeactivatePodInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class DeactivatePodInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent {
      private DeactivatePodInfoFragmentSubcomponentImpl(DeactivatePodInfoFragment arg0) {

      }

      @Override
      public void inject(DeactivatePodInfoFragment arg0) {
        injectDeactivatePodInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private DeactivatePodInfoFragment injectDeactivatePodInfoFragment(
          DeactivatePodInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class FillPodInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent create(
          FillPodInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new FillPodInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class FillPodInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent {
      private FillPodInfoFragmentSubcomponentImpl(FillPodInfoFragment arg0) {

      }

      @Override
      public void inject(FillPodInfoFragment arg0) {
        injectFillPodInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private FillPodInfoFragment injectFillPodInfoFragment(FillPodInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class PodDeactivatedInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent create(
          PodDeactivatedInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new PodDeactivatedInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class PodDeactivatedInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent {
      private PodDeactivatedInfoFragmentSubcomponentImpl(PodDeactivatedInfoFragment arg0) {

      }

      @Override
      public void inject(PodDeactivatedInfoFragment arg0) {
        injectPodDeactivatedInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private PodDeactivatedInfoFragment injectPodDeactivatedInfoFragment(
          PodDeactivatedInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class PodDiscardedInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent create(
          PodDiscardedInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new PodDiscardedInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class PodDiscardedInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent {
      private PodDiscardedInfoFragmentSubcomponentImpl(PodDiscardedInfoFragment arg0) {

      }

      @Override
      public void inject(PodDiscardedInfoFragment arg0) {
        injectPodDiscardedInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private PodDiscardedInfoFragment injectPodDiscardedInfoFragment(
          PodDiscardedInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class PodActivatedInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent create(
          PodActivatedInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new PodActivatedInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class PodActivatedInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent {
      private PodActivatedInfoFragmentSubcomponentImpl(PodActivatedInfoFragment arg0) {

      }

      @Override
      public void inject(PodActivatedInfoFragment arg0) {
        injectPodActivatedInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private PodActivatedInfoFragment injectPodActivatedInfoFragment(
          PodActivatedInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodActivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }
  }

  private final class PodDeactivationWizardActivitySubcomponentFactory implements OmnipodModule_ContributesDeactivationWizardActivity.PodDeactivationWizardActivitySubcomponent.Factory {
    @Override
    public OmnipodModule_ContributesDeactivationWizardActivity.PodDeactivationWizardActivitySubcomponent create(
        PodDeactivationWizardActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PodDeactivationWizardActivitySubcomponentImpl(arg0);
    }
  }

  private final class PodDeactivationWizardActivitySubcomponentImpl implements OmnipodModule_ContributesDeactivationWizardActivity.PodDeactivationWizardActivitySubcomponent {
    private Provider<OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent.Factory> deactivatePodActionFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent.Factory> insertCannulaActionFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent.Factory> initializePodActionFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent.Factory> attachPodInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent.Factory> deactivatePodInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent.Factory> fillPodInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent.Factory> podDeactivatedInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent.Factory> podDiscardedInfoFragmentSubcomponentFactoryProvider;

    private Provider<OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent.Factory> podActivatedInfoFragmentSubcomponentFactoryProvider;

    private Provider<InitializePodActionViewModel> initializePodActionViewModelProvider;

    private Provider<InsertCannulaActionViewModel> insertCannulaActionViewModelProvider;

    private Provider<DeactivatePodActionViewModel> deactivatePodActionViewModelProvider;

    private PodDeactivationWizardActivitySubcomponentImpl(PodDeactivationWizardActivity arg0) {

      initialize(arg0);
    }

    private Map<Class<?>, Provider<AndroidInjector.Factory<?>>> mapOfClassOfAndProviderOfAndroidInjectorFactoryOf(
        ) {
      return ImmutableMap.<Class<?>, Provider<AndroidInjector.Factory<?>>>builderWithExpectedSize(420).put(HistoryBrowseActivity.class, (Provider) DaggerAppComponent.this.historyBrowseActivitySubcomponentFactoryProvider).put(InsightAlertActivity.class, (Provider) DaggerAppComponent.this.insightAlertActivitySubcomponentFactoryProvider).put(InsightPairingActivity.class, (Provider) DaggerAppComponent.this.insightPairingActivitySubcomponentFactoryProvider).put(InsightPairingInformationActivity.class, (Provider) DaggerAppComponent.this.insightPairingInformationActivitySubcomponentFactoryProvider).put(LogSettingActivity.class, (Provider) DaggerAppComponent.this.logSettingActivitySubcomponentFactoryProvider).put(MainActivity.class, (Provider) DaggerAppComponent.this.mainActivitySubcomponentFactoryProvider).put(MedtronicHistoryActivity.class, (Provider) DaggerAppComponent.this.medtronicHistoryActivitySubcomponentFactoryProvider).put(PreferencesActivity.class, (Provider) DaggerAppComponent.this.preferencesActivitySubcomponentFactoryProvider).put(QuickWizardListActivity.class, (Provider) DaggerAppComponent.this.quickWizardListActivitySubcomponentFactoryProvider).put(RequestDexcomPermissionActivity.class, (Provider) DaggerAppComponent.this.requestDexcomPermissionActivitySubcomponentFactoryProvider).put(RileyLinkStatusActivity.class, (Provider) DaggerAppComponent.this.rileyLinkStatusActivitySubcomponentFactoryProvider).put(RileyLinkBLEConfigActivity.class, (Provider) DaggerAppComponent.this.rileyLinkBLEConfigActivitySubcomponentFactoryProvider).put(SetupWizardActivity.class, (Provider) DaggerAppComponent.this.setupWizardActivitySubcomponentFactoryProvider).put(SingleFragmentActivity.class, (Provider) DaggerAppComponent.this.singleFragmentActivitySubcomponentFactoryProvider).put(SmsCommunicatorOtpActivity.class, (Provider) DaggerAppComponent.this.smsCommunicatorOtpActivitySubcomponentFactoryProvider).put(StatsActivity.class, (Provider) DaggerAppComponent.this.statsActivitySubcomponentFactoryProvider).put(SurveyActivity.class, (Provider) DaggerAppComponent.this.surveyActivitySubcomponentFactoryProvider).put(ProfileHelperActivity.class, (Provider) DaggerAppComponent.this.profileHelperActivitySubcomponentFactoryProvider).put(OpenHumansLoginActivity.class, (Provider) DaggerAppComponent.this.openHumansLoginActivitySubcomponentFactoryProvider).put(MyPreferenceFragment.class, (Provider) DaggerAppComponent.this.myPreferenceFragmentSubcomponentFactoryProvider).put(ActionsFragment.class, (Provider) DaggerAppComponent.this.actionsFragmentSubcomponentFactoryProvider).put(AutomationFragment.class, (Provider) DaggerAppComponent.this.automationFragmentSubcomponentFactoryProvider).put(BGSourceFragment.class, (Provider) DaggerAppComponent.this.bGSourceFragmentSubcomponentFactoryProvider).put(ComboFragment.class, (Provider) DaggerAppComponent.this.comboFragmentSubcomponentFactoryProvider).put(ConfigBuilderFragment.class, (Provider) DaggerAppComponent.this.configBuilderFragmentSubcomponentFactoryProvider).put(FoodFragment.class, (Provider) DaggerAppComponent.this.foodFragmentSubcomponentFactoryProvider).put(InsulinFragment.class, (Provider) DaggerAppComponent.this.insulinFragmentSubcomponentFactoryProvider).put(LocalProfileFragment.class, (Provider) DaggerAppComponent.this.localProfileFragmentSubcomponentFactoryProvider).put(ObjectivesFragment.class, (Provider) DaggerAppComponent.this.objectivesFragmentSubcomponentFactoryProvider).put(OpenAPSAMAFragment.class, (Provider) DaggerAppComponent.this.openAPSAMAFragmentSubcomponentFactoryProvider).put(OpenAPSSMBFragment.class, (Provider) DaggerAppComponent.this.openAPSSMBFragmentSubcomponentFactoryProvider).put(OverviewFragment.class, (Provider) DaggerAppComponent.this.overviewFragmentSubcomponentFactoryProvider).put(LocalInsightFragment.class, (Provider) DaggerAppComponent.this.localInsightFragmentSubcomponentFactoryProvider).put(LoopFragment.class, (Provider) DaggerAppComponent.this.loopFragmentSubcomponentFactoryProvider).put(MaintenanceFragment.class, (Provider) DaggerAppComponent.this.maintenanceFragmentSubcomponentFactoryProvider).put(MedtronicFragment.class, (Provider) DaggerAppComponent.this.medtronicFragmentSubcomponentFactoryProvider).put(OmnipodOverviewFragment.class, (Provider) DaggerAppComponent.this.omnipodOverviewFragmentSubcomponentFactoryProvider).put(NSProfileFragment.class, (Provider) DaggerAppComponent.this.nSProfileFragmentSubcomponentFactoryProvider).put(NSClientFragment.class, (Provider) DaggerAppComponent.this.nSClientFragmentSubcomponentFactoryProvider).put(SmsCommunicatorFragment.class, (Provider) DaggerAppComponent.this.smsCommunicatorFragmentSubcomponentFactoryProvider).put(WearFragment.class, (Provider) DaggerAppComponent.this.wearFragmentSubcomponentFactoryProvider).put(TidepoolFragment.class, (Provider) DaggerAppComponent.this.tidepoolFragmentSubcomponentFactoryProvider).put(TreatmentsFragment.class, (Provider) DaggerAppComponent.this.treatmentsFragmentSubcomponentFactoryProvider).put(TreatmentsBolusFragment.class, (Provider) DaggerAppComponent.this.treatmentsBolusFragmentSubcomponentFactoryProvider).put(TreatmentsTemporaryBasalsFragment.class, (Provider) DaggerAppComponent.this.treatmentsTemporaryBasalsFragmentSubcomponentFactoryProvider).put(TreatmentsTempTargetFragment.class, (Provider) DaggerAppComponent.this.treatmentsTempTargetFragmentSubcomponentFactoryProvider).put(TreatmentsExtendedBolusesFragment.class, (Provider) DaggerAppComponent.this.treatmentsExtendedBolusesFragmentSubcomponentFactoryProvider).put(TreatmentsCareportalFragment.class, (Provider) DaggerAppComponent.this.treatmentsCareportalFragmentSubcomponentFactoryProvider).put(TreatmentsProfileSwitchFragment.class, (Provider) DaggerAppComponent.this.treatmentsProfileSwitchFragmentSubcomponentFactoryProvider).put(VirtualPumpFragment.class, (Provider) DaggerAppComponent.this.virtualPumpFragmentSubcomponentFactoryProvider).put(OpenHumansFragment.class, (Provider) DaggerAppComponent.this.openHumansFragmentSubcomponentFactoryProvider).put(CalibrationDialog.class, (Provider) DaggerAppComponent.this.calibrationDialogSubcomponentFactoryProvider).put(CarbsDialog.class, (Provider) DaggerAppComponent.this.carbsDialogSubcomponentFactoryProvider).put(CareDialog.class, (Provider) DaggerAppComponent.this.careDialogSubcomponentFactoryProvider).put(EditActionDialog.class, (Provider) DaggerAppComponent.this.editActionDialogSubcomponentFactoryProvider).put(EditEventDialog.class, (Provider) DaggerAppComponent.this.editEventDialogSubcomponentFactoryProvider).put(EditTriggerDialog.class, (Provider) DaggerAppComponent.this.editTriggerDialogSubcomponentFactoryProvider).put(EditQuickWizardDialog.class, (Provider) DaggerAppComponent.this.editQuickWizardDialogSubcomponentFactoryProvider).put(ExtendedBolusDialog.class, (Provider) DaggerAppComponent.this.extendedBolusDialogSubcomponentFactoryProvider).put(FillDialog.class, (Provider) DaggerAppComponent.this.fillDialogSubcomponentFactoryProvider).put(ChooseActionDialog.class, (Provider) DaggerAppComponent.this.chooseActionDialogSubcomponentFactoryProvider).put(ChooseTriggerDialog.class, (Provider) DaggerAppComponent.this.chooseTriggerDialogSubcomponentFactoryProvider).put(InsulinDialog.class, (Provider) DaggerAppComponent.this.insulinDialogSubcomponentFactoryProvider).put(UAMDialog.class, (Provider) DaggerAppComponent.this.uAMDialogSubcomponentFactoryProvider).put(LoopDialog.class, (Provider) DaggerAppComponent.this.loopDialogSubcomponentFactoryProvider).put(ObjectivesExamDialog.class, (Provider) DaggerAppComponent.this.objectivesExamDialogSubcomponentFactoryProvider).put(ProfileSwitchDialog.class, (Provider) DaggerAppComponent.this.profileSwitchDialogSubcomponentFactoryProvider).put(TempBasalDialog.class, (Provider) DaggerAppComponent.this.tempBasalDialogSubcomponentFactoryProvider).put(TempTargetDialog.class, (Provider) DaggerAppComponent.this.tempTargetDialogSubcomponentFactoryProvider).put(TreatmentDialog.class, (Provider) DaggerAppComponent.this.treatmentDialogSubcomponentFactoryProvider).put(WizardDialog.class, (Provider) DaggerAppComponent.this.wizardDialogSubcomponentFactoryProvider).put(WizardInfoDialog.class, (Provider) DaggerAppComponent.this.wizardInfoDialogSubcomponentFactoryProvider).put(OpenHumansLoginActivity.ExchangeAuthTokenDialog.class, (Provider) DaggerAppComponent.this.exchangeAuthTokenDialogSubcomponentFactoryProvider).put(PasswordCheck.class, (Provider) DaggerAppComponent.this.passwordCheckSubcomponentFactoryProvider).put(RileyLinkStatusGeneralFragment.class, (Provider) DaggerAppComponent.this.rileyLinkStatusGeneralFragmentSubcomponentFactoryProvider).put(RileyLinkStatusHistoryFragment.class, (Provider) DaggerAppComponent.this.rileyLinkStatusHistoryFragmentSubcomponentFactoryProvider).put(RileyLinkStatusDeviceMedtronic.class, (Provider) DaggerAppComponent.this.rileyLinkStatusDeviceMedtronicSubcomponentFactoryProvider).put(AutoStartReceiver.class, (Provider) DaggerAppComponent.this.autoStartReceiverSubcomponentFactoryProvider).put(BTReceiver.class, (Provider) DaggerAppComponent.this.bTReceiverSubcomponentFactoryProvider).put(ChargingStateReceiver.class, (Provider) DaggerAppComponent.this.chargingStateReceiverSubcomponentFactoryProvider).put(DataReceiver.class, (Provider) DaggerAppComponent.this.dataReceiverSubcomponentFactoryProvider).put(KeepAliveReceiver.class, (Provider) DaggerAppComponent.this.keepAliveReceiverSubcomponentFactoryProvider).put(RileyLinkBluetoothStateReceiver.class, (Provider) DaggerAppComponent.this.rileyLinkBluetoothStateReceiverSubcomponentFactoryProvider).put(SmsReceiver.class, (Provider) DaggerAppComponent.this.smsReceiverSubcomponentFactoryProvider).put(TimeDateOrTZChangeReceiver.class, (Provider) DaggerAppComponent.this.timeDateOrTZChangeReceiverSubcomponentFactoryProvider).put(CarbSuggestionReceiver.class, (Provider) DaggerAppComponent.this.carbSuggestionReceiverSubcomponentFactoryProvider).put(RileyLinkBroadcastReceiver.class, (Provider) DaggerAppComponent.this.rileyLinkBroadcastReceiverSubcomponentFactoryProvider).put(AlarmSoundService.class, (Provider) DaggerAppComponent.this.alarmSoundServiceSubcomponentFactoryProvider).put(DataService.class, (Provider) DaggerAppComponent.this.dataServiceSubcomponentFactoryProvider).put(DismissNotificationService.class, (Provider) DaggerAppComponent.this.dismissNotificationServiceSubcomponentFactoryProvider).put(DummyService.class, (Provider) DaggerAppComponent.this.dummyServiceSubcomponentFactoryProvider).put(LocationService.class, (Provider) DaggerAppComponent.this.locationServiceSubcomponentFactoryProvider).put(NSClientService.class, (Provider) DaggerAppComponent.this.nSClientServiceSubcomponentFactoryProvider).put(WatchUpdaterService.class, (Provider) DaggerAppComponent.this.watchUpdaterServiceSubcomponentFactoryProvider).put(InsightAlertService.class, (Provider) DaggerAppComponent.this.insightAlertServiceSubcomponentFactoryProvider).put(InsightConnectionService.class, (Provider) DaggerAppComponent.this.insightConnectionServiceSubcomponentFactoryProvider).put(RileyLinkService.class, (Provider) DaggerAppComponent.this.rileyLinkServiceSubcomponentFactoryProvider).put(RileyLinkMedtronicService.class, (Provider) DaggerAppComponent.this.rileyLinkMedtronicServiceSubcomponentFactoryProvider).put(RileyLinkOmnipodService.class, (Provider) DaggerAppComponent.this.rileyLinkOmnipodServiceSubcomponentFactoryProvider).put(AutomationEvent.class, (Provider) DaggerAppComponent.this.automationEventSubcomponentFactoryProvider).put(Trigger.class, (Provider) DaggerAppComponent.this.triggerSubcomponentFactoryProvider).put(TriggerAutosensValue.class, (Provider) DaggerAppComponent.this.triggerAutosensValueSubcomponentFactoryProvider).put(TriggerBg.class, (Provider) DaggerAppComponent.this.triggerBgSubcomponentFactoryProvider).put(TriggerBolusAgo.class, (Provider) DaggerAppComponent.this.triggerBolusAgoSubcomponentFactoryProvider).put(TriggerCOB.class, (Provider) DaggerAppComponent.this.triggerCOBSubcomponentFactoryProvider).put(TriggerConnector.class, (Provider) DaggerAppComponent.this.triggerConnectorSubcomponentFactoryProvider).put(TriggerDelta.class, (Provider) DaggerAppComponent.this.triggerDeltaSubcomponentFactoryProvider).put(TriggerDummy.class, (Provider) DaggerAppComponent.this.triggerDummySubcomponentFactoryProvider).put(TriggerIob.class, (Provider) DaggerAppComponent.this.triggerIobSubcomponentFactoryProvider).put(TriggerLocation.class, (Provider) DaggerAppComponent.this.triggerLocationSubcomponentFactoryProvider).put(TriggerProfilePercent.class, (Provider) DaggerAppComponent.this.triggerProfilePercentSubcomponentFactoryProvider).put(TriggerPumpLastConnection.class, (Provider) DaggerAppComponent.this.triggerPumpLastConnectionSubcomponentFactoryProvider).put(TriggerBTDevice.class, (Provider) DaggerAppComponent.this.triggerBTDeviceSubcomponentFactoryProvider).put(TriggerRecurringTime.class, (Provider) DaggerAppComponent.this.triggerRecurringTimeSubcomponentFactoryProvider).put(TriggerTempTarget.class, (Provider) DaggerAppComponent.this.triggerTempTargetSubcomponentFactoryProvider).put(TriggerTime.class, (Provider) DaggerAppComponent.this.triggerTimeSubcomponentFactoryProvider).put(TriggerTimeRange.class, (Provider) DaggerAppComponent.this.triggerTimeRangeSubcomponentFactoryProvider).put(TriggerWifiSsid.class, (Provider) DaggerAppComponent.this.triggerWifiSsidSubcomponentFactoryProvider).put(Action.class, (Provider) DaggerAppComponent.this.actionSubcomponentFactoryProvider).put(ActionLoopDisable.class, (Provider) DaggerAppComponent.this.actionLoopDisableSubcomponentFactoryProvider).put(ActionLoopEnable.class, (Provider) DaggerAppComponent.this.actionLoopEnableSubcomponentFactoryProvider).put(ActionLoopResume.class, (Provider) DaggerAppComponent.this.actionLoopResumeSubcomponentFactoryProvider).put(ActionLoopSuspend.class, (Provider) DaggerAppComponent.this.actionLoopSuspendSubcomponentFactoryProvider).put(ActionNotification.class, (Provider) DaggerAppComponent.this.actionNotificationSubcomponentFactoryProvider).put(ActionAlarm.class, (Provider) DaggerAppComponent.this.actionAlarmSubcomponentFactoryProvider).put(ActionProfileSwitch.class, (Provider) DaggerAppComponent.this.actionProfileSwitchSubcomponentFactoryProvider).put(ActionProfileSwitchPercent.class, (Provider) DaggerAppComponent.this.actionProfileSwitchPercentSubcomponentFactoryProvider).put(ActionSendSMS.class, (Provider) DaggerAppComponent.this.actionSendSMSSubcomponentFactoryProvider).put(ActionStartTempTarget.class, (Provider) DaggerAppComponent.this.actionStartTempTargetSubcomponentFactoryProvider).put(ActionStopTempTarget.class, (Provider) DaggerAppComponent.this.actionStopTempTargetSubcomponentFactoryProvider).put(ActionDummy.class, (Provider) DaggerAppComponent.this.actionDummySubcomponentFactoryProvider).put(Element.class, (Provider) DaggerAppComponent.this.elementSubcomponentFactoryProvider).put(InputBg.class, (Provider) DaggerAppComponent.this.inputBgSubcomponentFactoryProvider).put(InputButton.class, (Provider) DaggerAppComponent.this.inputButtonSubcomponentFactoryProvider).put(Comparator.class, (Provider) DaggerAppComponent.this.comparatorSubcomponentFactoryProvider).put(ComparatorConnect.class, (Provider) DaggerAppComponent.this.comparatorConnectSubcomponentFactoryProvider).put(ComparatorExists.class, (Provider) DaggerAppComponent.this.comparatorExistsSubcomponentFactoryProvider).put(InputDateTime.class, (Provider) DaggerAppComponent.this.inputDateTimeSubcomponentFactoryProvider).put(InputDelta.class, (Provider) DaggerAppComponent.this.inputDeltaSubcomponentFactoryProvider).put(InputDouble.class, (Provider) DaggerAppComponent.this.inputDoubleSubcomponentFactoryProvider).put(InputDropdownMenu.class, (Provider) DaggerAppComponent.this.inputDropdownMenuSubcomponentFactoryProvider).put(InputDuration.class, (Provider) DaggerAppComponent.this.inputDurationSubcomponentFactoryProvider).put(InputInsulin.class, (Provider) DaggerAppComponent.this.inputInsulinSubcomponentFactoryProvider).put(InputLocationMode.class, (Provider) DaggerAppComponent.this.inputLocationModeSubcomponentFactoryProvider).put(InputPercent.class, (Provider) DaggerAppComponent.this.inputPercentSubcomponentFactoryProvider).put(InputProfileName.class, (Provider) DaggerAppComponent.this.inputProfileNameSubcomponentFactoryProvider).put(InputString.class, (Provider) DaggerAppComponent.this.inputStringSubcomponentFactoryProvider).put(InputTempTarget.class, (Provider) DaggerAppComponent.this.inputTempTargetSubcomponentFactoryProvider).put(InputTimeRange.class, (Provider) DaggerAppComponent.this.inputTimeRangeSubcomponentFactoryProvider).put(InputTime.class, (Provider) DaggerAppComponent.this.inputTimeSubcomponentFactoryProvider).put(InputWeekDay.class, (Provider) DaggerAppComponent.this.inputWeekDaySubcomponentFactoryProvider).put(LabelWithElement.class, (Provider) DaggerAppComponent.this.labelWithElementSubcomponentFactoryProvider).put(StaticLabel.class, (Provider) DaggerAppComponent.this.staticLabelSubcomponentFactoryProvider).put(CommandQueue.class, (Provider) DaggerAppComponent.this.commandQueueSubcomponentFactoryProvider).put(CommandBolus.class, (Provider) DaggerAppComponent.this.commandBolusSubcomponentFactoryProvider).put(CommandCancelExtendedBolus.class, (Provider) DaggerAppComponent.this.commandCancelExtendedBolusSubcomponentFactoryProvider).put(CommandCancelTempBasal.class, (Provider) DaggerAppComponent.this.commandCancelTempBasalSubcomponentFactoryProvider).put(CommandExtendedBolus.class, (Provider) DaggerAppComponent.this.commandExtendedBolusSubcomponentFactoryProvider).put(CommandInsightSetTBROverNotification.class, (Provider) DaggerAppComponent.this.commandInsightSetTBROverNotificationSubcomponentFactoryProvider).put(CommandLoadEvents.class, (Provider) DaggerAppComponent.this.commandLoadEventsSubcomponentFactoryProvider).put(CommandLoadHistory.class, (Provider) DaggerAppComponent.this.commandLoadHistorySubcomponentFactoryProvider).put(CommandLoadTDDs.class, (Provider) DaggerAppComponent.this.commandLoadTDDsSubcomponentFactoryProvider).put(CommandReadStatus.class, (Provider) DaggerAppComponent.this.commandReadStatusSubcomponentFactoryProvider).put(CommandSetProfile.class, (Provider) DaggerAppComponent.this.commandSetProfileSubcomponentFactoryProvider).put(CommandSMBBolus.class, (Provider) DaggerAppComponent.this.commandSMBBolusSubcomponentFactoryProvider).put(CommandStartPump.class, (Provider) DaggerAppComponent.this.commandStartPumpSubcomponentFactoryProvider).put(CommandStopPump.class, (Provider) DaggerAppComponent.this.commandStopPumpSubcomponentFactoryProvider).put(CommandTempBasalAbsolute.class, (Provider) DaggerAppComponent.this.commandTempBasalAbsoluteSubcomponentFactoryProvider).put(CommandTempBasalPercent.class, (Provider) DaggerAppComponent.this.commandTempBasalPercentSubcomponentFactoryProvider).put(CommandSetUserSettings.class, (Provider) DaggerAppComponent.this.commandSetUserSettingsSubcomponentFactoryProvider).put(CommandCustomCommand.class, (Provider) DaggerAppComponent.this.commandCustomCommandSubcomponentFactoryProvider).put(Objective.class, (Provider) DaggerAppComponent.this.objectiveSubcomponentFactoryProvider).put(Objective0.class, (Provider) DaggerAppComponent.this.objective0SubcomponentFactoryProvider).put(Objective1.class, (Provider) DaggerAppComponent.this.objective1SubcomponentFactoryProvider).put(Objective2.class, (Provider) DaggerAppComponent.this.objective2SubcomponentFactoryProvider).put(Objective3.class, (Provider) DaggerAppComponent.this.objective3SubcomponentFactoryProvider).put(Objective4.class, (Provider) DaggerAppComponent.this.objective4SubcomponentFactoryProvider).put(Objective5.class, (Provider) DaggerAppComponent.this.objective5SubcomponentFactoryProvider).put(Objective6.class, (Provider) DaggerAppComponent.this.objective6SubcomponentFactoryProvider).put(Objective7.class, (Provider) DaggerAppComponent.this.objective7SubcomponentFactoryProvider).put(Objective8.class, (Provider) DaggerAppComponent.this.objective8SubcomponentFactoryProvider).put(Objective9.class, (Provider) DaggerAppComponent.this.objective9SubcomponentFactoryProvider).put(Objective10.class, (Provider) DaggerAppComponent.this.objective10SubcomponentFactoryProvider).put(SWBreak.class, (Provider) DaggerAppComponent.this.sWBreakSubcomponentFactoryProvider).put(SWButton.class, (Provider) DaggerAppComponent.this.sWButtonSubcomponentFactoryProvider).put(SWEditNumberWithUnits.class, (Provider) DaggerAppComponent.this.sWEditNumberWithUnitsSubcomponentFactoryProvider).put(SWEditString.class, (Provider) DaggerAppComponent.this.sWEditStringSubcomponentFactoryProvider).put(SWEditEncryptedPassword.class, (Provider) DaggerAppComponent.this.sWEditEncryptedPasswordSubcomponentFactoryProvider).put(SWEditUrl.class, (Provider) DaggerAppComponent.this.sWEditUrlSubcomponentFactoryProvider).put(SWFragment.class, (Provider) DaggerAppComponent.this.sWFragmentSubcomponentFactoryProvider).put(SWHtmlLink.class, (Provider) DaggerAppComponent.this.sWHtmlLinkSubcomponentFactoryProvider).put(SWInfotext.class, (Provider) DaggerAppComponent.this.sWInfotextSubcomponentFactoryProvider).put(SWItem.class, (Provider) DaggerAppComponent.this.sWItemSubcomponentFactoryProvider).put(SWPlugin.class, (Provider) DaggerAppComponent.this.sWPluginSubcomponentFactoryProvider).put(SWRadioButton.class, (Provider) DaggerAppComponent.this.sWRadioButtonSubcomponentFactoryProvider).put(SWScreen.class, (Provider) DaggerAppComponent.this.sWScreenSubcomponentFactoryProvider).put(SWEventListener.class, (Provider) DaggerAppComponent.this.sWEventListenerSubcomponentFactoryProvider).put(ServiceTask.class, (Provider) DaggerAppComponent.this.serviceTaskSubcomponentFactoryProvider).put(PumpTask.class, (Provider) DaggerAppComponent.this.pumpTaskSubcomponentFactoryProvider).put(DiscoverGattServicesTask.class, (Provider) DaggerAppComponent.this.discoverGattServicesTaskSubcomponentFactoryProvider).put(InitializePumpManagerTask.class, (Provider) DaggerAppComponent.this.initializePumpManagerTaskSubcomponentFactoryProvider).put(ResetRileyLinkConfigurationTask.class, (Provider) DaggerAppComponent.this.resetRileyLinkConfigurationTaskSubcomponentFactoryProvider).put(WakeAndTuneTask.class, (Provider) DaggerAppComponent.this.wakeAndTuneTaskSubcomponentFactoryProvider).put(RadioResponse.class, (Provider) DaggerAppComponent.this.radioResponseSubcomponentFactoryProvider).put(RileyLinkBLE.class, (Provider) DaggerAppComponent.this.rileyLinkBLESubcomponentFactoryProvider).put(RFSpy.class, (Provider) DaggerAppComponent.this.rFSpySubcomponentFactoryProvider).put(SendAndListen.class, (Provider) DaggerAppComponent.this.sendAndListenSubcomponentFactoryProvider).put(SetPreamble.class, (Provider) DaggerAppComponent.this.setPreambleSubcomponentFactoryProvider).put(RadioPacket.class, (Provider) DaggerAppComponent.this.radioPacketSubcomponentFactoryProvider).put(MedtronicCommunicationManager.class, (Provider) DaggerAppComponent.this.medtronicCommunicationManagerSubcomponentFactoryProvider).put(MedtronicUITask.class, (Provider) DaggerAppComponent.this.medtronicUITaskSubcomponentFactoryProvider).put(PodManagementActivity.class, (Provider) DaggerAppComponent.this.podManagementActivitySubcomponentFactoryProvider).put(PodHistoryActivity.class, (Provider) DaggerAppComponent.this.podHistoryActivitySubcomponentFactoryProvider).put(PodActivationWizardActivity.class, (Provider) DaggerAppComponent.this.podActivationWizardActivitySubcomponentFactoryProvider).put(PodDeactivationWizardActivity.class, (Provider) DaggerAppComponent.this.podDeactivationWizardActivitySubcomponentFactoryProvider).put(OmnipodRileyLinkCommunicationManager.class, (Provider) DaggerAppComponent.this.omnipodRileyLinkCommunicationManagerSubcomponentFactoryProvider).put(RLHistoryItemOmnipod.class, (Provider) DaggerAppComponent.this.rLHistoryItemOmnipodSubcomponentFactoryProvider).put(LoggerCallback.class, (Provider) DaggerAppComponent.this.loggerCallbackSubcomponentFactoryProvider).put(DetermineBasalResultSMB.class, (Provider) DaggerAppComponent.this.determineBasalResultSMBSubcomponentFactoryProvider).put(DetermineBasalResultAMA.class, (Provider) DaggerAppComponent.this.determineBasalResultAMASubcomponentFactoryProvider).put(DetermineBasalAdapterAMAJS.class, (Provider) DaggerAppComponent.this.determineBasalAdapterAMAJSSubcomponentFactoryProvider).put(DetermineBasalAdapterSMBJS.class, (Provider) DaggerAppComponent.this.determineBasalAdapterSMBJSSubcomponentFactoryProvider).put(IobCobThread.class, (Provider) DaggerAppComponent.this.iobCobThreadSubcomponentFactoryProvider).put(IobCobOref1Thread.class, (Provider) DaggerAppComponent.this.iobCobOref1ThreadSubcomponentFactoryProvider).put(CryptoUtil.class, (Provider) DaggerAppComponent.this.cryptoUtilSubcomponentFactoryProvider).put(EncryptedPrefsFormat.class, (Provider) DaggerAppComponent.this.encryptedPrefsFormatSubcomponentFactoryProvider).put(ClassicPrefsFormat.class, (Provider) DaggerAppComponent.this.classicPrefsFormatSubcomponentFactoryProvider).put(PrefFileListProvider.class, (Provider) DaggerAppComponent.this.prefFileListProviderSubcomponentFactoryProvider).put(NotificationWithAction.class, (Provider) DaggerAppComponent.this.notificationWithActionSubcomponentFactoryProvider).put(GraphData.class, (Provider) DaggerAppComponent.this.graphDataSubcomponentFactoryProvider).put(GlucoseStatus.class, (Provider) DaggerAppComponent.this.glucoseStatusSubcomponentFactoryProvider).put(DatabaseHelper.class, (Provider) DaggerAppComponent.this.databaseHelperSubcomponentFactoryProvider).put(TreatmentService.class, (Provider) DaggerAppComponent.this.treatmentServiceSubcomponentFactoryProvider).put(FoodService.class, (Provider) DaggerAppComponent.this.foodServiceSubcomponentFactoryProvider).put(BolusWizard.class, (Provider) DaggerAppComponent.this.bolusWizardSubcomponentFactoryProvider).put(QuickWizardEntry.class, (Provider) DaggerAppComponent.this.quickWizardEntrySubcomponentFactoryProvider).put(AuthRequest.class, (Provider) DaggerAppComponent.this.authRequestSubcomponentFactoryProvider).put(SkinListPreference.class, (Provider) DaggerAppComponent.this.skinListPreferenceSubcomponentFactoryProvider).put(NetworkChangeReceiver.class, (Provider) DaggerAppComponent.this.networkChangeReceiverSubcomponentFactoryProvider).put(PrefImportListActivity.class, (Provider) DaggerAppComponent.this.prefImportListActivitySubcomponentFactoryProvider).put(TDDStatsActivity.class, (Provider) DaggerAppComponent.this.tDDStatsActivitySubcomponentFactoryProvider).put(BolusProgressHelperActivity.class, (Provider) DaggerAppComponent.this.bolusProgressHelperActivitySubcomponentFactoryProvider).put(ErrorHelperActivity.class, (Provider) DaggerAppComponent.this.errorHelperActivitySubcomponentFactoryProvider).put(BolusProgressDialog.class, (Provider) DaggerAppComponent.this.bolusProgressDialogSubcomponentFactoryProvider).put(ErrorDialog.class, (Provider) DaggerAppComponent.this.errorDialogSubcomponentFactoryProvider).put(NtpProgressDialog.class, (Provider) DaggerAppComponent.this.ntpProgressDialogSubcomponentFactoryProvider).put(ProfileViewerDialog.class, (Provider) DaggerAppComponent.this.profileViewerDialogSubcomponentFactoryProvider).put(PumpEnactResult.class, (Provider) DaggerAppComponent.this.pumpEnactResultSubcomponentFactoryProvider).put(APSResult.class, (Provider) DaggerAppComponent.this.aPSResultSubcomponentFactoryProvider).put(AutosensData.class, (Provider) DaggerAppComponent.this.autosensDataSubcomponentFactoryProvider).put(Profile.class, (Provider) DaggerAppComponent.this.profileSubcomponentFactoryProvider).put(ProfileStore.class, (Provider) DaggerAppComponent.this.profileStoreSubcomponentFactoryProvider).put(BgReading.class, (Provider) DaggerAppComponent.this.bgReadingSubcomponentFactoryProvider).put(Treatment.class, (Provider) DaggerAppComponent.this.treatmentSubcomponentFactoryProvider).put(ProfileSwitch.class, (Provider) DaggerAppComponent.this.profileSwitchSubcomponentFactoryProvider).put(TemporaryBasal.class, (Provider) DaggerAppComponent.this.temporaryBasalSubcomponentFactoryProvider).put(CareportalEvent.class, (Provider) DaggerAppComponent.this.careportalEventSubcomponentFactoryProvider).put(ExtendedBolus.class, (Provider) DaggerAppComponent.this.extendedBolusSubcomponentFactoryProvider).put(DanaFragment.class, (Provider) DaggerAppComponent.this.danaFragmentSubcomponentFactoryProvider).put(DanaHistoryActivity.class, (Provider) DaggerAppComponent.this.danaHistoryActivitySubcomponentFactoryProvider).put(DanaUserOptionsActivity.class, (Provider) DaggerAppComponent.this.danaUserOptionsActivitySubcomponentFactoryProvider).put(MessageBase.class, (Provider) DaggerAppComponent.this.messageBaseSubcomponentFactoryProvider).put(MsgSetTime.class, (Provider) DaggerAppComponent.this.msgSetTimeSubcomponentFactoryProvider).put(MsgBolusProgress.class, (Provider) DaggerAppComponent.this.msgBolusProgressSubcomponentFactoryProvider).put(MsgBolusStart.class, (Provider) DaggerAppComponent.this.msgBolusStartSubcomponentFactoryProvider).put(MsgBolusStartWithSpeed.class, (Provider) DaggerAppComponent.this.msgBolusStartWithSpeedSubcomponentFactoryProvider).put(MsgBolusStop.class, (Provider) DaggerAppComponent.this.msgBolusStopSubcomponentFactoryProvider).put(MsgCheckValue.class, (Provider) DaggerAppComponent.this.msgCheckValueSubcomponentFactoryProvider).put(MsgError.class, (Provider) DaggerAppComponent.this.msgErrorSubcomponentFactoryProvider).put(MsgHistoryAll.class, (Provider) DaggerAppComponent.this.msgHistoryAllSubcomponentFactoryProvider).put(MsgHistoryAllDone.class, (Provider) DaggerAppComponent.this.msgHistoryAllDoneSubcomponentFactoryProvider).put(MsgHistoryDone.class, (Provider) DaggerAppComponent.this.msgHistoryDoneSubcomponentFactoryProvider).put(MsgHistoryNewDone.class, (Provider) DaggerAppComponent.this.msgHistoryNewDoneSubcomponentFactoryProvider).put(MsgInitConnStatusBasic.class, (Provider) DaggerAppComponent.this.msgInitConnStatusBasicSubcomponentFactoryProvider).put(MsgInitConnStatusBolus.class, (Provider) DaggerAppComponent.this.msgInitConnStatusBolusSubcomponentFactoryProvider).put(MsgInitConnStatusOption.class, (Provider) DaggerAppComponent.this.msgInitConnStatusOptionSubcomponentFactoryProvider).put(MsgInitConnStatusTime.class, (Provider) DaggerAppComponent.this.msgInitConnStatusTimeSubcomponentFactoryProvider).put(MsgPCCommStart.class, (Provider) DaggerAppComponent.this.msgPCCommStartSubcomponentFactoryProvider).put(MsgPCCommStop.class, (Provider) DaggerAppComponent.this.msgPCCommStopSubcomponentFactoryProvider).put(MsgSetActivateBasalProfile.class, (Provider) DaggerAppComponent.this.msgSetActivateBasalProfileSubcomponentFactoryProvider).put(MsgSetBasalProfile.class, (Provider) DaggerAppComponent.this.msgSetBasalProfileSubcomponentFactoryProvider).put(MsgSetCarbsEntry.class, (Provider) DaggerAppComponent.this.msgSetCarbsEntrySubcomponentFactoryProvider).put(MsgSetExtendedBolusStart.class, (Provider) DaggerAppComponent.this.msgSetExtendedBolusStartSubcomponentFactoryProvider).put(MsgSetExtendedBolusStop.class, (Provider) DaggerAppComponent.this.msgSetExtendedBolusStopSubcomponentFactoryProvider).put(MsgSetSingleBasalProfile.class, (Provider) DaggerAppComponent.this.msgSetSingleBasalProfileSubcomponentFactoryProvider).put(MsgSetTempBasalStart.class, (Provider) DaggerAppComponent.this.msgSetTempBasalStartSubcomponentFactoryProvider).put(MsgSetTempBasalStop.class, (Provider) DaggerAppComponent.this.msgSetTempBasalStopSubcomponentFactoryProvider).put(MsgSetUserOptions.class, (Provider) DaggerAppComponent.this.msgSetUserOptionsSubcomponentFactoryProvider).put(MsgSettingActiveProfile.class, (Provider) DaggerAppComponent.this.msgSettingActiveProfileSubcomponentFactoryProvider).put(MsgSettingBasal.class, (Provider) DaggerAppComponent.this.msgSettingBasalSubcomponentFactoryProvider).put(MsgSettingBasalProfileAll.class, (Provider) DaggerAppComponent.this.msgSettingBasalProfileAllSubcomponentFactoryProvider).put(MsgSettingGlucose.class, (Provider) DaggerAppComponent.this.msgSettingGlucoseSubcomponentFactoryProvider).put(MsgSettingMaxValues.class, (Provider) DaggerAppComponent.this.msgSettingMaxValuesSubcomponentFactoryProvider).put(MsgSettingMeal.class, (Provider) DaggerAppComponent.this.msgSettingMealSubcomponentFactoryProvider).put(MsgSettingProfileRatios.class, (Provider) DaggerAppComponent.this.msgSettingProfileRatiosSubcomponentFactoryProvider).put(MsgSettingProfileRatiosAll.class, (Provider) DaggerAppComponent.this.msgSettingProfileRatiosAllSubcomponentFactoryProvider).put(MsgSettingPumpTime.class, (Provider) DaggerAppComponent.this.msgSettingPumpTimeSubcomponentFactoryProvider).put(MsgSettingShippingInfo.class, (Provider) DaggerAppComponent.this.msgSettingShippingInfoSubcomponentFactoryProvider).put(MsgSettingUserOptions.class, (Provider) DaggerAppComponent.this.msgSettingUserOptionsSubcomponentFactoryProvider).put(MsgStatus.class, (Provider) DaggerAppComponent.this.msgStatusSubcomponentFactoryProvider).put(MsgStatusBasic.class, (Provider) DaggerAppComponent.this.msgStatusBasicSubcomponentFactoryProvider).put(MsgStatusBolusExtended.class, (Provider) DaggerAppComponent.this.msgStatusBolusExtendedSubcomponentFactoryProvider).put(MsgStatusProfile.class, (Provider) DaggerAppComponent.this.msgStatusProfileSubcomponentFactoryProvider).put(MsgStatusTempBasal.class, (Provider) DaggerAppComponent.this.msgStatusTempBasalSubcomponentFactoryProvider).put(MsgHistoryBolus.class, (Provider) DaggerAppComponent.this.msgHistoryBolusSubcomponentFactoryProvider).put(MsgHistoryDailyInsulin.class, (Provider) DaggerAppComponent.this.msgHistoryDailyInsulinSubcomponentFactoryProvider).put(MsgHistoryGlucose.class, (Provider) DaggerAppComponent.this.msgHistoryGlucoseSubcomponentFactoryProvider).put(MsgHistoryAlarm.class, (Provider) DaggerAppComponent.this.msgHistoryAlarmSubcomponentFactoryProvider).put(MsgHistoryError.class, (Provider) DaggerAppComponent.this.msgHistoryErrorSubcomponentFactoryProvider).put(MsgHistoryCarbo.class, (Provider) DaggerAppComponent.this.msgHistoryCarboSubcomponentFactoryProvider).put(MsgHistoryRefill.class, (Provider) DaggerAppComponent.this.msgHistoryRefillSubcomponentFactoryProvider).put(MsgHistorySuspend.class, (Provider) DaggerAppComponent.this.msgHistorySuspendSubcomponentFactoryProvider).put(MsgHistoryBasalHour.class, (Provider) DaggerAppComponent.this.msgHistoryBasalHourSubcomponentFactoryProvider).put(MsgHistoryNew.class, (Provider) DaggerAppComponent.this.msgHistoryNewSubcomponentFactoryProvider).put(MsgCheckValue_v2.class, (Provider) DaggerAppComponent.this.msgCheckValue_v2SubcomponentFactoryProvider).put(MsgHistoryEvents_v2.class, (Provider) DaggerAppComponent.this.msgHistoryEvents_v2SubcomponentFactoryProvider).put(MsgSetAPSTempBasalStart_v2.class, (Provider) DaggerAppComponent.this.msgSetAPSTempBasalStart_v2SubcomponentFactoryProvider).put(MsgSetHistoryEntry_v2.class, (Provider) DaggerAppComponent.this.msgSetHistoryEntry_v2SubcomponentFactoryProvider).put(MsgStatusAPS_v2.class, (Provider) DaggerAppComponent.this.msgStatusAPS_v2SubcomponentFactoryProvider).put(MsgStatusBolusExtended_v2.class, (Provider) DaggerAppComponent.this.msgStatusBolusExtended_v2SubcomponentFactoryProvider).put(MsgStatusTempBasal_v2.class, (Provider) DaggerAppComponent.this.msgStatusTempBasal_v2SubcomponentFactoryProvider).put(MsgCheckValue_k.class, (Provider) DaggerAppComponent.this.msgCheckValue_kSubcomponentFactoryProvider).put(MsgInitConnStatusBasic_k.class, (Provider) DaggerAppComponent.this.msgInitConnStatusBasic_kSubcomponentFactoryProvider).put(MsgInitConnStatusBolus_k.class, (Provider) DaggerAppComponent.this.msgInitConnStatusBolus_kSubcomponentFactoryProvider).put(MsgInitConnStatusTime_k.class, (Provider) DaggerAppComponent.this.msgInitConnStatusTime_kSubcomponentFactoryProvider).put(MsgSettingBasalProfileAll_k.class, (Provider) DaggerAppComponent.this.msgSettingBasalProfileAll_kSubcomponentFactoryProvider).put(MsgSettingBasal_k.class, (Provider) DaggerAppComponent.this.msgSettingBasal_kSubcomponentFactoryProvider).put(MsgStatusBasic_k.class, (Provider) DaggerAppComponent.this.msgStatusBasic_kSubcomponentFactoryProvider).put(MsgStatus_k.class, (Provider) DaggerAppComponent.this.msgStatus_kSubcomponentFactoryProvider).put(AbstractDanaRExecutionService.class, (Provider) DaggerAppComponent.this.abstractDanaRExecutionServiceSubcomponentFactoryProvider).put(DanaRv2ExecutionService.class, (Provider) DaggerAppComponent.this.danaRv2ExecutionServiceSubcomponentFactoryProvider).put(DanaRExecutionService.class, (Provider) DaggerAppComponent.this.danaRExecutionServiceSubcomponentFactoryProvider).put(DanaRKoreanExecutionService.class, (Provider) DaggerAppComponent.this.danaRKoreanExecutionServiceSubcomponentFactoryProvider).put(DanaRS_Packet.class, (Provider) DaggerAppComponent.this.danaRS_PacketSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Basal_Rate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Get_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Profile_Basal_Rate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Profile_Number.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Get_Profile_NumberSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Basal_Rate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Profile_Basal_Rate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Profile_Number.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Profile_NumberSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Suspend_Off.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Suspend_OffSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Suspend_On.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Suspend_OnSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Set_Temporary_Basal.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Set_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_Basal_Get_Temporary_Basal_State.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Bolus_Option.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Initial_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Initial_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Calculation_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_CIR_CF_Array.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_24_CIR_CF_Array.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Dual_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Dual_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Extended_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Bolus_State.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Get_Step_Bolus_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Bolus_Option.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Initial_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Initial_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_CIR_CF_Array.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_24_CIR_CF_Array.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Dual_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Dual_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Extended_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Extended_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Step_Bolus_Start.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentFactoryProvider).put(DanaRS_Packet_Bolus_Set_Step_Bolus_Stop.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentFactoryProvider).put(DanaRS_Packet_Etc_Keep_Connection.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Etc_Keep_ConnectionSubcomponentFactoryProvider).put(DanaRS_Packet_Etc_Set_History_Save.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Etc_Set_History_SaveSubcomponentFactoryProvider).put(DanaRS_Packet_General_Delivery_Status.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Delivery_StatusSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Password.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_PasswordSubcomponentFactoryProvider).put(DanaRS_Packet_General_Initial_Screen_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Initial_Screen_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Alarm.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Notify_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Delivery_Complete.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Notify_Delivery_CompleteSubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Delivery_Rate_Display.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentFactoryProvider).put(DanaRS_Packet_Notify_Missed_Bolus_Alarm.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_Pump_Time.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Get_Pump_TimeSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_User_Option.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Get_User_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_Pump_Time.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Set_Pump_TimeSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_User_Option.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Set_User_OptionSubcomponentFactoryProvider).put(DanaRS_Packet_History_.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_SubcomponentFactoryProvider).put(DanaRS_Packet_History_Alarm.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_AlarmSubcomponentFactoryProvider).put(DanaRS_Packet_History_All_History.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_All_HistorySubcomponentFactoryProvider).put(DanaRS_Packet_History_Basal.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_History_Blood_Glucose.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_Blood_GlucoseSubcomponentFactoryProvider).put(DanaRS_Packet_History_Bolus.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_BolusSubcomponentFactoryProvider).put(DanaRS_Packet_Review_Bolus_Avg.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Review_Bolus_AvgSubcomponentFactoryProvider).put(DanaRS_Packet_History_Carbohydrate.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_CarbohydrateSubcomponentFactoryProvider).put(DanaRS_Packet_History_Daily.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_DailySubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_More_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_More_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Pump_Check.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_Pump_CheckSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Shipping_Information.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_Shipping_InformationSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Today_Delivery_Total.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_User_Time_Change_Flag.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentFactoryProvider).put(DanaRS_Packet_History_Prime.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_PrimeSubcomponentFactoryProvider).put(DanaRS_Packet_History_Refill.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_RefillSubcomponentFactoryProvider).put(DanaRS_Packet_General_Set_History_Upload_Mode.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Set_History_Upload_ModeSubcomponentFactoryProvider).put(DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentFactoryProvider).put(DanaRS_Packet_History_Suspend.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_SuspendSubcomponentFactoryProvider).put(DanaRS_Packet_History_Temporary.class, (Provider) DaggerAppComponent.this.danaRS_Packet_History_TemporarySubcomponentFactoryProvider).put(DanaRS_Packet_APS_Basal_Set_Temporary_Basal.class, (Provider) DaggerAppComponent.this.danaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentFactoryProvider).put(DanaRS_Packet_APS_History_Events.class, (Provider) DaggerAppComponent.this.danaRS_Packet_APS_History_EventsSubcomponentFactoryProvider).put(DanaRS_Packet_APS_Set_Event_History.class, (Provider) DaggerAppComponent.this.danaRS_Packet_APS_Set_Event_HistorySubcomponentFactoryProvider).put(DanaRS_Packet_General_Get_Shipping_Version.class, (Provider) DaggerAppComponent.this.danaRS_Packet_General_Get_Shipping_VersionSubcomponentFactoryProvider).put(DanaRS_Packet_Review_Get_Pump_Dec_Ratio.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider).put(DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.class, (Provider) DaggerAppComponent.this.danaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentFactoryProvider).put(BLEScanActivity.class, (Provider) DaggerAppComponent.this.bLEScanActivitySubcomponentFactoryProvider).put(PairingHelperActivity.class, (Provider) DaggerAppComponent.this.pairingHelperActivitySubcomponentFactoryProvider).put(EnterPinActivity.class, (Provider) DaggerAppComponent.this.enterPinActivitySubcomponentFactoryProvider).put(PairingProgressDialog.class, (Provider) DaggerAppComponent.this.pairingProgressDialogSubcomponentFactoryProvider).put(DanaRSService.class, (Provider) DaggerAppComponent.this.danaRSServiceSubcomponentFactoryProvider).put(OHUploadWorker.class, (Provider) DaggerAppComponent.this.oHUploadWorkerSubcomponentFactoryProvider).put(DeactivatePodActionFragment.class, (Provider) deactivatePodActionFragmentSubcomponentFactoryProvider).put(InsertCannulaActionFragment.class, (Provider) insertCannulaActionFragmentSubcomponentFactoryProvider).put(InitializePodActionFragment.class, (Provider) initializePodActionFragmentSubcomponentFactoryProvider).put(AttachPodInfoFragment.class, (Provider) attachPodInfoFragmentSubcomponentFactoryProvider).put(DeactivatePodInfoFragment.class, (Provider) deactivatePodInfoFragmentSubcomponentFactoryProvider).put(FillPodInfoFragment.class, (Provider) fillPodInfoFragmentSubcomponentFactoryProvider).put(PodDeactivatedInfoFragment.class, (Provider) podDeactivatedInfoFragmentSubcomponentFactoryProvider).put(PodDiscardedInfoFragment.class, (Provider) podDiscardedInfoFragmentSubcomponentFactoryProvider).put(PodActivatedInfoFragment.class, (Provider) podActivatedInfoFragmentSubcomponentFactoryProvider).build();
    }

    private DispatchingAndroidInjector<Object> dispatchingAndroidInjectorOfObject() {
      return DispatchingAndroidInjector_Factory.newInstance(mapOfClassOfAndProviderOfAndroidInjectorFactoryOf(), ImmutableMap.<String, Provider<AndroidInjector.Factory<?>>>of());
    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    private Map<Class<? extends ViewModel>, Provider<ViewModel>> omnipodPluginQualifierMapOfClassOfAndProviderOfViewModel(
        ) {
      return ImmutableMap.<Class<? extends ViewModel>, Provider<ViewModel>>of(InitializePodActionViewModel.class, (Provider) initializePodActionViewModelProvider, InsertCannulaActionViewModel.class, (Provider) insertCannulaActionViewModelProvider, DeactivatePodActionViewModel.class, (Provider) deactivatePodActionViewModelProvider);
    }

    private ViewModelProvider.Factory omnipodPluginQualifierViewModelProviderFactory() {
      return OmnipodWizardModule_Companion_ProvidesViewModelFactoryFactory.providesViewModelFactory(omnipodPluginQualifierMapOfClassOfAndProviderOfViewModel());
    }

    @SuppressWarnings("unchecked")
    private void initialize(final PodDeactivationWizardActivity arg0) {
      this.deactivatePodActionFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent.Factory get(
            ) {
          return new DeactivatePodActionFragmentSubcomponentFactory();
        }
      };
      this.insertCannulaActionFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent.Factory get(
            ) {
          return new InsertCannulaActionFragmentSubcomponentFactory();
        }
      };
      this.initializePodActionFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent.Factory get(
            ) {
          return new InitializePodActionFragmentSubcomponentFactory();
        }
      };
      this.attachPodInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent.Factory get(
            ) {
          return new AttachPodInfoFragmentSubcomponentFactory();
        }
      };
      this.deactivatePodInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent.Factory get(
            ) {
          return new DeactivatePodInfoFragmentSubcomponentFactory();
        }
      };
      this.fillPodInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent.Factory get(
            ) {
          return new FillPodInfoFragmentSubcomponentFactory();
        }
      };
      this.podDeactivatedInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent.Factory get(
            ) {
          return new PodDeactivatedInfoFragmentSubcomponentFactory();
        }
      };
      this.podDiscardedInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent.Factory get(
            ) {
          return new PodDiscardedInfoFragmentSubcomponentFactory();
        }
      };
      this.podActivatedInfoFragmentSubcomponentFactoryProvider = new Provider<OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent.Factory>() {
        @Override
        public OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent.Factory get(
            ) {
          return new PodActivatedInfoFragmentSubcomponentFactory();
        }
      };
      this.initializePodActionViewModelProvider = InitializePodActionViewModel_Factory.create(DaggerAppComponent.this.aapsOmnipodManagerProvider);
      this.insertCannulaActionViewModelProvider = InsertCannulaActionViewModel_Factory.create(DaggerAppComponent.this.aapsOmnipodManagerProvider, DaggerAppComponent.this.provideProfileFunctionProvider);
      this.deactivatePodActionViewModelProvider = DeactivatePodActionViewModel_Factory.create(DaggerAppComponent.this.aapsOmnipodManagerProvider, (Provider) DaggerAppComponent.this.commandQueueProvider);
    }

    @Override
    public void inject(PodDeactivationWizardActivity arg0) {
      injectPodDeactivationWizardActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PodDeactivationWizardActivity injectPodDeactivationWizardActivity(
        PodDeactivationWizardActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      return instance;
    }

    private final class DeactivatePodActionFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent create(
          DeactivatePodActionFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new DeactivatePodActionFragmentSubcomponentImpl(arg0);
      }
    }

    private final class DeactivatePodActionFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesDeactivatePodActionFragment$omnipod_release.DeactivatePodActionFragmentSubcomponent {
      private DeactivatePodActionFragmentSubcomponentImpl(DeactivatePodActionFragment arg0) {

      }

      @Override
      public void inject(DeactivatePodActionFragment arg0) {
        injectDeactivatePodActionFragment(arg0);
      }

      @CanIgnoreReturnValue
      private DeactivatePodActionFragment injectDeactivatePodActionFragment(
          DeactivatePodActionFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        DeactivatePodActionFragment_MembersInjector.injectViewModelFactory(instance, PodDeactivationWizardActivitySubcomponentImpl.this.omnipodPluginQualifierViewModelProviderFactory());
        DeactivatePodActionFragment_MembersInjector.injectAapsOmnipodManager(instance, DaggerAppComponent.this.aapsOmnipodManagerProvider.get());
        return instance;
      }
    }

    private final class InsertCannulaActionFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent create(
          InsertCannulaActionFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new InsertCannulaActionFragmentSubcomponentImpl(arg0);
      }
    }

    private final class InsertCannulaActionFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesInsertCannulaActionFragment$omnipod_release.InsertCannulaActionFragmentSubcomponent {
      private InsertCannulaActionFragmentSubcomponentImpl(InsertCannulaActionFragment arg0) {

      }

      @Override
      public void inject(InsertCannulaActionFragment arg0) {
        injectInsertCannulaActionFragment(arg0);
      }

      @CanIgnoreReturnValue
      private InsertCannulaActionFragment injectInsertCannulaActionFragment(
          InsertCannulaActionFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        PodActivationActionFragmentBase_MembersInjector.injectPodStateManager(instance, DaggerAppComponent.this.podStateManager());
        InsertCannulaActionFragment_MembersInjector.injectViewModelFactory(instance, PodDeactivationWizardActivitySubcomponentImpl.this.omnipodPluginQualifierViewModelProviderFactory());
        return instance;
      }
    }

    private final class InitializePodActionFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent create(
          InitializePodActionFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new InitializePodActionFragmentSubcomponentImpl(arg0);
      }
    }

    private final class InitializePodActionFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesInitializePodActionFragment$omnipod_release.InitializePodActionFragmentSubcomponent {
      private InitializePodActionFragmentSubcomponentImpl(InitializePodActionFragment arg0) {

      }

      @Override
      public void inject(InitializePodActionFragment arg0) {
        injectInitializePodActionFragment(arg0);
      }

      @CanIgnoreReturnValue
      private InitializePodActionFragment injectInitializePodActionFragment(
          InitializePodActionFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        PodActivationActionFragmentBase_MembersInjector.injectPodStateManager(instance, DaggerAppComponent.this.podStateManager());
        InitializePodActionFragment_MembersInjector.injectViewModelFactory(instance, PodDeactivationWizardActivitySubcomponentImpl.this.omnipodPluginQualifierViewModelProviderFactory());
        return instance;
      }
    }

    private final class AttachPodInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent create(
          AttachPodInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new AttachPodInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class AttachPodInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesAttachPodInfoFragment$omnipod_release.AttachPodInfoFragmentSubcomponent {
      private AttachPodInfoFragmentSubcomponentImpl(AttachPodInfoFragment arg0) {

      }

      @Override
      public void inject(AttachPodInfoFragment arg0) {
        injectAttachPodInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private AttachPodInfoFragment injectAttachPodInfoFragment(AttachPodInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class DeactivatePodInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent create(
          DeactivatePodInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new DeactivatePodInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class DeactivatePodInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesDeactivatePodInfoFragment$omnipod_release.DeactivatePodInfoFragmentSubcomponent {
      private DeactivatePodInfoFragmentSubcomponentImpl(DeactivatePodInfoFragment arg0) {

      }

      @Override
      public void inject(DeactivatePodInfoFragment arg0) {
        injectDeactivatePodInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private DeactivatePodInfoFragment injectDeactivatePodInfoFragment(
          DeactivatePodInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class FillPodInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent create(
          FillPodInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new FillPodInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class FillPodInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesFillPodInfoFragment$omnipod_release.FillPodInfoFragmentSubcomponent {
      private FillPodInfoFragmentSubcomponentImpl(FillPodInfoFragment arg0) {

      }

      @Override
      public void inject(FillPodInfoFragment arg0) {
        injectFillPodInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private FillPodInfoFragment injectFillPodInfoFragment(FillPodInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class PodDeactivatedInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent create(
          PodDeactivatedInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new PodDeactivatedInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class PodDeactivatedInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesPodDeactivatedInfoFragment$omnipod_release.PodDeactivatedInfoFragmentSubcomponent {
      private PodDeactivatedInfoFragmentSubcomponentImpl(PodDeactivatedInfoFragment arg0) {

      }

      @Override
      public void inject(PodDeactivatedInfoFragment arg0) {
        injectPodDeactivatedInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private PodDeactivatedInfoFragment injectPodDeactivatedInfoFragment(
          PodDeactivatedInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class PodDiscardedInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent create(
          PodDiscardedInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new PodDiscardedInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class PodDiscardedInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesPodDiscardedInfoFragment$omnipod_release.PodDiscardedInfoFragmentSubcomponent {
      private PodDiscardedInfoFragmentSubcomponentImpl(PodDiscardedInfoFragment arg0) {

      }

      @Override
      public void inject(PodDiscardedInfoFragment arg0) {
        injectPodDiscardedInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private PodDiscardedInfoFragment injectPodDiscardedInfoFragment(
          PodDiscardedInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }

    private final class PodActivatedInfoFragmentSubcomponentFactory implements OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent.Factory {
      @Override
      public OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent create(
          PodActivatedInfoFragment arg0) {
        Preconditions.checkNotNull(arg0);
        return new PodActivatedInfoFragmentSubcomponentImpl(arg0);
      }
    }

    private final class PodActivatedInfoFragmentSubcomponentImpl implements OmnipodWizardModule_ContributesPodActivatedInfoFragment$omnipod_release.PodActivatedInfoFragmentSubcomponent {
      private PodActivatedInfoFragmentSubcomponentImpl(PodActivatedInfoFragment arg0) {

      }

      @Override
      public void inject(PodActivatedInfoFragment arg0) {
        injectPodActivatedInfoFragment(arg0);
      }

      @CanIgnoreReturnValue
      private PodActivatedInfoFragment injectPodActivatedInfoFragment(
          PodActivatedInfoFragment instance) {
        DaggerFragment_MembersInjector.injectAndroidInjector(instance, PodDeactivationWizardActivitySubcomponentImpl.this.dispatchingAndroidInjectorOfObject());
        return instance;
      }
    }
  }

  private final class OmnipodRileyLinkCommunicationManagerSubcomponentFactory implements OmnipodModule_OmnipodCommunicationManagerProvider.OmnipodRileyLinkCommunicationManagerSubcomponent.Factory {
    @Override
    public OmnipodModule_OmnipodCommunicationManagerProvider.OmnipodRileyLinkCommunicationManagerSubcomponent create(
        OmnipodRileyLinkCommunicationManager arg0) {
      Preconditions.checkNotNull(arg0);
      return new OmnipodRileyLinkCommunicationManagerSubcomponentImpl(arg0);
    }
  }

  private final class OmnipodRileyLinkCommunicationManagerSubcomponentImpl implements OmnipodModule_OmnipodCommunicationManagerProvider.OmnipodRileyLinkCommunicationManagerSubcomponent {
    private OmnipodRileyLinkCommunicationManagerSubcomponentImpl(
        OmnipodRileyLinkCommunicationManager arg0) {

    }

    @Override
    public void inject(OmnipodRileyLinkCommunicationManager arg0) {
      injectOmnipodRileyLinkCommunicationManager(arg0);
    }

    @CanIgnoreReturnValue
    private OmnipodRileyLinkCommunicationManager injectOmnipodRileyLinkCommunicationManager(
        OmnipodRileyLinkCommunicationManager instance) {
      RileyLinkCommunicationManager_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectRileyLinkServiceData(instance, DaggerAppComponent.this.rileyLinkServiceDataProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectServiceTaskExecutor(instance, DaggerAppComponent.this.serviceTaskExecutorProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectRfspy(instance, DaggerAppComponent.this.rFSpyProvider.get());
      RileyLinkCommunicationManager_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      RileyLinkCommunicationManager_MembersInjector.injectActivePluginProvider(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class RLHistoryItemOmnipodSubcomponentFactory implements OmnipodModule_RlHistoryItemOmnipod.RLHistoryItemOmnipodSubcomponent.Factory {
    @Override
    public OmnipodModule_RlHistoryItemOmnipod.RLHistoryItemOmnipodSubcomponent create(
        RLHistoryItemOmnipod arg0) {
      Preconditions.checkNotNull(arg0);
      return new RLHistoryItemOmnipodSubcomponentImpl(arg0);
    }
  }

  private final class RLHistoryItemOmnipodSubcomponentImpl implements OmnipodModule_RlHistoryItemOmnipod.RLHistoryItemOmnipodSubcomponent {
    private RLHistoryItemOmnipodSubcomponentImpl(RLHistoryItemOmnipod arg0) {

    }

    @Override
    public void inject(RLHistoryItemOmnipod arg0) {
      injectRLHistoryItemOmnipod(arg0);
    }

    @CanIgnoreReturnValue
    private RLHistoryItemOmnipod injectRLHistoryItemOmnipod(RLHistoryItemOmnipod instance) {
      RLHistoryItemOmnipod_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class LoggerCallbackSubcomponentFactory implements APSModule_LoggerCallbackInjector.LoggerCallbackSubcomponent.Factory {
    @Override
    public APSModule_LoggerCallbackInjector.LoggerCallbackSubcomponent create(LoggerCallback arg0) {
      Preconditions.checkNotNull(arg0);
      return new LoggerCallbackSubcomponentImpl(arg0);
    }
  }

  private final class LoggerCallbackSubcomponentImpl implements APSModule_LoggerCallbackInjector.LoggerCallbackSubcomponent {
    private LoggerCallbackSubcomponentImpl(LoggerCallback arg0) {

    }

    @Override
    public void inject(LoggerCallback arg0) {
      injectLoggerCallback(arg0);
    }

    @CanIgnoreReturnValue
    private LoggerCallback injectLoggerCallback(LoggerCallback instance) {
      LoggerCallback_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class DetermineBasalResultSMBSubcomponentFactory implements APSModule_DetermineBasalResultSMBInjector.DetermineBasalResultSMBSubcomponent.Factory {
    @Override
    public APSModule_DetermineBasalResultSMBInjector.DetermineBasalResultSMBSubcomponent create(
        DetermineBasalResultSMB arg0) {
      Preconditions.checkNotNull(arg0);
      return new DetermineBasalResultSMBSubcomponentImpl(arg0);
    }
  }

  private final class DetermineBasalResultSMBSubcomponentImpl implements APSModule_DetermineBasalResultSMBInjector.DetermineBasalResultSMBSubcomponent {
    private DetermineBasalResultSMBSubcomponentImpl(DetermineBasalResultSMB arg0) {

    }

    @Override
    public void inject(DetermineBasalResultSMB arg0) {
      injectDetermineBasalResultSMB(arg0);
    }

    @CanIgnoreReturnValue
    private DetermineBasalResultSMB injectDetermineBasalResultSMB(
        DetermineBasalResultSMB instance) {
      APSResult_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      APSResult_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      APSResult_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      APSResult_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      APSResult_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      APSResult_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      APSResult_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      APSResult_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DetermineBasalResultSMB_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      return instance;
    }
  }

  private final class DetermineBasalResultAMASubcomponentFactory implements APSModule_DetermineBasalResultAMAInjector.DetermineBasalResultAMASubcomponent.Factory {
    @Override
    public APSModule_DetermineBasalResultAMAInjector.DetermineBasalResultAMASubcomponent create(
        DetermineBasalResultAMA arg0) {
      Preconditions.checkNotNull(arg0);
      return new DetermineBasalResultAMASubcomponentImpl(arg0);
    }
  }

  private final class DetermineBasalResultAMASubcomponentImpl implements APSModule_DetermineBasalResultAMAInjector.DetermineBasalResultAMASubcomponent {
    private DetermineBasalResultAMASubcomponentImpl(DetermineBasalResultAMA arg0) {

    }

    @Override
    public void inject(DetermineBasalResultAMA arg0) {
      injectDetermineBasalResultAMA(arg0);
    }

    @CanIgnoreReturnValue
    private DetermineBasalResultAMA injectDetermineBasalResultAMA(
        DetermineBasalResultAMA instance) {
      APSResult_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      APSResult_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      APSResult_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      APSResult_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      APSResult_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      APSResult_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      APSResult_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      APSResult_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class DetermineBasalAdapterAMAJSSubcomponentFactory implements APSModule_DetermineBasalAdapterAMAJSInjector.DetermineBasalAdapterAMAJSSubcomponent.Factory {
    @Override
    public APSModule_DetermineBasalAdapterAMAJSInjector.DetermineBasalAdapterAMAJSSubcomponent create(
        DetermineBasalAdapterAMAJS arg0) {
      Preconditions.checkNotNull(arg0);
      return new DetermineBasalAdapterAMAJSSubcomponentImpl(arg0);
    }
  }

  private final class DetermineBasalAdapterAMAJSSubcomponentImpl implements APSModule_DetermineBasalAdapterAMAJSInjector.DetermineBasalAdapterAMAJSSubcomponent {
    private DetermineBasalAdapterAMAJSSubcomponentImpl(DetermineBasalAdapterAMAJS arg0) {

    }

    @Override
    public void inject(DetermineBasalAdapterAMAJS arg0) {
      injectDetermineBasalAdapterAMAJS(arg0);
    }

    @CanIgnoreReturnValue
    private DetermineBasalAdapterAMAJS injectDetermineBasalAdapterAMAJS(
        DetermineBasalAdapterAMAJS instance) {
      DetermineBasalAdapterAMAJS_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DetermineBasalAdapterAMAJS_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      DetermineBasalAdapterAMAJS_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DetermineBasalAdapterAMAJS_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      DetermineBasalAdapterAMAJS_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      DetermineBasalAdapterAMAJS_MembersInjector.injectOpenHumansUploader(instance, DaggerAppComponent.this.openHumansUploaderProvider.get());
      return instance;
    }
  }

  private final class DetermineBasalAdapterSMBJSSubcomponentFactory implements APSModule_DetermineBasalAdapterSMBJSInjector.DetermineBasalAdapterSMBJSSubcomponent.Factory {
    @Override
    public APSModule_DetermineBasalAdapterSMBJSInjector.DetermineBasalAdapterSMBJSSubcomponent create(
        DetermineBasalAdapterSMBJS arg0) {
      Preconditions.checkNotNull(arg0);
      return new DetermineBasalAdapterSMBJSSubcomponentImpl(arg0);
    }
  }

  private final class DetermineBasalAdapterSMBJSSubcomponentImpl implements APSModule_DetermineBasalAdapterSMBJSInjector.DetermineBasalAdapterSMBJSSubcomponent {
    private DetermineBasalAdapterSMBJSSubcomponentImpl(DetermineBasalAdapterSMBJS arg0) {

    }

    @Override
    public void inject(DetermineBasalAdapterSMBJS arg0) {
      injectDetermineBasalAdapterSMBJS(arg0);
    }

    @CanIgnoreReturnValue
    private DetermineBasalAdapterSMBJS injectDetermineBasalAdapterSMBJS(
        DetermineBasalAdapterSMBJS instance) {
      DetermineBasalAdapterSMBJS_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DetermineBasalAdapterSMBJS_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      DetermineBasalAdapterSMBJS_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DetermineBasalAdapterSMBJS_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DetermineBasalAdapterSMBJS_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      DetermineBasalAdapterSMBJS_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      DetermineBasalAdapterSMBJS_MembersInjector.injectActivePluginProvider(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DetermineBasalAdapterSMBJS_MembersInjector.injectOpenHumansUploader(instance, DaggerAppComponent.this.openHumansUploaderProvider.get());
      return instance;
    }
  }

  private final class IobCobThreadSubcomponentFactory implements APSModule_IobCobThreadInjector.IobCobThreadSubcomponent.Factory {
    @Override
    public APSModule_IobCobThreadInjector.IobCobThreadSubcomponent create(IobCobThread arg0) {
      Preconditions.checkNotNull(arg0);
      return new IobCobThreadSubcomponentImpl(arg0);
    }
  }

  private final class IobCobThreadSubcomponentImpl implements APSModule_IobCobThreadInjector.IobCobThreadSubcomponent {
    private IobCobThreadSubcomponentImpl(IobCobThread arg0) {

    }

    @Override
    public void inject(IobCobThread arg0) {
      injectIobCobThread(arg0);
    }

    @CanIgnoreReturnValue
    private IobCobThread injectIobCobThread(IobCobThread instance) {
      IobCobThread_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      IobCobThread_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      IobCobThread_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      IobCobThread_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      IobCobThread_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      IobCobThread_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      IobCobThread_MembersInjector.injectSensitivityAAPSPlugin(instance, DaggerAppComponent.this.sensitivityAAPSPluginProvider.get());
      IobCobThread_MembersInjector.injectSensitivityWeightedAveragePlugin(instance, DaggerAppComponent.this.sensitivityWeightedAveragePluginProvider.get());
      IobCobThread_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      IobCobThread_MembersInjector.injectProfiler(instance, DaggerAppComponent.this.profilerProvider.get());
      IobCobThread_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      IobCobThread_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class IobCobOref1ThreadSubcomponentFactory implements APSModule_IobCobOref1ThreadInjector.IobCobOref1ThreadSubcomponent.Factory {
    @Override
    public APSModule_IobCobOref1ThreadInjector.IobCobOref1ThreadSubcomponent create(
        IobCobOref1Thread arg0) {
      Preconditions.checkNotNull(arg0);
      return new IobCobOref1ThreadSubcomponentImpl(arg0);
    }
  }

  private final class IobCobOref1ThreadSubcomponentImpl implements APSModule_IobCobOref1ThreadInjector.IobCobOref1ThreadSubcomponent {
    private IobCobOref1ThreadSubcomponentImpl(IobCobOref1Thread arg0) {

    }

    @Override
    public void inject(IobCobOref1Thread arg0) {
      injectIobCobOref1Thread(arg0);
    }

    @CanIgnoreReturnValue
    private IobCobOref1Thread injectIobCobOref1Thread(IobCobOref1Thread instance) {
      IobCobOref1Thread_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      IobCobOref1Thread_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      IobCobOref1Thread_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      IobCobOref1Thread_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      IobCobOref1Thread_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      IobCobOref1Thread_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      IobCobOref1Thread_MembersInjector.injectSensitivityAAPSPlugin(instance, DaggerAppComponent.this.sensitivityAAPSPluginProvider.get());
      IobCobOref1Thread_MembersInjector.injectSensitivityWeightedAveragePlugin(instance, DaggerAppComponent.this.sensitivityWeightedAveragePluginProvider.get());
      IobCobOref1Thread_MembersInjector.injectBuildHelper(instance, DaggerAppComponent.this.buildHelperProvider.get());
      IobCobOref1Thread_MembersInjector.injectProfiler(instance, DaggerAppComponent.this.profilerProvider.get());
      IobCobOref1Thread_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      IobCobOref1Thread_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class CryptoUtilSubcomponentFactory implements PreferencesModule_CryptoUtilInjector.CryptoUtilSubcomponent.Factory {
    @Override
    public PreferencesModule_CryptoUtilInjector.CryptoUtilSubcomponent create(CryptoUtil arg0) {
      Preconditions.checkNotNull(arg0);
      return new CryptoUtilSubcomponentImpl(arg0);
    }
  }

  private final class CryptoUtilSubcomponentImpl implements PreferencesModule_CryptoUtilInjector.CryptoUtilSubcomponent {
    private CryptoUtilSubcomponentImpl(CryptoUtil arg0) {

    }

    @Override
    public void inject(CryptoUtil arg0) {
    }
  }

  private final class EncryptedPrefsFormatSubcomponentFactory implements PreferencesModule_EncryptedPrefsFormatInjector.EncryptedPrefsFormatSubcomponent.Factory {
    @Override
    public PreferencesModule_EncryptedPrefsFormatInjector.EncryptedPrefsFormatSubcomponent create(
        EncryptedPrefsFormat arg0) {
      Preconditions.checkNotNull(arg0);
      return new EncryptedPrefsFormatSubcomponentImpl(arg0);
    }
  }

  private final class EncryptedPrefsFormatSubcomponentImpl implements PreferencesModule_EncryptedPrefsFormatInjector.EncryptedPrefsFormatSubcomponent {
    private EncryptedPrefsFormatSubcomponentImpl(EncryptedPrefsFormat arg0) {

    }

    @Override
    public void inject(EncryptedPrefsFormat arg0) {
    }
  }

  private final class ClassicPrefsFormatSubcomponentFactory implements PreferencesModule_ClassicPrefsFormatInjector.ClassicPrefsFormatSubcomponent.Factory {
    @Override
    public PreferencesModule_ClassicPrefsFormatInjector.ClassicPrefsFormatSubcomponent create(
        ClassicPrefsFormat arg0) {
      Preconditions.checkNotNull(arg0);
      return new ClassicPrefsFormatSubcomponentImpl(arg0);
    }
  }

  private final class ClassicPrefsFormatSubcomponentImpl implements PreferencesModule_ClassicPrefsFormatInjector.ClassicPrefsFormatSubcomponent {
    private ClassicPrefsFormatSubcomponentImpl(ClassicPrefsFormat arg0) {

    }

    @Override
    public void inject(ClassicPrefsFormat arg0) {
    }
  }

  private final class PrefFileListProviderSubcomponentFactory implements PreferencesModule_PrefImportListProviderInjector.PrefFileListProviderSubcomponent.Factory {
    @Override
    public PreferencesModule_PrefImportListProviderInjector.PrefFileListProviderSubcomponent create(
        PrefFileListProvider arg0) {
      Preconditions.checkNotNull(arg0);
      return new PrefFileListProviderSubcomponentImpl(arg0);
    }
  }

  private final class PrefFileListProviderSubcomponentImpl implements PreferencesModule_PrefImportListProviderInjector.PrefFileListProviderSubcomponent {
    private PrefFileListProviderSubcomponentImpl(PrefFileListProvider arg0) {

    }

    @Override
    public void inject(PrefFileListProvider arg0) {
    }
  }

  private final class NotificationWithActionSubcomponentFactory implements OverviewModule_NotificationWithActionInjector.NotificationWithActionSubcomponent.Factory {
    @Override
    public OverviewModule_NotificationWithActionInjector.NotificationWithActionSubcomponent create(
        NotificationWithAction arg0) {
      Preconditions.checkNotNull(arg0);
      return new NotificationWithActionSubcomponentImpl(arg0);
    }
  }

  private final class NotificationWithActionSubcomponentImpl implements OverviewModule_NotificationWithActionInjector.NotificationWithActionSubcomponent {
    private NotificationWithActionSubcomponentImpl(NotificationWithAction arg0) {

    }

    @Override
    public void inject(NotificationWithAction arg0) {
      injectNotificationWithAction(arg0);
    }

    @CanIgnoreReturnValue
    private NotificationWithAction injectNotificationWithAction(NotificationWithAction instance) {
      NotificationWithAction_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      NotificationWithAction_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      NotificationWithAction_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      NotificationWithAction_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      NotificationWithAction_MembersInjector.injectNsClientPlugin(instance, DaggerAppComponent.this.nSClientPluginProvider.get());
      return instance;
    }
  }

  private final class GraphDataSubcomponentFactory implements OverviewModule_GraphDataInjector.GraphDataSubcomponent.Factory {
    @Override
    public OverviewModule_GraphDataInjector.GraphDataSubcomponent create(GraphData arg0) {
      Preconditions.checkNotNull(arg0);
      return new GraphDataSubcomponentImpl(arg0);
    }
  }

  private final class GraphDataSubcomponentImpl implements OverviewModule_GraphDataInjector.GraphDataSubcomponent {
    private GraphDataSubcomponentImpl(GraphData arg0) {

    }

    @Override
    public void inject(GraphData arg0) {
      injectGraphData(arg0);
    }

    @CanIgnoreReturnValue
    private GraphData injectGraphData(GraphData instance) {
      GraphData_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      GraphData_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      GraphData_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      GraphData_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      return instance;
    }
  }

  private final class GlucoseStatusSubcomponentFactory implements DataClassesModule_GlucoseStatusInjector.GlucoseStatusSubcomponent.Factory {
    @Override
    public DataClassesModule_GlucoseStatusInjector.GlucoseStatusSubcomponent create(
        GlucoseStatus arg0) {
      Preconditions.checkNotNull(arg0);
      return new GlucoseStatusSubcomponentImpl(arg0);
    }
  }

  private final class GlucoseStatusSubcomponentImpl implements DataClassesModule_GlucoseStatusInjector.GlucoseStatusSubcomponent {
    private GlucoseStatusSubcomponentImpl(GlucoseStatus arg0) {

    }

    @Override
    public void inject(GlucoseStatus arg0) {
      injectGlucoseStatus(arg0);
    }

    @CanIgnoreReturnValue
    private GlucoseStatus injectGlucoseStatus(GlucoseStatus instance) {
      GlucoseStatus_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      GlucoseStatus_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class DatabaseHelperSubcomponentFactory implements DataClassesModule_DatabaseHelperInjector.DatabaseHelperSubcomponent.Factory {
    @Override
    public DataClassesModule_DatabaseHelperInjector.DatabaseHelperSubcomponent create(
        DatabaseHelper arg0) {
      Preconditions.checkNotNull(arg0);
      return new DatabaseHelperSubcomponentImpl(arg0);
    }
  }

  private final class DatabaseHelperSubcomponentImpl implements DataClassesModule_DatabaseHelperInjector.DatabaseHelperSubcomponent {
    private DatabaseHelperSubcomponentImpl(DatabaseHelper arg0) {

    }

    @Override
    public void inject(DatabaseHelper arg0) {
      injectDatabaseHelper(arg0);
    }

    @CanIgnoreReturnValue
    private DatabaseHelper injectDatabaseHelper(DatabaseHelper instance) {
      DatabaseHelper_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DatabaseHelper_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DatabaseHelper_MembersInjector.injectVirtualPumpPlugin(instance, DaggerAppComponent.this.virtualPumpPluginProvider.get());
      DatabaseHelper_MembersInjector.injectOpenHumansUploader(instance, DaggerAppComponent.this.openHumansUploaderProvider.get());
      return instance;
    }
  }

  private final class TreatmentServiceSubcomponentFactory implements DataClassesModule_TreatmentServiceInjector.TreatmentServiceSubcomponent.Factory {
    @Override
    public DataClassesModule_TreatmentServiceInjector.TreatmentServiceSubcomponent create(
        TreatmentService arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentServiceSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentServiceSubcomponentImpl implements DataClassesModule_TreatmentServiceInjector.TreatmentServiceSubcomponent {
    private TreatmentServiceSubcomponentImpl(TreatmentService arg0) {

    }

    @Override
    public void inject(TreatmentService arg0) {
      injectTreatmentService(arg0);
    }

    @CanIgnoreReturnValue
    private TreatmentService injectTreatmentService(TreatmentService instance) {
      TreatmentService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      TreatmentService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      TreatmentService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TreatmentService_MembersInjector.injectMedtronicPumpPlugin(instance, DaggerAppComponent.this.medtronicPumpPluginProvider.get());
      TreatmentService_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      TreatmentService_MembersInjector.injectOpenHumansUploader(instance, DaggerAppComponent.this.openHumansUploaderProvider.get());
      return instance;
    }
  }

  private final class FoodServiceSubcomponentFactory implements DataClassesModule_FoodServiceInjector.FoodServiceSubcomponent.Factory {
    @Override
    public DataClassesModule_FoodServiceInjector.FoodServiceSubcomponent create(FoodService arg0) {
      Preconditions.checkNotNull(arg0);
      return new FoodServiceSubcomponentImpl(arg0);
    }
  }

  private final class FoodServiceSubcomponentImpl implements DataClassesModule_FoodServiceInjector.FoodServiceSubcomponent {
    private FoodServiceSubcomponentImpl(FoodService arg0) {

    }

    @Override
    public void inject(FoodService arg0) {
      injectFoodService(arg0);
    }

    @CanIgnoreReturnValue
    private FoodService injectFoodService(FoodService instance) {
      FoodService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      FoodService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      FoodService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class BolusWizardSubcomponentFactory implements DataClassesModule_BolusWizardInjector.BolusWizardSubcomponent.Factory {
    @Override
    public DataClassesModule_BolusWizardInjector.BolusWizardSubcomponent create(BolusWizard arg0) {
      Preconditions.checkNotNull(arg0);
      return new BolusWizardSubcomponentImpl(arg0);
    }
  }

  private final class BolusWizardSubcomponentImpl implements DataClassesModule_BolusWizardInjector.BolusWizardSubcomponent {
    private BolusWizardSubcomponentImpl(BolusWizard arg0) {

    }

    @Override
    public void inject(BolusWizard arg0) {
      injectBolusWizard(arg0);
    }

    @CanIgnoreReturnValue
    private BolusWizard injectBolusWizard(BolusWizard instance) {
      BolusWizard_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      BolusWizard_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      BolusWizard_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      BolusWizard_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      BolusWizard_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      BolusWizard_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      BolusWizard_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      BolusWizard_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      BolusWizard_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      BolusWizard_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      BolusWizard_MembersInjector.injectAutomationPlugin(instance, DaggerAppComponent.this.automationPluginProvider.get());
      BolusWizard_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      BolusWizard_MembersInjector.injectConfig(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class QuickWizardEntrySubcomponentFactory implements DataClassesModule_QuickWizardEntryInjector.QuickWizardEntrySubcomponent.Factory {
    @Override
    public DataClassesModule_QuickWizardEntryInjector.QuickWizardEntrySubcomponent create(
        QuickWizardEntry arg0) {
      Preconditions.checkNotNull(arg0);
      return new QuickWizardEntrySubcomponentImpl(arg0);
    }
  }

  private final class QuickWizardEntrySubcomponentImpl implements DataClassesModule_QuickWizardEntryInjector.QuickWizardEntrySubcomponent {
    private QuickWizardEntrySubcomponentImpl(QuickWizardEntry arg0) {

    }

    @Override
    public void inject(QuickWizardEntry arg0) {
      injectQuickWizardEntry(arg0);
    }

    @CanIgnoreReturnValue
    private QuickWizardEntry injectQuickWizardEntry(QuickWizardEntry instance) {
      QuickWizardEntry_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      QuickWizardEntry_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      QuickWizardEntry_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      QuickWizardEntry_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      QuickWizardEntry_MembersInjector.injectLoopPlugin(instance, DaggerAppComponent.this.loopPluginProvider.get());
      QuickWizardEntry_MembersInjector.injectIobCobCalculatorPlugin(instance, DaggerAppComponent.this.iobCobCalculatorPluginProvider.get());
      return instance;
    }
  }

  private final class AuthRequestSubcomponentFactory implements SMSModule_AuthRequestInjector.AuthRequestSubcomponent.Factory {
    @Override
    public SMSModule_AuthRequestInjector.AuthRequestSubcomponent create(AuthRequest arg0) {
      Preconditions.checkNotNull(arg0);
      return new AuthRequestSubcomponentImpl(arg0);
    }
  }

  private final class AuthRequestSubcomponentImpl implements SMSModule_AuthRequestInjector.AuthRequestSubcomponent {
    private AuthRequestSubcomponentImpl(AuthRequest arg0) {

    }

    @Override
    public void inject(AuthRequest arg0) {
      injectAuthRequest(arg0);
    }

    @CanIgnoreReturnValue
    private AuthRequest injectAuthRequest(AuthRequest instance) {
      AuthRequest_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      AuthRequest_MembersInjector.injectSmsCommunicatorPlugin(instance, DaggerAppComponent.this.smsCommunicatorPluginProvider.get());
      AuthRequest_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      AuthRequest_MembersInjector.injectOtp(instance, DaggerAppComponent.this.oneTimePasswordProvider.get());
      return instance;
    }
  }

  private final class SkinListPreferenceSubcomponentFactory implements UIModule_SkinListPreferenceInjector.SkinListPreferenceSubcomponent.Factory {
    @Override
    public UIModule_SkinListPreferenceInjector.SkinListPreferenceSubcomponent create(
        SkinListPreference arg0) {
      Preconditions.checkNotNull(arg0);
      return new SkinListPreferenceSubcomponentImpl(arg0);
    }
  }

  private final class SkinListPreferenceSubcomponentImpl implements UIModule_SkinListPreferenceInjector.SkinListPreferenceSubcomponent {
    private SkinListPreferenceSubcomponentImpl(SkinListPreference arg0) {

    }

    @Override
    public void inject(SkinListPreference arg0) {
      injectSkinListPreference(arg0);
    }

    @CanIgnoreReturnValue
    private SkinListPreference injectSkinListPreference(SkinListPreference instance) {
      SkinListPreference_MembersInjector.injectSkinProvider(instance, DaggerAppComponent.this.skinProvider.get());
      return instance;
    }
  }

  private final class NetworkChangeReceiverSubcomponentFactory implements CoreReceiversModule_ContributesNetworkChangeReceiver.NetworkChangeReceiverSubcomponent.Factory {
    @Override
    public CoreReceiversModule_ContributesNetworkChangeReceiver.NetworkChangeReceiverSubcomponent create(
        NetworkChangeReceiver arg0) {
      Preconditions.checkNotNull(arg0);
      return new NetworkChangeReceiverSubcomponentImpl(arg0);
    }
  }

  private final class NetworkChangeReceiverSubcomponentImpl implements CoreReceiversModule_ContributesNetworkChangeReceiver.NetworkChangeReceiverSubcomponent {
    private NetworkChangeReceiverSubcomponentImpl(NetworkChangeReceiver arg0) {

    }

    @Override
    public void inject(NetworkChangeReceiver arg0) {
      injectNetworkChangeReceiver(arg0);
    }

    @CanIgnoreReturnValue
    private NetworkChangeReceiver injectNetworkChangeReceiver(NetworkChangeReceiver instance) {
      NetworkChangeReceiver_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      NetworkChangeReceiver_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      NetworkChangeReceiver_MembersInjector.injectReceiverStatusStore(instance, DaggerAppComponent.this.receiverStatusStoreProvider.get());
      return instance;
    }
  }

  private final class PrefImportListActivitySubcomponentFactory implements CoreFragmentsModule_ContributesPrefImportListActivity.PrefImportListActivitySubcomponent.Factory {
    @Override
    public CoreFragmentsModule_ContributesPrefImportListActivity.PrefImportListActivitySubcomponent create(
        PrefImportListActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PrefImportListActivitySubcomponentImpl(arg0);
    }
  }

  private final class PrefImportListActivitySubcomponentImpl implements CoreFragmentsModule_ContributesPrefImportListActivity.PrefImportListActivitySubcomponent {
    private PrefImportListActivitySubcomponentImpl(PrefImportListActivity arg0) {

    }

    @Override
    public void inject(PrefImportListActivity arg0) {
      injectPrefImportListActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PrefImportListActivity injectPrefImportListActivity(PrefImportListActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      PrefImportListActivity_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      PrefImportListActivity_MembersInjector.injectPrefFileListProvider(instance, DaggerAppComponent.this.prefFileListProvider.get());
      return instance;
    }
  }

  private final class TDDStatsActivitySubcomponentFactory implements CoreFragmentsModule_ContributesTDDStatsActivity.TDDStatsActivitySubcomponent.Factory {
    @Override
    public CoreFragmentsModule_ContributesTDDStatsActivity.TDDStatsActivitySubcomponent create(
        TDDStatsActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new TDDStatsActivitySubcomponentImpl(arg0);
    }
  }

  private final class TDDStatsActivitySubcomponentImpl implements CoreFragmentsModule_ContributesTDDStatsActivity.TDDStatsActivitySubcomponent {
    private TDDStatsActivitySubcomponentImpl(TDDStatsActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(TDDStatsActivity arg0) {
      injectTDDStatsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private TDDStatsActivity injectTDDStatsActivity(TDDStatsActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      TDDStatsActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      TDDStatsActivity_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      TDDStatsActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      TDDStatsActivity_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      TDDStatsActivity_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      TDDStatsActivity_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      TDDStatsActivity_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      TDDStatsActivity_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      TDDStatsActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class BolusProgressHelperActivitySubcomponentFactory implements CoreFragmentsModule_ContributeBolusProgressHelperActivity.BolusProgressHelperActivitySubcomponent.Factory {
    @Override
    public CoreFragmentsModule_ContributeBolusProgressHelperActivity.BolusProgressHelperActivitySubcomponent create(
        BolusProgressHelperActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new BolusProgressHelperActivitySubcomponentImpl(arg0);
    }
  }

  private final class BolusProgressHelperActivitySubcomponentImpl implements CoreFragmentsModule_ContributeBolusProgressHelperActivity.BolusProgressHelperActivitySubcomponent {
    private BolusProgressHelperActivitySubcomponentImpl(BolusProgressHelperActivity arg0) {

    }

    @Override
    public void inject(BolusProgressHelperActivity arg0) {
      injectBolusProgressHelperActivity(arg0);
    }

    @CanIgnoreReturnValue
    private BolusProgressHelperActivity injectBolusProgressHelperActivity(
        BolusProgressHelperActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      return instance;
    }
  }

  private final class ErrorHelperActivitySubcomponentFactory implements CoreFragmentsModule_ContributeErrorHelperActivity.ErrorHelperActivitySubcomponent.Factory {
    @Override
    public CoreFragmentsModule_ContributeErrorHelperActivity.ErrorHelperActivitySubcomponent create(
        ErrorHelperActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ErrorHelperActivitySubcomponentImpl(arg0);
    }
  }

  private final class ErrorHelperActivitySubcomponentImpl implements CoreFragmentsModule_ContributeErrorHelperActivity.ErrorHelperActivitySubcomponent {
    private ErrorHelperActivitySubcomponentImpl(ErrorHelperActivity arg0) {

    }

    @Override
    public void inject(ErrorHelperActivity arg0) {
      injectErrorHelperActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ErrorHelperActivity injectErrorHelperActivity(ErrorHelperActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      ErrorHelperActivity_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      ErrorHelperActivity_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      return instance;
    }
  }

  private final class BolusProgressDialogSubcomponentFactory implements CoreFragmentsModule_ContributesBolusProgressDialog.BolusProgressDialogSubcomponent.Factory {
    @Override
    public CoreFragmentsModule_ContributesBolusProgressDialog.BolusProgressDialogSubcomponent create(
        BolusProgressDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new BolusProgressDialogSubcomponentImpl(arg0);
    }
  }

  private final class BolusProgressDialogSubcomponentImpl implements CoreFragmentsModule_ContributesBolusProgressDialog.BolusProgressDialogSubcomponent {
    private BolusProgressDialogSubcomponentImpl(BolusProgressDialog arg0) {

    }

    @Override
    public void inject(BolusProgressDialog arg0) {
      injectBolusProgressDialog(arg0);
    }

    @CanIgnoreReturnValue
    private BolusProgressDialog injectBolusProgressDialog(BolusProgressDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      BolusProgressDialog_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      BolusProgressDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      BolusProgressDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      BolusProgressDialog_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      BolusProgressDialog_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class ErrorDialogSubcomponentFactory implements CoreFragmentsModule_ContributesErrorDialog.ErrorDialogSubcomponent.Factory {
    @Override
    public CoreFragmentsModule_ContributesErrorDialog.ErrorDialogSubcomponent create(
        ErrorDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new ErrorDialogSubcomponentImpl(arg0);
    }
  }

  private final class ErrorDialogSubcomponentImpl implements CoreFragmentsModule_ContributesErrorDialog.ErrorDialogSubcomponent {
    private ErrorDialogSubcomponentImpl(ErrorDialog arg0) {

    }

    @Override
    public void inject(ErrorDialog arg0) {
      injectErrorDialog(arg0);
    }

    @CanIgnoreReturnValue
    private ErrorDialog injectErrorDialog(ErrorDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      ErrorDialog_MembersInjector.injectAlarmSoundServiceHelper(instance, DaggerAppComponent.this.alarmSoundServiceHelperProvider.get());
      ErrorDialog_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class NtpProgressDialogSubcomponentFactory implements CoreFragmentsModule_ContributesNtpProgressDialog.NtpProgressDialogSubcomponent.Factory {
    @Override
    public CoreFragmentsModule_ContributesNtpProgressDialog.NtpProgressDialogSubcomponent create(
        NtpProgressDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new NtpProgressDialogSubcomponentImpl(arg0);
    }
  }

  private final class NtpProgressDialogSubcomponentImpl implements CoreFragmentsModule_ContributesNtpProgressDialog.NtpProgressDialogSubcomponent {
    private NtpProgressDialogSubcomponentImpl(NtpProgressDialog arg0) {

    }

    @Override
    public void inject(NtpProgressDialog arg0) {
      injectNtpProgressDialog(arg0);
    }

    @CanIgnoreReturnValue
    private NtpProgressDialog injectNtpProgressDialog(NtpProgressDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      NtpProgressDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      NtpProgressDialog_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      NtpProgressDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      NtpProgressDialog_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class ProfileViewerDialogSubcomponentFactory implements CoreFragmentsModule_ContributesProfileViewerDialog.ProfileViewerDialogSubcomponent.Factory {
    @Override
    public CoreFragmentsModule_ContributesProfileViewerDialog.ProfileViewerDialogSubcomponent create(
        ProfileViewerDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new ProfileViewerDialogSubcomponentImpl(arg0);
    }
  }

  private final class ProfileViewerDialogSubcomponentImpl implements CoreFragmentsModule_ContributesProfileViewerDialog.ProfileViewerDialogSubcomponent {
    private ProfileViewerDialogSubcomponentImpl(ProfileViewerDialog arg0) {

    }

    @Override
    public void inject(ProfileViewerDialog arg0) {
      injectProfileViewerDialog(arg0);
    }

    @CanIgnoreReturnValue
    private ProfileViewerDialog injectProfileViewerDialog(ProfileViewerDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      ProfileViewerDialog_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      ProfileViewerDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ProfileViewerDialog_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      ProfileViewerDialog_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      ProfileViewerDialog_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      ProfileViewerDialog_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class PumpEnactResultSubcomponentFactory implements CoreDataClassesModule_PumpEnactResultInjector.PumpEnactResultSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_PumpEnactResultInjector.PumpEnactResultSubcomponent create(
        PumpEnactResult arg0) {
      Preconditions.checkNotNull(arg0);
      return new PumpEnactResultSubcomponentImpl(arg0);
    }
  }

  private final class PumpEnactResultSubcomponentImpl implements CoreDataClassesModule_PumpEnactResultInjector.PumpEnactResultSubcomponent {
    private PumpEnactResultSubcomponentImpl(PumpEnactResult arg0) {

    }

    @Override
    public void inject(PumpEnactResult arg0) {
      injectPumpEnactResult(arg0);
    }

    @CanIgnoreReturnValue
    private PumpEnactResult injectPumpEnactResult(PumpEnactResult instance) {
      PumpEnactResult_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      PumpEnactResult_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class APSResultSubcomponentFactory implements CoreDataClassesModule_ApsResultInjector.APSResultSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_ApsResultInjector.APSResultSubcomponent create(APSResult arg0) {
      Preconditions.checkNotNull(arg0);
      return new APSResultSubcomponentImpl(arg0);
    }
  }

  private final class APSResultSubcomponentImpl implements CoreDataClassesModule_ApsResultInjector.APSResultSubcomponent {
    private APSResultSubcomponentImpl(APSResult arg0) {

    }

    @Override
    public void inject(APSResult arg0) {
      injectAPSResult(arg0);
    }

    @CanIgnoreReturnValue
    private APSResult injectAPSResult(APSResult instance) {
      APSResult_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      APSResult_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      APSResult_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      APSResult_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      APSResult_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      APSResult_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      APSResult_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      APSResult_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }

  private final class AutosensDataSubcomponentFactory implements CoreDataClassesModule_AutosensDataInjector.AutosensDataSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_AutosensDataInjector.AutosensDataSubcomponent create(
        AutosensData arg0) {
      Preconditions.checkNotNull(arg0);
      return new AutosensDataSubcomponentImpl(arg0);
    }
  }

  private final class AutosensDataSubcomponentImpl implements CoreDataClassesModule_AutosensDataInjector.AutosensDataSubcomponent {
    private AutosensDataSubcomponentImpl(AutosensData arg0) {

    }

    @Override
    public void inject(AutosensData arg0) {
      injectAutosensData(arg0);
    }

    @CanIgnoreReturnValue
    private AutosensData injectAutosensData(AutosensData instance) {
      AutosensData_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      AutosensData_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      AutosensData_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      AutosensData_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      AutosensData_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class ProfileSubcomponentFactory implements CoreDataClassesModule_ProfileInjector.ProfileSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_ProfileInjector.ProfileSubcomponent create(Profile arg0) {
      Preconditions.checkNotNull(arg0);
      return new ProfileSubcomponentImpl(arg0);
    }
  }

  private final class ProfileSubcomponentImpl implements CoreDataClassesModule_ProfileInjector.ProfileSubcomponent {
    private ProfileSubcomponentImpl(Profile arg0) {

    }

    @Override
    public void inject(Profile arg0) {
      injectProfile(arg0);
    }

    @CanIgnoreReturnValue
    private Profile injectProfile(Profile instance) {
      Profile_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      Profile_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Profile_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Profile_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      Profile_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      Profile_MembersInjector.injectConfigInterface(instance, DaggerAppComponent.this.configProvider.get());
      return instance;
    }
  }

  private final class ProfileStoreSubcomponentFactory implements CoreDataClassesModule_ProfileStoreInjector.ProfileStoreSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_ProfileStoreInjector.ProfileStoreSubcomponent create(
        ProfileStore arg0) {
      Preconditions.checkNotNull(arg0);
      return new ProfileStoreSubcomponentImpl(arg0);
    }
  }

  private final class ProfileStoreSubcomponentImpl implements CoreDataClassesModule_ProfileStoreInjector.ProfileStoreSubcomponent {
    private ProfileStoreSubcomponentImpl(ProfileStore arg0) {

    }

    @Override
    public void inject(ProfileStore arg0) {
      injectProfileStore(arg0);
    }

    @CanIgnoreReturnValue
    private ProfileStore injectProfileStore(ProfileStore instance) {
      ProfileStore_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      return instance;
    }
  }

  private final class BgReadingSubcomponentFactory implements CoreDataClassesModule_BgReadingInjector.BgReadingSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_BgReadingInjector.BgReadingSubcomponent create(BgReading arg0) {
      Preconditions.checkNotNull(arg0);
      return new BgReadingSubcomponentImpl(arg0);
    }
  }

  private final class BgReadingSubcomponentImpl implements CoreDataClassesModule_BgReadingInjector.BgReadingSubcomponent {
    private BgReadingSubcomponentImpl(BgReading arg0) {

    }

    @Override
    public void inject(BgReading arg0) {
      injectBgReading(arg0);
    }

    @CanIgnoreReturnValue
    private BgReading injectBgReading(BgReading instance) {
      BgReading_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      BgReading_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      BgReading_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      BgReading_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      BgReading_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class TreatmentSubcomponentFactory implements CoreDataClassesModule_TreatmentInjector.TreatmentSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_TreatmentInjector.TreatmentSubcomponent create(Treatment arg0) {
      Preconditions.checkNotNull(arg0);
      return new TreatmentSubcomponentImpl(arg0);
    }
  }

  private final class TreatmentSubcomponentImpl implements CoreDataClassesModule_TreatmentInjector.TreatmentSubcomponent {
    private TreatmentSubcomponentImpl(Treatment arg0) {

    }

    @Override
    public void inject(Treatment arg0) {
      injectTreatment(arg0);
    }

    @CanIgnoreReturnValue
    private Treatment injectTreatment(Treatment instance) {
      Treatment_MembersInjector.injectDefaultValueHelper(instance, DaggerAppComponent.this.defaultValueHelperProvider.get());
      Treatment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      Treatment_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      Treatment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      Treatment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class ProfileSwitchSubcomponentFactory implements CoreDataClassesModule_ProfileSwitchInjector.ProfileSwitchSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_ProfileSwitchInjector.ProfileSwitchSubcomponent create(
        ProfileSwitch arg0) {
      Preconditions.checkNotNull(arg0);
      return new ProfileSwitchSubcomponentImpl(arg0);
    }
  }

  private final class ProfileSwitchSubcomponentImpl implements CoreDataClassesModule_ProfileSwitchInjector.ProfileSwitchSubcomponent {
    private ProfileSwitchSubcomponentImpl(ProfileSwitch arg0) {

    }

    @Override
    public void inject(ProfileSwitch arg0) {
      injectProfileSwitch(arg0);
    }

    @CanIgnoreReturnValue
    private ProfileSwitch injectProfileSwitch(ProfileSwitch instance) {
      ProfileSwitch_MembersInjector.injectTreatmentsPlugin(instance, DaggerAppComponent.this.treatmentsPluginProvider.get());
      ProfileSwitch_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      ProfileSwitch_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      ProfileSwitch_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      ProfileSwitch_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class TemporaryBasalSubcomponentFactory implements CoreDataClassesModule_TemporaryBasalInjector.TemporaryBasalSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_TemporaryBasalInjector.TemporaryBasalSubcomponent create(
        TemporaryBasal arg0) {
      Preconditions.checkNotNull(arg0);
      return new TemporaryBasalSubcomponentImpl(arg0);
    }
  }

  private final class TemporaryBasalSubcomponentImpl implements CoreDataClassesModule_TemporaryBasalInjector.TemporaryBasalSubcomponent {
    private TemporaryBasalSubcomponentImpl(TemporaryBasal arg0) {

    }

    @Override
    public void inject(TemporaryBasal arg0) {
      injectTemporaryBasal(arg0);
    }

    @CanIgnoreReturnValue
    private TemporaryBasal injectTemporaryBasal(TemporaryBasal instance) {
      TemporaryBasal_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      TemporaryBasal_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      TemporaryBasal_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      TemporaryBasal_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      TemporaryBasal_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class CareportalEventSubcomponentFactory implements CoreDataClassesModule_CareportalEventInjector.CareportalEventSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_CareportalEventInjector.CareportalEventSubcomponent create(
        CareportalEvent arg0) {
      Preconditions.checkNotNull(arg0);
      return new CareportalEventSubcomponentImpl(arg0);
    }
  }

  private final class CareportalEventSubcomponentImpl implements CoreDataClassesModule_CareportalEventInjector.CareportalEventSubcomponent {
    private CareportalEventSubcomponentImpl(CareportalEvent arg0) {

    }

    @Override
    public void inject(CareportalEvent arg0) {
      injectCareportalEvent(arg0);
    }

    @CanIgnoreReturnValue
    private CareportalEvent injectCareportalEvent(CareportalEvent instance) {
      CareportalEvent_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      CareportalEvent_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      CareportalEvent_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      CareportalEvent_MembersInjector.injectTranslator(instance, DaggerAppComponent.this.translatorProvider.get());
      CareportalEvent_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class ExtendedBolusSubcomponentFactory implements CoreDataClassesModule_ExtendedBolusInjector.ExtendedBolusSubcomponent.Factory {
    @Override
    public CoreDataClassesModule_ExtendedBolusInjector.ExtendedBolusSubcomponent create(
        ExtendedBolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new ExtendedBolusSubcomponentImpl(arg0);
    }
  }

  private final class ExtendedBolusSubcomponentImpl implements CoreDataClassesModule_ExtendedBolusInjector.ExtendedBolusSubcomponent {
    private ExtendedBolusSubcomponentImpl(ExtendedBolus arg0) {

    }

    @Override
    public void inject(ExtendedBolus arg0) {
      injectExtendedBolus(arg0);
    }

    @CanIgnoreReturnValue
    private ExtendedBolus injectExtendedBolus(ExtendedBolus instance) {
      ExtendedBolus_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      ExtendedBolus_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaFragmentSubcomponentFactory implements DanaModule_ContributesDanaRFragment.DanaFragmentSubcomponent.Factory {
    @Override
    public DanaModule_ContributesDanaRFragment.DanaFragmentSubcomponent create(DanaFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaFragmentSubcomponentImpl(arg0);
    }
  }

  private final class DanaFragmentSubcomponentImpl implements DanaModule_ContributesDanaRFragment.DanaFragmentSubcomponent {
    private DanaFragmentSubcomponentImpl(DanaFragment arg0) {

    }

    @Override
    public void inject(DanaFragment arg0) {
      injectDanaFragment(arg0);
    }

    @CanIgnoreReturnValue
    private DanaFragment injectDanaFragment(DanaFragment instance) {
      DaggerFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DanaFragment_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaFragment_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaFragment_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      DanaFragment_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      DanaFragment_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaFragment_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      DanaFragment_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaFragment_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DanaFragment_MembersInjector.injectWarnColors(instance, DaggerAppComponent.this.warnColorsProvider.get());
      DanaFragment_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaHistoryActivitySubcomponentFactory implements DanaModule_ContributeDanaRHistoryActivity.DanaHistoryActivitySubcomponent.Factory {
    @Override
    public DanaModule_ContributeDanaRHistoryActivity.DanaHistoryActivitySubcomponent create(
        DanaHistoryActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaHistoryActivitySubcomponentImpl(arg0);
    }
  }

  private final class DanaHistoryActivitySubcomponentImpl implements DanaModule_ContributeDanaRHistoryActivity.DanaHistoryActivitySubcomponent {
    private DanaHistoryActivitySubcomponentImpl(DanaHistoryActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(DanaHistoryActivity arg0) {
      injectDanaHistoryActivity(arg0);
    }

    @CanIgnoreReturnValue
    private DanaHistoryActivity injectDanaHistoryActivity(DanaHistoryActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      DanaHistoryActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaHistoryActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaHistoryActivity_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      DanaHistoryActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      DanaHistoryActivity_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaHistoryActivity_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      DanaHistoryActivity_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      DanaHistoryActivity_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaUserOptionsActivitySubcomponentFactory implements DanaModule_ContributeDanaRUserOptionsActivity.DanaUserOptionsActivitySubcomponent.Factory {
    @Override
    public DanaModule_ContributeDanaRUserOptionsActivity.DanaUserOptionsActivitySubcomponent create(
        DanaUserOptionsActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaUserOptionsActivitySubcomponentImpl(arg0);
    }
  }

  private final class DanaUserOptionsActivitySubcomponentImpl implements DanaModule_ContributeDanaRUserOptionsActivity.DanaUserOptionsActivitySubcomponent {
    private DanaUserOptionsActivitySubcomponentImpl(DanaUserOptionsActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(DanaUserOptionsActivity arg0) {
      injectDanaUserOptionsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private DanaUserOptionsActivity injectDanaUserOptionsActivity(
        DanaUserOptionsActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      DanaUserOptionsActivity_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaUserOptionsActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaUserOptionsActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      DanaUserOptionsActivity_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      DanaUserOptionsActivity_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      DanaUserOptionsActivity_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaUserOptionsActivity_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      return instance;
    }
  }

  private final class MessageBaseSubcomponentFactory implements DanaRCommModule_ContributesMessageBase.MessageBaseSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMessageBase.MessageBaseSubcomponent create(MessageBase arg0) {
      Preconditions.checkNotNull(arg0);
      return new MessageBaseSubcomponentImpl(arg0);
    }
  }

  private final class MessageBaseSubcomponentImpl implements DanaRCommModule_ContributesMessageBase.MessageBaseSubcomponent {
    private MessageBaseSubcomponentImpl(MessageBase arg0) {

    }

    @Override
    public void inject(MessageBase arg0) {
      injectMessageBase(arg0);
    }

    @CanIgnoreReturnValue
    private MessageBase injectMessageBase(MessageBase instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetTimeSubcomponentFactory implements DanaRCommModule_ContributesMsgSetTime.MsgSetTimeSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetTime.MsgSetTimeSubcomponent create(MsgSetTime arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetTimeSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetTimeSubcomponentImpl implements DanaRCommModule_ContributesMsgSetTime.MsgSetTimeSubcomponent {
    private MsgSetTimeSubcomponentImpl(MsgSetTime arg0) {

    }

    @Override
    public void inject(MsgSetTime arg0) {
      injectMsgSetTime(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetTime injectMsgSetTime(MsgSetTime instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgBolusProgressSubcomponentFactory implements DanaRCommModule_ContributesMsgBolusProgress.MsgBolusProgressSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgBolusProgress.MsgBolusProgressSubcomponent create(
        MsgBolusProgress arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgBolusProgressSubcomponentImpl(arg0);
    }
  }

  private final class MsgBolusProgressSubcomponentImpl implements DanaRCommModule_ContributesMsgBolusProgress.MsgBolusProgressSubcomponent {
    private MsgBolusProgressSubcomponentImpl(MsgBolusProgress arg0) {

    }

    @Override
    public void inject(MsgBolusProgress arg0) {
      injectMsgBolusProgress(arg0);
    }

    @CanIgnoreReturnValue
    private MsgBolusProgress injectMsgBolusProgress(MsgBolusProgress instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgBolusStartSubcomponentFactory implements DanaRCommModule_ContributesMsgBolusStart.MsgBolusStartSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgBolusStart.MsgBolusStartSubcomponent create(
        MsgBolusStart arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgBolusStartSubcomponentImpl(arg0);
    }
  }

  private final class MsgBolusStartSubcomponentImpl implements DanaRCommModule_ContributesMsgBolusStart.MsgBolusStartSubcomponent {
    private MsgBolusStartSubcomponentImpl(MsgBolusStart arg0) {

    }

    @Override
    public void inject(MsgBolusStart arg0) {
      injectMsgBolusStart(arg0);
    }

    @CanIgnoreReturnValue
    private MsgBolusStart injectMsgBolusStart(MsgBolusStart instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgBolusStartWithSpeedSubcomponentFactory implements DanaRCommModule_ContributesMsgBolusStartWithSpeed.MsgBolusStartWithSpeedSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgBolusStartWithSpeed.MsgBolusStartWithSpeedSubcomponent create(
        MsgBolusStartWithSpeed arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgBolusStartWithSpeedSubcomponentImpl(arg0);
    }
  }

  private final class MsgBolusStartWithSpeedSubcomponentImpl implements DanaRCommModule_ContributesMsgBolusStartWithSpeed.MsgBolusStartWithSpeedSubcomponent {
    private MsgBolusStartWithSpeedSubcomponentImpl(MsgBolusStartWithSpeed arg0) {

    }

    @Override
    public void inject(MsgBolusStartWithSpeed arg0) {
      injectMsgBolusStartWithSpeed(arg0);
    }

    @CanIgnoreReturnValue
    private MsgBolusStartWithSpeed injectMsgBolusStartWithSpeed(MsgBolusStartWithSpeed instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgBolusStopSubcomponentFactory implements DanaRCommModule_ContributesMsgBolusStop.MsgBolusStopSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgBolusStop.MsgBolusStopSubcomponent create(
        MsgBolusStop arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgBolusStopSubcomponentImpl(arg0);
    }
  }

  private final class MsgBolusStopSubcomponentImpl implements DanaRCommModule_ContributesMsgBolusStop.MsgBolusStopSubcomponent {
    private MsgBolusStopSubcomponentImpl(MsgBolusStop arg0) {

    }

    @Override
    public void inject(MsgBolusStop arg0) {
      injectMsgBolusStop(arg0);
    }

    @CanIgnoreReturnValue
    private MsgBolusStop injectMsgBolusStop(MsgBolusStop instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgCheckValueSubcomponentFactory implements DanaRCommModule_ContributesMsgCheckValue.MsgCheckValueSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgCheckValue.MsgCheckValueSubcomponent create(
        MsgCheckValue arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgCheckValueSubcomponentImpl(arg0);
    }
  }

  private final class MsgCheckValueSubcomponentImpl implements DanaRCommModule_ContributesMsgCheckValue.MsgCheckValueSubcomponent {
    private MsgCheckValueSubcomponentImpl(MsgCheckValue arg0) {

    }

    @Override
    public void inject(MsgCheckValue arg0) {
      injectMsgCheckValue(arg0);
    }

    @CanIgnoreReturnValue
    private MsgCheckValue injectMsgCheckValue(MsgCheckValue instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgErrorSubcomponentFactory implements DanaRCommModule_ContributesMsgError.MsgErrorSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgError.MsgErrorSubcomponent create(MsgError arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgErrorSubcomponentImpl(arg0);
    }
  }

  private final class MsgErrorSubcomponentImpl implements DanaRCommModule_ContributesMsgError.MsgErrorSubcomponent {
    private MsgErrorSubcomponentImpl(MsgError arg0) {

    }

    @Override
    public void inject(MsgError arg0) {
      injectMsgError(arg0);
    }

    @CanIgnoreReturnValue
    private MsgError injectMsgError(MsgError instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryAllSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryAll.MsgHistoryAllSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryAll.MsgHistoryAllSubcomponent create(
        MsgHistoryAll arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryAllSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryAllSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryAll.MsgHistoryAllSubcomponent {
    private MsgHistoryAllSubcomponentImpl(MsgHistoryAll arg0) {

    }

    @Override
    public void inject(MsgHistoryAll arg0) {
      injectMsgHistoryAll(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryAll injectMsgHistoryAll(MsgHistoryAll instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryAllDoneSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryAllDone.MsgHistoryAllDoneSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryAllDone.MsgHistoryAllDoneSubcomponent create(
        MsgHistoryAllDone arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryAllDoneSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryAllDoneSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryAllDone.MsgHistoryAllDoneSubcomponent {
    private MsgHistoryAllDoneSubcomponentImpl(MsgHistoryAllDone arg0) {

    }

    @Override
    public void inject(MsgHistoryAllDone arg0) {
      injectMsgHistoryAllDone(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryAllDone injectMsgHistoryAllDone(MsgHistoryAllDone instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryDoneSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryDone.MsgHistoryDoneSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryDone.MsgHistoryDoneSubcomponent create(
        MsgHistoryDone arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryDoneSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryDoneSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryDone.MsgHistoryDoneSubcomponent {
    private MsgHistoryDoneSubcomponentImpl(MsgHistoryDone arg0) {

    }

    @Override
    public void inject(MsgHistoryDone arg0) {
      injectMsgHistoryDone(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryDone injectMsgHistoryDone(MsgHistoryDone instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryNewDoneSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryNewDone.MsgHistoryNewDoneSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryNewDone.MsgHistoryNewDoneSubcomponent create(
        MsgHistoryNewDone arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryNewDoneSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryNewDoneSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryNewDone.MsgHistoryNewDoneSubcomponent {
    private MsgHistoryNewDoneSubcomponentImpl(MsgHistoryNewDone arg0) {

    }

    @Override
    public void inject(MsgHistoryNewDone arg0) {
      injectMsgHistoryNewDone(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryNewDone injectMsgHistoryNewDone(MsgHistoryNewDone instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgInitConnStatusBasicSubcomponentFactory implements DanaRCommModule_ContributesMsgInitConnStatusBasic.MsgInitConnStatusBasicSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgInitConnStatusBasic.MsgInitConnStatusBasicSubcomponent create(
        MsgInitConnStatusBasic arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgInitConnStatusBasicSubcomponentImpl(arg0);
    }
  }

  private final class MsgInitConnStatusBasicSubcomponentImpl implements DanaRCommModule_ContributesMsgInitConnStatusBasic.MsgInitConnStatusBasicSubcomponent {
    private MsgInitConnStatusBasicSubcomponentImpl(MsgInitConnStatusBasic arg0) {

    }

    @Override
    public void inject(MsgInitConnStatusBasic arg0) {
      injectMsgInitConnStatusBasic(arg0);
    }

    @CanIgnoreReturnValue
    private MsgInitConnStatusBasic injectMsgInitConnStatusBasic(MsgInitConnStatusBasic instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgInitConnStatusBolusSubcomponentFactory implements DanaRCommModule_ContributesMsgInitConnStatusBolus.MsgInitConnStatusBolusSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgInitConnStatusBolus.MsgInitConnStatusBolusSubcomponent create(
        MsgInitConnStatusBolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgInitConnStatusBolusSubcomponentImpl(arg0);
    }
  }

  private final class MsgInitConnStatusBolusSubcomponentImpl implements DanaRCommModule_ContributesMsgInitConnStatusBolus.MsgInitConnStatusBolusSubcomponent {
    private MsgInitConnStatusBolusSubcomponentImpl(MsgInitConnStatusBolus arg0) {

    }

    @Override
    public void inject(MsgInitConnStatusBolus arg0) {
      injectMsgInitConnStatusBolus(arg0);
    }

    @CanIgnoreReturnValue
    private MsgInitConnStatusBolus injectMsgInitConnStatusBolus(MsgInitConnStatusBolus instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgInitConnStatusOptionSubcomponentFactory implements DanaRCommModule_ContributesMsgInitConnStatusOption.MsgInitConnStatusOptionSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgInitConnStatusOption.MsgInitConnStatusOptionSubcomponent create(
        MsgInitConnStatusOption arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgInitConnStatusOptionSubcomponentImpl(arg0);
    }
  }

  private final class MsgInitConnStatusOptionSubcomponentImpl implements DanaRCommModule_ContributesMsgInitConnStatusOption.MsgInitConnStatusOptionSubcomponent {
    private MsgInitConnStatusOptionSubcomponentImpl(MsgInitConnStatusOption arg0) {

    }

    @Override
    public void inject(MsgInitConnStatusOption arg0) {
      injectMsgInitConnStatusOption(arg0);
    }

    @CanIgnoreReturnValue
    private MsgInitConnStatusOption injectMsgInitConnStatusOption(
        MsgInitConnStatusOption instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgInitConnStatusTimeSubcomponentFactory implements DanaRCommModule_ContributesMsgInitConnStatusTime.MsgInitConnStatusTimeSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgInitConnStatusTime.MsgInitConnStatusTimeSubcomponent create(
        MsgInitConnStatusTime arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgInitConnStatusTimeSubcomponentImpl(arg0);
    }
  }

  private final class MsgInitConnStatusTimeSubcomponentImpl implements DanaRCommModule_ContributesMsgInitConnStatusTime.MsgInitConnStatusTimeSubcomponent {
    private MsgInitConnStatusTimeSubcomponentImpl(MsgInitConnStatusTime arg0) {

    }

    @Override
    public void inject(MsgInitConnStatusTime arg0) {
      injectMsgInitConnStatusTime(arg0);
    }

    @CanIgnoreReturnValue
    private MsgInitConnStatusTime injectMsgInitConnStatusTime(MsgInitConnStatusTime instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgPCCommStartSubcomponentFactory implements DanaRCommModule_ContributesMsgPCCommStart.MsgPCCommStartSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgPCCommStart.MsgPCCommStartSubcomponent create(
        MsgPCCommStart arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgPCCommStartSubcomponentImpl(arg0);
    }
  }

  private final class MsgPCCommStartSubcomponentImpl implements DanaRCommModule_ContributesMsgPCCommStart.MsgPCCommStartSubcomponent {
    private MsgPCCommStartSubcomponentImpl(MsgPCCommStart arg0) {

    }

    @Override
    public void inject(MsgPCCommStart arg0) {
      injectMsgPCCommStart(arg0);
    }

    @CanIgnoreReturnValue
    private MsgPCCommStart injectMsgPCCommStart(MsgPCCommStart instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgPCCommStopSubcomponentFactory implements DanaRCommModule_ContributesMsgPCCommStop.MsgPCCommStopSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgPCCommStop.MsgPCCommStopSubcomponent create(
        MsgPCCommStop arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgPCCommStopSubcomponentImpl(arg0);
    }
  }

  private final class MsgPCCommStopSubcomponentImpl implements DanaRCommModule_ContributesMsgPCCommStop.MsgPCCommStopSubcomponent {
    private MsgPCCommStopSubcomponentImpl(MsgPCCommStop arg0) {

    }

    @Override
    public void inject(MsgPCCommStop arg0) {
      injectMsgPCCommStop(arg0);
    }

    @CanIgnoreReturnValue
    private MsgPCCommStop injectMsgPCCommStop(MsgPCCommStop instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetActivateBasalProfileSubcomponentFactory implements DanaRCommModule_ContributesMsgSetActivateBasalProfile.MsgSetActivateBasalProfileSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetActivateBasalProfile.MsgSetActivateBasalProfileSubcomponent create(
        MsgSetActivateBasalProfile arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetActivateBasalProfileSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetActivateBasalProfileSubcomponentImpl implements DanaRCommModule_ContributesMsgSetActivateBasalProfile.MsgSetActivateBasalProfileSubcomponent {
    private MsgSetActivateBasalProfileSubcomponentImpl(MsgSetActivateBasalProfile arg0) {

    }

    @Override
    public void inject(MsgSetActivateBasalProfile arg0) {
      injectMsgSetActivateBasalProfile(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetActivateBasalProfile injectMsgSetActivateBasalProfile(
        MsgSetActivateBasalProfile instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetBasalProfileSubcomponentFactory implements DanaRCommModule_ContributesMsgSetBasalProfile.MsgSetBasalProfileSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetBasalProfile.MsgSetBasalProfileSubcomponent create(
        MsgSetBasalProfile arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetBasalProfileSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetBasalProfileSubcomponentImpl implements DanaRCommModule_ContributesMsgSetBasalProfile.MsgSetBasalProfileSubcomponent {
    private MsgSetBasalProfileSubcomponentImpl(MsgSetBasalProfile arg0) {

    }

    @Override
    public void inject(MsgSetBasalProfile arg0) {
      injectMsgSetBasalProfile(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetBasalProfile injectMsgSetBasalProfile(MsgSetBasalProfile instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetCarbsEntrySubcomponentFactory implements DanaRCommModule_ContributesMsgSetCarbsEntry.MsgSetCarbsEntrySubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetCarbsEntry.MsgSetCarbsEntrySubcomponent create(
        MsgSetCarbsEntry arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetCarbsEntrySubcomponentImpl(arg0);
    }
  }

  private final class MsgSetCarbsEntrySubcomponentImpl implements DanaRCommModule_ContributesMsgSetCarbsEntry.MsgSetCarbsEntrySubcomponent {
    private MsgSetCarbsEntrySubcomponentImpl(MsgSetCarbsEntry arg0) {

    }

    @Override
    public void inject(MsgSetCarbsEntry arg0) {
      injectMsgSetCarbsEntry(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetCarbsEntry injectMsgSetCarbsEntry(MsgSetCarbsEntry instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetExtendedBolusStartSubcomponentFactory implements DanaRCommModule_ContributesMsgSetExtendedBolusStart.MsgSetExtendedBolusStartSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetExtendedBolusStart.MsgSetExtendedBolusStartSubcomponent create(
        MsgSetExtendedBolusStart arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetExtendedBolusStartSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetExtendedBolusStartSubcomponentImpl implements DanaRCommModule_ContributesMsgSetExtendedBolusStart.MsgSetExtendedBolusStartSubcomponent {
    private MsgSetExtendedBolusStartSubcomponentImpl(MsgSetExtendedBolusStart arg0) {

    }

    @Override
    public void inject(MsgSetExtendedBolusStart arg0) {
      injectMsgSetExtendedBolusStart(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetExtendedBolusStart injectMsgSetExtendedBolusStart(
        MsgSetExtendedBolusStart instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetExtendedBolusStopSubcomponentFactory implements DanaRCommModule_ContributesMsgSetExtendedBolusStop.MsgSetExtendedBolusStopSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetExtendedBolusStop.MsgSetExtendedBolusStopSubcomponent create(
        MsgSetExtendedBolusStop arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetExtendedBolusStopSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetExtendedBolusStopSubcomponentImpl implements DanaRCommModule_ContributesMsgSetExtendedBolusStop.MsgSetExtendedBolusStopSubcomponent {
    private MsgSetExtendedBolusStopSubcomponentImpl(MsgSetExtendedBolusStop arg0) {

    }

    @Override
    public void inject(MsgSetExtendedBolusStop arg0) {
      injectMsgSetExtendedBolusStop(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetExtendedBolusStop injectMsgSetExtendedBolusStop(
        MsgSetExtendedBolusStop instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetSingleBasalProfileSubcomponentFactory implements DanaRCommModule_ContributesMsgSetSingleBasalProfile.MsgSetSingleBasalProfileSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetSingleBasalProfile.MsgSetSingleBasalProfileSubcomponent create(
        MsgSetSingleBasalProfile arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetSingleBasalProfileSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetSingleBasalProfileSubcomponentImpl implements DanaRCommModule_ContributesMsgSetSingleBasalProfile.MsgSetSingleBasalProfileSubcomponent {
    private MsgSetSingleBasalProfileSubcomponentImpl(MsgSetSingleBasalProfile arg0) {

    }

    @Override
    public void inject(MsgSetSingleBasalProfile arg0) {
      injectMsgSetSingleBasalProfile(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetSingleBasalProfile injectMsgSetSingleBasalProfile(
        MsgSetSingleBasalProfile instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetTempBasalStartSubcomponentFactory implements DanaRCommModule_ContributesMsgSetTempBasalStart.MsgSetTempBasalStartSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetTempBasalStart.MsgSetTempBasalStartSubcomponent create(
        MsgSetTempBasalStart arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetTempBasalStartSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetTempBasalStartSubcomponentImpl implements DanaRCommModule_ContributesMsgSetTempBasalStart.MsgSetTempBasalStartSubcomponent {
    private MsgSetTempBasalStartSubcomponentImpl(MsgSetTempBasalStart arg0) {

    }

    @Override
    public void inject(MsgSetTempBasalStart arg0) {
      injectMsgSetTempBasalStart(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetTempBasalStart injectMsgSetTempBasalStart(MsgSetTempBasalStart instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetTempBasalStopSubcomponentFactory implements DanaRCommModule_ContributesMsgSetTempBasalStop.MsgSetTempBasalStopSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetTempBasalStop.MsgSetTempBasalStopSubcomponent create(
        MsgSetTempBasalStop arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetTempBasalStopSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetTempBasalStopSubcomponentImpl implements DanaRCommModule_ContributesMsgSetTempBasalStop.MsgSetTempBasalStopSubcomponent {
    private MsgSetTempBasalStopSubcomponentImpl(MsgSetTempBasalStop arg0) {

    }

    @Override
    public void inject(MsgSetTempBasalStop arg0) {
      injectMsgSetTempBasalStop(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetTempBasalStop injectMsgSetTempBasalStop(MsgSetTempBasalStop instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetUserOptionsSubcomponentFactory implements DanaRCommModule_ContributesMsgSetUserOptions.MsgSetUserOptionsSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetUserOptions.MsgSetUserOptionsSubcomponent create(
        MsgSetUserOptions arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetUserOptionsSubcomponentImpl(arg0);
    }
  }

  private final class MsgSetUserOptionsSubcomponentImpl implements DanaRCommModule_ContributesMsgSetUserOptions.MsgSetUserOptionsSubcomponent {
    private MsgSetUserOptionsSubcomponentImpl(MsgSetUserOptions arg0) {

    }

    @Override
    public void inject(MsgSetUserOptions arg0) {
      injectMsgSetUserOptions(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetUserOptions injectMsgSetUserOptions(MsgSetUserOptions instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingActiveProfileSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingActiveProfile.MsgSettingActiveProfileSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingActiveProfile.MsgSettingActiveProfileSubcomponent create(
        MsgSettingActiveProfile arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingActiveProfileSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingActiveProfileSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingActiveProfile.MsgSettingActiveProfileSubcomponent {
    private MsgSettingActiveProfileSubcomponentImpl(MsgSettingActiveProfile arg0) {

    }

    @Override
    public void inject(MsgSettingActiveProfile arg0) {
      injectMsgSettingActiveProfile(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingActiveProfile injectMsgSettingActiveProfile(
        MsgSettingActiveProfile instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingBasalSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingBasal.MsgSettingBasalSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingBasal.MsgSettingBasalSubcomponent create(
        MsgSettingBasal arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingBasalSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingBasalSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingBasal.MsgSettingBasalSubcomponent {
    private MsgSettingBasalSubcomponentImpl(MsgSettingBasal arg0) {

    }

    @Override
    public void inject(MsgSettingBasal arg0) {
      injectMsgSettingBasal(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingBasal injectMsgSettingBasal(MsgSettingBasal instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingBasalProfileAllSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingBasalProfileAll.MsgSettingBasalProfileAllSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingBasalProfileAll.MsgSettingBasalProfileAllSubcomponent create(
        MsgSettingBasalProfileAll arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingBasalProfileAllSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingBasalProfileAllSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingBasalProfileAll.MsgSettingBasalProfileAllSubcomponent {
    private MsgSettingBasalProfileAllSubcomponentImpl(MsgSettingBasalProfileAll arg0) {

    }

    @Override
    public void inject(MsgSettingBasalProfileAll arg0) {
      injectMsgSettingBasalProfileAll(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingBasalProfileAll injectMsgSettingBasalProfileAll(
        MsgSettingBasalProfileAll instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingGlucoseSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingGlucose.MsgSettingGlucoseSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingGlucose.MsgSettingGlucoseSubcomponent create(
        MsgSettingGlucose arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingGlucoseSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingGlucoseSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingGlucose.MsgSettingGlucoseSubcomponent {
    private MsgSettingGlucoseSubcomponentImpl(MsgSettingGlucose arg0) {

    }

    @Override
    public void inject(MsgSettingGlucose arg0) {
      injectMsgSettingGlucose(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingGlucose injectMsgSettingGlucose(MsgSettingGlucose instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingMaxValuesSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingMaxValues.MsgSettingMaxValuesSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingMaxValues.MsgSettingMaxValuesSubcomponent create(
        MsgSettingMaxValues arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingMaxValuesSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingMaxValuesSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingMaxValues.MsgSettingMaxValuesSubcomponent {
    private MsgSettingMaxValuesSubcomponentImpl(MsgSettingMaxValues arg0) {

    }

    @Override
    public void inject(MsgSettingMaxValues arg0) {
      injectMsgSettingMaxValues(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingMaxValues injectMsgSettingMaxValues(MsgSettingMaxValues instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingMealSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingMeal.MsgSettingMealSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingMeal.MsgSettingMealSubcomponent create(
        MsgSettingMeal arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingMealSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingMealSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingMeal.MsgSettingMealSubcomponent {
    private MsgSettingMealSubcomponentImpl(MsgSettingMeal arg0) {

    }

    @Override
    public void inject(MsgSettingMeal arg0) {
      injectMsgSettingMeal(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingMeal injectMsgSettingMeal(MsgSettingMeal instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingProfileRatiosSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingProfileRatios.MsgSettingProfileRatiosSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingProfileRatios.MsgSettingProfileRatiosSubcomponent create(
        MsgSettingProfileRatios arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingProfileRatiosSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingProfileRatiosSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingProfileRatios.MsgSettingProfileRatiosSubcomponent {
    private MsgSettingProfileRatiosSubcomponentImpl(MsgSettingProfileRatios arg0) {

    }

    @Override
    public void inject(MsgSettingProfileRatios arg0) {
      injectMsgSettingProfileRatios(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingProfileRatios injectMsgSettingProfileRatios(
        MsgSettingProfileRatios instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingProfileRatiosAllSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingProfileRatiosAll.MsgSettingProfileRatiosAllSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingProfileRatiosAll.MsgSettingProfileRatiosAllSubcomponent create(
        MsgSettingProfileRatiosAll arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingProfileRatiosAllSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingProfileRatiosAllSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingProfileRatiosAll.MsgSettingProfileRatiosAllSubcomponent {
    private MsgSettingProfileRatiosAllSubcomponentImpl(MsgSettingProfileRatiosAll arg0) {

    }

    @Override
    public void inject(MsgSettingProfileRatiosAll arg0) {
      injectMsgSettingProfileRatiosAll(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingProfileRatiosAll injectMsgSettingProfileRatiosAll(
        MsgSettingProfileRatiosAll instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingPumpTimeSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingPumpTime.MsgSettingPumpTimeSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingPumpTime.MsgSettingPumpTimeSubcomponent create(
        MsgSettingPumpTime arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingPumpTimeSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingPumpTimeSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingPumpTime.MsgSettingPumpTimeSubcomponent {
    private MsgSettingPumpTimeSubcomponentImpl(MsgSettingPumpTime arg0) {

    }

    @Override
    public void inject(MsgSettingPumpTime arg0) {
      injectMsgSettingPumpTime(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingPumpTime injectMsgSettingPumpTime(MsgSettingPumpTime instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingShippingInfoSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingShippingInfo.MsgSettingShippingInfoSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingShippingInfo.MsgSettingShippingInfoSubcomponent create(
        MsgSettingShippingInfo arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingShippingInfoSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingShippingInfoSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingShippingInfo.MsgSettingShippingInfoSubcomponent {
    private MsgSettingShippingInfoSubcomponentImpl(MsgSettingShippingInfo arg0) {

    }

    @Override
    public void inject(MsgSettingShippingInfo arg0) {
      injectMsgSettingShippingInfo(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingShippingInfo injectMsgSettingShippingInfo(MsgSettingShippingInfo instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingUserOptionsSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingUserOptions.MsgSettingUserOptionsSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingUserOptions.MsgSettingUserOptionsSubcomponent create(
        MsgSettingUserOptions arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingUserOptionsSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingUserOptionsSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingUserOptions.MsgSettingUserOptionsSubcomponent {
    private MsgSettingUserOptionsSubcomponentImpl(MsgSettingUserOptions arg0) {

    }

    @Override
    public void inject(MsgSettingUserOptions arg0) {
      injectMsgSettingUserOptions(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingUserOptions injectMsgSettingUserOptions(MsgSettingUserOptions instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusSubcomponentFactory implements DanaRCommModule_ContributesMsgStatus.MsgStatusSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatus.MsgStatusSubcomponent create(MsgStatus arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusSubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusSubcomponentImpl implements DanaRCommModule_ContributesMsgStatus.MsgStatusSubcomponent {
    private MsgStatusSubcomponentImpl(MsgStatus arg0) {

    }

    @Override
    public void inject(MsgStatus arg0) {
      injectMsgStatus(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatus injectMsgStatus(MsgStatus instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusBasicSubcomponentFactory implements DanaRCommModule_ContributesMsgStatusBasic.MsgStatusBasicSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatusBasic.MsgStatusBasicSubcomponent create(
        MsgStatusBasic arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusBasicSubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusBasicSubcomponentImpl implements DanaRCommModule_ContributesMsgStatusBasic.MsgStatusBasicSubcomponent {
    private MsgStatusBasicSubcomponentImpl(MsgStatusBasic arg0) {

    }

    @Override
    public void inject(MsgStatusBasic arg0) {
      injectMsgStatusBasic(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatusBasic injectMsgStatusBasic(MsgStatusBasic instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusBolusExtendedSubcomponentFactory implements DanaRCommModule_ContributesMsgStatusBolusExtended.MsgStatusBolusExtendedSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatusBolusExtended.MsgStatusBolusExtendedSubcomponent create(
        MsgStatusBolusExtended arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusBolusExtendedSubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusBolusExtendedSubcomponentImpl implements DanaRCommModule_ContributesMsgStatusBolusExtended.MsgStatusBolusExtendedSubcomponent {
    private MsgStatusBolusExtendedSubcomponentImpl(MsgStatusBolusExtended arg0) {

    }

    @Override
    public void inject(MsgStatusBolusExtended arg0) {
      injectMsgStatusBolusExtended(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatusBolusExtended injectMsgStatusBolusExtended(MsgStatusBolusExtended instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusProfileSubcomponentFactory implements DanaRCommModule_ContributesMsgStatusProfile.MsgStatusProfileSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatusProfile.MsgStatusProfileSubcomponent create(
        MsgStatusProfile arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusProfileSubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusProfileSubcomponentImpl implements DanaRCommModule_ContributesMsgStatusProfile.MsgStatusProfileSubcomponent {
    private MsgStatusProfileSubcomponentImpl(MsgStatusProfile arg0) {

    }

    @Override
    public void inject(MsgStatusProfile arg0) {
      injectMsgStatusProfile(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatusProfile injectMsgStatusProfile(MsgStatusProfile instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusTempBasalSubcomponentFactory implements DanaRCommModule_ContributesMsgStatusTempBasal.MsgStatusTempBasalSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatusTempBasal.MsgStatusTempBasalSubcomponent create(
        MsgStatusTempBasal arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusTempBasalSubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusTempBasalSubcomponentImpl implements DanaRCommModule_ContributesMsgStatusTempBasal.MsgStatusTempBasalSubcomponent {
    private MsgStatusTempBasalSubcomponentImpl(MsgStatusTempBasal arg0) {

    }

    @Override
    public void inject(MsgStatusTempBasal arg0) {
      injectMsgStatusTempBasal(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatusTempBasal injectMsgStatusTempBasal(MsgStatusTempBasal instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryBolusSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryBolus.MsgHistoryBolusSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryBolus.MsgHistoryBolusSubcomponent create(
        MsgHistoryBolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryBolusSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryBolusSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryBolus.MsgHistoryBolusSubcomponent {
    private MsgHistoryBolusSubcomponentImpl(MsgHistoryBolus arg0) {

    }

    @Override
    public void inject(MsgHistoryBolus arg0) {
      injectMsgHistoryBolus(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryBolus injectMsgHistoryBolus(MsgHistoryBolus instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryDailyInsulinSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryDailyInsulin.MsgHistoryDailyInsulinSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryDailyInsulin.MsgHistoryDailyInsulinSubcomponent create(
        MsgHistoryDailyInsulin arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryDailyInsulinSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryDailyInsulinSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryDailyInsulin.MsgHistoryDailyInsulinSubcomponent {
    private MsgHistoryDailyInsulinSubcomponentImpl(MsgHistoryDailyInsulin arg0) {

    }

    @Override
    public void inject(MsgHistoryDailyInsulin arg0) {
      injectMsgHistoryDailyInsulin(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryDailyInsulin injectMsgHistoryDailyInsulin(MsgHistoryDailyInsulin instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryGlucoseSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryGlucose.MsgHistoryGlucoseSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryGlucose.MsgHistoryGlucoseSubcomponent create(
        MsgHistoryGlucose arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryGlucoseSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryGlucoseSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryGlucose.MsgHistoryGlucoseSubcomponent {
    private MsgHistoryGlucoseSubcomponentImpl(MsgHistoryGlucose arg0) {

    }

    @Override
    public void inject(MsgHistoryGlucose arg0) {
      injectMsgHistoryGlucose(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryGlucose injectMsgHistoryGlucose(MsgHistoryGlucose instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryAlarmSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryAlarm.MsgHistoryAlarmSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryAlarm.MsgHistoryAlarmSubcomponent create(
        MsgHistoryAlarm arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryAlarmSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryAlarmSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryAlarm.MsgHistoryAlarmSubcomponent {
    private MsgHistoryAlarmSubcomponentImpl(MsgHistoryAlarm arg0) {

    }

    @Override
    public void inject(MsgHistoryAlarm arg0) {
      injectMsgHistoryAlarm(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryAlarm injectMsgHistoryAlarm(MsgHistoryAlarm instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryErrorSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryError.MsgHistoryErrorSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryError.MsgHistoryErrorSubcomponent create(
        MsgHistoryError arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryErrorSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryErrorSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryError.MsgHistoryErrorSubcomponent {
    private MsgHistoryErrorSubcomponentImpl(MsgHistoryError arg0) {

    }

    @Override
    public void inject(MsgHistoryError arg0) {
      injectMsgHistoryError(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryError injectMsgHistoryError(MsgHistoryError instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryCarboSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryCarbo.MsgHistoryCarboSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryCarbo.MsgHistoryCarboSubcomponent create(
        MsgHistoryCarbo arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryCarboSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryCarboSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryCarbo.MsgHistoryCarboSubcomponent {
    private MsgHistoryCarboSubcomponentImpl(MsgHistoryCarbo arg0) {

    }

    @Override
    public void inject(MsgHistoryCarbo arg0) {
      injectMsgHistoryCarbo(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryCarbo injectMsgHistoryCarbo(MsgHistoryCarbo instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryRefillSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryRefill.MsgHistoryRefillSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryRefill.MsgHistoryRefillSubcomponent create(
        MsgHistoryRefill arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryRefillSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryRefillSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryRefill.MsgHistoryRefillSubcomponent {
    private MsgHistoryRefillSubcomponentImpl(MsgHistoryRefill arg0) {

    }

    @Override
    public void inject(MsgHistoryRefill arg0) {
      injectMsgHistoryRefill(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryRefill injectMsgHistoryRefill(MsgHistoryRefill instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistorySuspendSubcomponentFactory implements DanaRCommModule_ContributesMsgHistorySuspend.MsgHistorySuspendSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistorySuspend.MsgHistorySuspendSubcomponent create(
        MsgHistorySuspend arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistorySuspendSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistorySuspendSubcomponentImpl implements DanaRCommModule_ContributesMsgHistorySuspend.MsgHistorySuspendSubcomponent {
    private MsgHistorySuspendSubcomponentImpl(MsgHistorySuspend arg0) {

    }

    @Override
    public void inject(MsgHistorySuspend arg0) {
      injectMsgHistorySuspend(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistorySuspend injectMsgHistorySuspend(MsgHistorySuspend instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryBasalHourSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryBasalHour.MsgHistoryBasalHourSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryBasalHour.MsgHistoryBasalHourSubcomponent create(
        MsgHistoryBasalHour arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryBasalHourSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryBasalHourSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryBasalHour.MsgHistoryBasalHourSubcomponent {
    private MsgHistoryBasalHourSubcomponentImpl(MsgHistoryBasalHour arg0) {

    }

    @Override
    public void inject(MsgHistoryBasalHour arg0) {
      injectMsgHistoryBasalHour(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryBasalHour injectMsgHistoryBasalHour(MsgHistoryBasalHour instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryNewSubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryNew.MsgHistoryNewSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryNew.MsgHistoryNewSubcomponent create(
        MsgHistoryNew arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryNewSubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryNewSubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryNew.MsgHistoryNewSubcomponent {
    private MsgHistoryNewSubcomponentImpl(MsgHistoryNew arg0) {

    }

    @Override
    public void inject(MsgHistoryNew arg0) {
      injectMsgHistoryNew(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryNew injectMsgHistoryNew(MsgHistoryNew instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgCheckValue_v2SubcomponentFactory implements DanaRCommModule_ContributesMsgCheckValue_v2.MsgCheckValue_v2Subcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgCheckValue_v2.MsgCheckValue_v2Subcomponent create(
        MsgCheckValue_v2 arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgCheckValue_v2SubcomponentImpl(arg0);
    }
  }

  private final class MsgCheckValue_v2SubcomponentImpl implements DanaRCommModule_ContributesMsgCheckValue_v2.MsgCheckValue_v2Subcomponent {
    private MsgCheckValue_v2SubcomponentImpl(MsgCheckValue_v2 arg0) {

    }

    @Override
    public void inject(MsgCheckValue_v2 arg0) {
      injectMsgCheckValue_v2(arg0);
    }

    @CanIgnoreReturnValue
    private MsgCheckValue_v2 injectMsgCheckValue_v2(MsgCheckValue_v2 instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgHistoryEvents_v2SubcomponentFactory implements DanaRCommModule_ContributesMsgHistoryEvents_v2.MsgHistoryEvents_v2Subcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgHistoryEvents_v2.MsgHistoryEvents_v2Subcomponent create(
        MsgHistoryEvents_v2 arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgHistoryEvents_v2SubcomponentImpl(arg0);
    }
  }

  private final class MsgHistoryEvents_v2SubcomponentImpl implements DanaRCommModule_ContributesMsgHistoryEvents_v2.MsgHistoryEvents_v2Subcomponent {
    private MsgHistoryEvents_v2SubcomponentImpl(MsgHistoryEvents_v2 arg0) {

    }

    @Override
    public void inject(MsgHistoryEvents_v2 arg0) {
      injectMsgHistoryEvents_v2(arg0);
    }

    @CanIgnoreReturnValue
    private MsgHistoryEvents_v2 injectMsgHistoryEvents_v2(MsgHistoryEvents_v2 instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetAPSTempBasalStart_v2SubcomponentFactory implements DanaRCommModule_ContributesMsgSetAPSTempBasalStart_v2.MsgSetAPSTempBasalStart_v2Subcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetAPSTempBasalStart_v2.MsgSetAPSTempBasalStart_v2Subcomponent create(
        MsgSetAPSTempBasalStart_v2 arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetAPSTempBasalStart_v2SubcomponentImpl(arg0);
    }
  }

  private final class MsgSetAPSTempBasalStart_v2SubcomponentImpl implements DanaRCommModule_ContributesMsgSetAPSTempBasalStart_v2.MsgSetAPSTempBasalStart_v2Subcomponent {
    private MsgSetAPSTempBasalStart_v2SubcomponentImpl(MsgSetAPSTempBasalStart_v2 arg0) {

    }

    @Override
    public void inject(MsgSetAPSTempBasalStart_v2 arg0) {
      injectMsgSetAPSTempBasalStart_v2(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetAPSTempBasalStart_v2 injectMsgSetAPSTempBasalStart_v2(
        MsgSetAPSTempBasalStart_v2 instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSetHistoryEntry_v2SubcomponentFactory implements DanaRCommModule_ContributesMsgSetHistoryEntry_v2.MsgSetHistoryEntry_v2Subcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSetHistoryEntry_v2.MsgSetHistoryEntry_v2Subcomponent create(
        MsgSetHistoryEntry_v2 arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSetHistoryEntry_v2SubcomponentImpl(arg0);
    }
  }

  private final class MsgSetHistoryEntry_v2SubcomponentImpl implements DanaRCommModule_ContributesMsgSetHistoryEntry_v2.MsgSetHistoryEntry_v2Subcomponent {
    private MsgSetHistoryEntry_v2SubcomponentImpl(MsgSetHistoryEntry_v2 arg0) {

    }

    @Override
    public void inject(MsgSetHistoryEntry_v2 arg0) {
      injectMsgSetHistoryEntry_v2(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSetHistoryEntry_v2 injectMsgSetHistoryEntry_v2(MsgSetHistoryEntry_v2 instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusAPS_v2SubcomponentFactory implements DanaRCommModule_ContributesMsgStatusAPS_v2.MsgStatusAPS_v2Subcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatusAPS_v2.MsgStatusAPS_v2Subcomponent create(
        MsgStatusAPS_v2 arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusAPS_v2SubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusAPS_v2SubcomponentImpl implements DanaRCommModule_ContributesMsgStatusAPS_v2.MsgStatusAPS_v2Subcomponent {
    private MsgStatusAPS_v2SubcomponentImpl(MsgStatusAPS_v2 arg0) {

    }

    @Override
    public void inject(MsgStatusAPS_v2 arg0) {
      injectMsgStatusAPS_v2(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatusAPS_v2 injectMsgStatusAPS_v2(MsgStatusAPS_v2 instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusBolusExtended_v2SubcomponentFactory implements DanaRCommModule_ContributesMsgStatusBolusExtended_v2.MsgStatusBolusExtended_v2Subcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatusBolusExtended_v2.MsgStatusBolusExtended_v2Subcomponent create(
        MsgStatusBolusExtended_v2 arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusBolusExtended_v2SubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusBolusExtended_v2SubcomponentImpl implements DanaRCommModule_ContributesMsgStatusBolusExtended_v2.MsgStatusBolusExtended_v2Subcomponent {
    private MsgStatusBolusExtended_v2SubcomponentImpl(MsgStatusBolusExtended_v2 arg0) {

    }

    @Override
    public void inject(MsgStatusBolusExtended_v2 arg0) {
      injectMsgStatusBolusExtended_v2(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatusBolusExtended_v2 injectMsgStatusBolusExtended_v2(
        MsgStatusBolusExtended_v2 instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusTempBasal_v2SubcomponentFactory implements DanaRCommModule_ContributesMsgStatusTempBasal_v2.MsgStatusTempBasal_v2Subcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatusTempBasal_v2.MsgStatusTempBasal_v2Subcomponent create(
        MsgStatusTempBasal_v2 arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusTempBasal_v2SubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusTempBasal_v2SubcomponentImpl implements DanaRCommModule_ContributesMsgStatusTempBasal_v2.MsgStatusTempBasal_v2Subcomponent {
    private MsgStatusTempBasal_v2SubcomponentImpl(MsgStatusTempBasal_v2 arg0) {

    }

    @Override
    public void inject(MsgStatusTempBasal_v2 arg0) {
      injectMsgStatusTempBasal_v2(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatusTempBasal_v2 injectMsgStatusTempBasal_v2(MsgStatusTempBasal_v2 instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgCheckValue_kSubcomponentFactory implements DanaRCommModule_ContributesMsgCheckValue_k.MsgCheckValue_kSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgCheckValue_k.MsgCheckValue_kSubcomponent create(
        MsgCheckValue_k arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgCheckValue_kSubcomponentImpl(arg0);
    }
  }

  private final class MsgCheckValue_kSubcomponentImpl implements DanaRCommModule_ContributesMsgCheckValue_k.MsgCheckValue_kSubcomponent {
    private MsgCheckValue_kSubcomponentImpl(MsgCheckValue_k arg0) {

    }

    @Override
    public void inject(MsgCheckValue_k arg0) {
      injectMsgCheckValue_k(arg0);
    }

    @CanIgnoreReturnValue
    private MsgCheckValue_k injectMsgCheckValue_k(MsgCheckValue_k instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgInitConnStatusBasic_kSubcomponentFactory implements DanaRCommModule_ContributesMsgInitConnStatusBasic_k.MsgInitConnStatusBasic_kSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgInitConnStatusBasic_k.MsgInitConnStatusBasic_kSubcomponent create(
        MsgInitConnStatusBasic_k arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgInitConnStatusBasic_kSubcomponentImpl(arg0);
    }
  }

  private final class MsgInitConnStatusBasic_kSubcomponentImpl implements DanaRCommModule_ContributesMsgInitConnStatusBasic_k.MsgInitConnStatusBasic_kSubcomponent {
    private MsgInitConnStatusBasic_kSubcomponentImpl(MsgInitConnStatusBasic_k arg0) {

    }

    @Override
    public void inject(MsgInitConnStatusBasic_k arg0) {
      injectMsgInitConnStatusBasic_k(arg0);
    }

    @CanIgnoreReturnValue
    private MsgInitConnStatusBasic_k injectMsgInitConnStatusBasic_k(
        MsgInitConnStatusBasic_k instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgInitConnStatusBolus_kSubcomponentFactory implements DanaRCommModule_ContributesMsgInitConnStatusBolus_k.MsgInitConnStatusBolus_kSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgInitConnStatusBolus_k.MsgInitConnStatusBolus_kSubcomponent create(
        MsgInitConnStatusBolus_k arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgInitConnStatusBolus_kSubcomponentImpl(arg0);
    }
  }

  private final class MsgInitConnStatusBolus_kSubcomponentImpl implements DanaRCommModule_ContributesMsgInitConnStatusBolus_k.MsgInitConnStatusBolus_kSubcomponent {
    private MsgInitConnStatusBolus_kSubcomponentImpl(MsgInitConnStatusBolus_k arg0) {

    }

    @Override
    public void inject(MsgInitConnStatusBolus_k arg0) {
      injectMsgInitConnStatusBolus_k(arg0);
    }

    @CanIgnoreReturnValue
    private MsgInitConnStatusBolus_k injectMsgInitConnStatusBolus_k(
        MsgInitConnStatusBolus_k instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgInitConnStatusTime_kSubcomponentFactory implements DanaRCommModule_ContributesMsgInitConnStatusTime_k.MsgInitConnStatusTime_kSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgInitConnStatusTime_k.MsgInitConnStatusTime_kSubcomponent create(
        MsgInitConnStatusTime_k arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgInitConnStatusTime_kSubcomponentImpl(arg0);
    }
  }

  private final class MsgInitConnStatusTime_kSubcomponentImpl implements DanaRCommModule_ContributesMsgInitConnStatusTime_k.MsgInitConnStatusTime_kSubcomponent {
    private MsgInitConnStatusTime_kSubcomponentImpl(MsgInitConnStatusTime_k arg0) {

    }

    @Override
    public void inject(MsgInitConnStatusTime_k arg0) {
      injectMsgInitConnStatusTime_k(arg0);
    }

    @CanIgnoreReturnValue
    private MsgInitConnStatusTime_k injectMsgInitConnStatusTime_k(
        MsgInitConnStatusTime_k instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingBasalProfileAll_kSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingBasalProfileAll_k.MsgSettingBasalProfileAll_kSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingBasalProfileAll_k.MsgSettingBasalProfileAll_kSubcomponent create(
        MsgSettingBasalProfileAll_k arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingBasalProfileAll_kSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingBasalProfileAll_kSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingBasalProfileAll_k.MsgSettingBasalProfileAll_kSubcomponent {
    private MsgSettingBasalProfileAll_kSubcomponentImpl(MsgSettingBasalProfileAll_k arg0) {

    }

    @Override
    public void inject(MsgSettingBasalProfileAll_k arg0) {
      injectMsgSettingBasalProfileAll_k(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingBasalProfileAll_k injectMsgSettingBasalProfileAll_k(
        MsgSettingBasalProfileAll_k instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgSettingBasal_kSubcomponentFactory implements DanaRCommModule_ContributesMsgSettingBasal_k.MsgSettingBasal_kSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgSettingBasal_k.MsgSettingBasal_kSubcomponent create(
        MsgSettingBasal_k arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgSettingBasal_kSubcomponentImpl(arg0);
    }
  }

  private final class MsgSettingBasal_kSubcomponentImpl implements DanaRCommModule_ContributesMsgSettingBasal_k.MsgSettingBasal_kSubcomponent {
    private MsgSettingBasal_kSubcomponentImpl(MsgSettingBasal_k arg0) {

    }

    @Override
    public void inject(MsgSettingBasal_k arg0) {
      injectMsgSettingBasal_k(arg0);
    }

    @CanIgnoreReturnValue
    private MsgSettingBasal_k injectMsgSettingBasal_k(MsgSettingBasal_k instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatusBasic_kSubcomponentFactory implements DanaRCommModule_ContributesMsgStatusBasic_k.MsgStatusBasic_kSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatusBasic_k.MsgStatusBasic_kSubcomponent create(
        MsgStatusBasic_k arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatusBasic_kSubcomponentImpl(arg0);
    }
  }

  private final class MsgStatusBasic_kSubcomponentImpl implements DanaRCommModule_ContributesMsgStatusBasic_k.MsgStatusBasic_kSubcomponent {
    private MsgStatusBasic_kSubcomponentImpl(MsgStatusBasic_k arg0) {

    }

    @Override
    public void inject(MsgStatusBasic_k arg0) {
      injectMsgStatusBasic_k(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatusBasic_k injectMsgStatusBasic_k(MsgStatusBasic_k instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class MsgStatus_kSubcomponentFactory implements DanaRCommModule_ContributesMsgStatus_k.MsgStatus_kSubcomponent.Factory {
    @Override
    public DanaRCommModule_ContributesMsgStatus_k.MsgStatus_kSubcomponent create(MsgStatus_k arg0) {
      Preconditions.checkNotNull(arg0);
      return new MsgStatus_kSubcomponentImpl(arg0);
    }
  }

  private final class MsgStatus_kSubcomponentImpl implements DanaRCommModule_ContributesMsgStatus_k.MsgStatus_kSubcomponent {
    private MsgStatus_kSubcomponentImpl(MsgStatus_k arg0) {

    }

    @Override
    public void inject(MsgStatus_k arg0) {
      injectMsgStatus_k(arg0);
    }

    @CanIgnoreReturnValue
    private MsgStatus_k injectMsgStatus_k(MsgStatus_k instance) {
      MessageBase_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      MessageBase_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      MessageBase_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      MessageBase_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      MessageBase_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      MessageBase_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      MessageBase_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      MessageBase_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      MessageBase_MembersInjector.injectConfigBuilder(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      MessageBase_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      MessageBase_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      MessageBase_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      MessageBase_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      MessageBase_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class AbstractDanaRExecutionServiceSubcomponentFactory implements DanaRServicesModule_ContributesAbstractDanaRExecutionService.AbstractDanaRExecutionServiceSubcomponent.Factory {
    @Override
    public DanaRServicesModule_ContributesAbstractDanaRExecutionService.AbstractDanaRExecutionServiceSubcomponent create(
        AbstractDanaRExecutionService arg0) {
      Preconditions.checkNotNull(arg0);
      return new AbstractDanaRExecutionServiceSubcomponentImpl(arg0);
    }
  }

  private final class AbstractDanaRExecutionServiceSubcomponentImpl implements DanaRServicesModule_ContributesAbstractDanaRExecutionService.AbstractDanaRExecutionServiceSubcomponent {
    private AbstractDanaRExecutionServiceSubcomponentImpl(AbstractDanaRExecutionService arg0) {

    }

    @Override
    public void inject(AbstractDanaRExecutionService arg0) {
      injectAbstractDanaRExecutionService(arg0);
    }

    @CanIgnoreReturnValue
    private AbstractDanaRExecutionService injectAbstractDanaRExecutionService(
        AbstractDanaRExecutionService instance) {
      AbstractDanaRExecutionService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      AbstractDanaRExecutionService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      AbstractDanaRExecutionService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRv2ExecutionServiceSubcomponentFactory implements DanaRServicesModule_ContributesDanaRv2ExecutionService.DanaRv2ExecutionServiceSubcomponent.Factory {
    @Override
    public DanaRServicesModule_ContributesDanaRv2ExecutionService.DanaRv2ExecutionServiceSubcomponent create(
        DanaRv2ExecutionService arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRv2ExecutionServiceSubcomponentImpl(arg0);
    }
  }

  private final class DanaRv2ExecutionServiceSubcomponentImpl implements DanaRServicesModule_ContributesDanaRv2ExecutionService.DanaRv2ExecutionServiceSubcomponent {
    private DanaRv2ExecutionServiceSubcomponentImpl(DanaRv2ExecutionService arg0) {

    }

    @Override
    public void inject(DanaRv2ExecutionService arg0) {
      injectDanaRv2ExecutionService(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRv2ExecutionService injectDanaRv2ExecutionService(
        DanaRv2ExecutionService instance) {
      AbstractDanaRExecutionService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      AbstractDanaRExecutionService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      AbstractDanaRExecutionService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      DanaRv2ExecutionService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectDanaRv2Plugin(instance, DaggerAppComponent.this.danaRv2PluginProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectConfigBuilderPlugin(instance, DaggerAppComponent.this.configBuilderPluginProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      DanaRv2ExecutionService_MembersInjector.injectMessageHashTableRv2(instance, DaggerAppComponent.this.messageHashTableRv2Provider.get());
      DanaRv2ExecutionService_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectActivePluginProvider(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DanaRv2ExecutionService_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRExecutionServiceSubcomponentFactory implements DanaRServicesModule_ContributesDanaRExecutionService.DanaRExecutionServiceSubcomponent.Factory {
    @Override
    public DanaRServicesModule_ContributesDanaRExecutionService.DanaRExecutionServiceSubcomponent create(
        DanaRExecutionService arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRExecutionServiceSubcomponentImpl(arg0);
    }
  }

  private final class DanaRExecutionServiceSubcomponentImpl implements DanaRServicesModule_ContributesDanaRExecutionService.DanaRExecutionServiceSubcomponent {
    private DanaRExecutionServiceSubcomponentImpl(DanaRExecutionService arg0) {

    }

    @Override
    public void inject(DanaRExecutionService arg0) {
      injectDanaRExecutionService(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRExecutionService injectDanaRExecutionService(DanaRExecutionService instance) {
      AbstractDanaRExecutionService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      AbstractDanaRExecutionService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      AbstractDanaRExecutionService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      DanaRExecutionService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRExecutionService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRExecutionService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRExecutionService_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      DanaRExecutionService_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      DanaRExecutionService_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      DanaRExecutionService_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      DanaRExecutionService_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      DanaRExecutionService_MembersInjector.injectMessageHashTableR(instance, DaggerAppComponent.this.messageHashTableRProvider.get());
      DanaRExecutionService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaRExecutionService_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      DanaRExecutionService_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      DanaRExecutionService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DanaRExecutionService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      return instance;
    }
  }

  private final class DanaRKoreanExecutionServiceSubcomponentFactory implements DanaRServicesModule_ContributesDanaRKoreanExecutionService.DanaRKoreanExecutionServiceSubcomponent.Factory {
    @Override
    public DanaRServicesModule_ContributesDanaRKoreanExecutionService.DanaRKoreanExecutionServiceSubcomponent create(
        DanaRKoreanExecutionService arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRKoreanExecutionServiceSubcomponentImpl(arg0);
    }
  }

  private final class DanaRKoreanExecutionServiceSubcomponentImpl implements DanaRServicesModule_ContributesDanaRKoreanExecutionService.DanaRKoreanExecutionServiceSubcomponent {
    private DanaRKoreanExecutionServiceSubcomponentImpl(DanaRKoreanExecutionService arg0) {

    }

    @Override
    public void inject(DanaRKoreanExecutionService arg0) {
      injectDanaRKoreanExecutionService(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRKoreanExecutionService injectDanaRKoreanExecutionService(
        DanaRKoreanExecutionService instance) {
      AbstractDanaRExecutionService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      AbstractDanaRExecutionService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      AbstractDanaRExecutionService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      AbstractDanaRExecutionService_MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectDanaRPlugin(instance, DaggerAppComponent.this.danaRPluginProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectDanaRKoreanPlugin(instance, DaggerAppComponent.this.danaRKoreanPluginProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectMessageHashTableRKorean(instance, DaggerAppComponent.this.messageHashTableRKoreanProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      DanaRKoreanExecutionService_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_PacketSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet.DanaRS_PacketSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet.DanaRS_PacketSubcomponent create(
        DanaRS_Packet arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_PacketSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_PacketSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet.DanaRS_PacketSubcomponent {
    private DanaRS_PacketSubcomponentImpl(DanaRS_Packet arg0) {

    }

    @Override
    public void inject(DanaRS_Packet arg0) {
      injectDanaRS_Packet(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet injectDanaRS_Packet(DanaRS_Packet instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponent create(
        DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal.DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponent {
    private DanaRS_Packet_Basal_Set_Cancel_Temporary_BasalSubcomponentImpl(
        DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal arg0) {
      injectDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal injectDanaRS_Packet_Basal_Set_Cancel_Temporary_Basal(
        DanaRS_Packet_Basal_Set_Cancel_Temporary_Basal instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Get_Basal_RateSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Basal_Rate.DanaRS_Packet_Basal_Get_Basal_RateSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Basal_Rate.DanaRS_Packet_Basal_Get_Basal_RateSubcomponent create(
        DanaRS_Packet_Basal_Get_Basal_Rate arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Get_Basal_RateSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Get_Basal_RateSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Basal_Rate.DanaRS_Packet_Basal_Get_Basal_RateSubcomponent {
    private DanaRS_Packet_Basal_Get_Basal_RateSubcomponentImpl(
        DanaRS_Packet_Basal_Get_Basal_Rate arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Get_Basal_Rate arg0) {
      injectDanaRS_Packet_Basal_Get_Basal_Rate(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Get_Basal_Rate injectDanaRS_Packet_Basal_Get_Basal_Rate(
        DanaRS_Packet_Basal_Get_Basal_Rate instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Basal_Get_Basal_Rate_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_Basal_Get_Basal_Rate_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRS_Packet_Basal_Get_Basal_Rate_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Basal_Rate.DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Basal_Rate.DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponent create(
        DanaRS_Packet_Basal_Get_Profile_Basal_Rate arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Basal_Rate.DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponent {
    private DanaRS_Packet_Basal_Get_Profile_Basal_RateSubcomponentImpl(
        DanaRS_Packet_Basal_Get_Profile_Basal_Rate arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Get_Profile_Basal_Rate arg0) {
      injectDanaRS_Packet_Basal_Get_Profile_Basal_Rate(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Get_Profile_Basal_Rate injectDanaRS_Packet_Basal_Get_Profile_Basal_Rate(
        DanaRS_Packet_Basal_Get_Profile_Basal_Rate instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Basal_Get_Profile_Basal_Rate_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Get_Profile_NumberSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Number.DanaRS_Packet_Basal_Get_Profile_NumberSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Number.DanaRS_Packet_Basal_Get_Profile_NumberSubcomponent create(
        DanaRS_Packet_Basal_Get_Profile_Number arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Get_Profile_NumberSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Get_Profile_NumberSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Profile_Number.DanaRS_Packet_Basal_Get_Profile_NumberSubcomponent {
    private DanaRS_Packet_Basal_Get_Profile_NumberSubcomponentImpl(
        DanaRS_Packet_Basal_Get_Profile_Number arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Get_Profile_Number arg0) {
      injectDanaRS_Packet_Basal_Get_Profile_Number(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Get_Profile_Number injectDanaRS_Packet_Basal_Get_Profile_Number(
        DanaRS_Packet_Basal_Get_Profile_Number instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Basal_Get_Profile_Number_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Set_Basal_RateSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Basal_Rate.DanaRS_Packet_Basal_Set_Basal_RateSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Basal_Rate.DanaRS_Packet_Basal_Set_Basal_RateSubcomponent create(
        DanaRS_Packet_Basal_Set_Basal_Rate arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Set_Basal_RateSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Set_Basal_RateSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Basal_Rate.DanaRS_Packet_Basal_Set_Basal_RateSubcomponent {
    private DanaRS_Packet_Basal_Set_Basal_RateSubcomponentImpl(
        DanaRS_Packet_Basal_Set_Basal_Rate arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Set_Basal_Rate arg0) {
      injectDanaRS_Packet_Basal_Set_Basal_Rate(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Set_Basal_Rate injectDanaRS_Packet_Basal_Set_Basal_Rate(
        DanaRS_Packet_Basal_Set_Basal_Rate instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Basal_Rate.DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Basal_Rate.DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponent create(
        DanaRS_Packet_Basal_Set_Profile_Basal_Rate arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Basal_Rate.DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponent {
    private DanaRS_Packet_Basal_Set_Profile_Basal_RateSubcomponentImpl(
        DanaRS_Packet_Basal_Set_Profile_Basal_Rate arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Set_Profile_Basal_Rate arg0) {
      injectDanaRS_Packet_Basal_Set_Profile_Basal_Rate(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Set_Profile_Basal_Rate injectDanaRS_Packet_Basal_Set_Profile_Basal_Rate(
        DanaRS_Packet_Basal_Set_Profile_Basal_Rate instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Set_Profile_NumberSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Number.DanaRS_Packet_Basal_Set_Profile_NumberSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Number.DanaRS_Packet_Basal_Set_Profile_NumberSubcomponent create(
        DanaRS_Packet_Basal_Set_Profile_Number arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Set_Profile_NumberSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Set_Profile_NumberSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Profile_Number.DanaRS_Packet_Basal_Set_Profile_NumberSubcomponent {
    private DanaRS_Packet_Basal_Set_Profile_NumberSubcomponentImpl(
        DanaRS_Packet_Basal_Set_Profile_Number arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Set_Profile_Number arg0) {
      injectDanaRS_Packet_Basal_Set_Profile_Number(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Set_Profile_Number injectDanaRS_Packet_Basal_Set_Profile_Number(
        DanaRS_Packet_Basal_Set_Profile_Number instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Set_Suspend_OffSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_Off.DanaRS_Packet_Basal_Set_Suspend_OffSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_Off.DanaRS_Packet_Basal_Set_Suspend_OffSubcomponent create(
        DanaRS_Packet_Basal_Set_Suspend_Off arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Set_Suspend_OffSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Set_Suspend_OffSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_Off.DanaRS_Packet_Basal_Set_Suspend_OffSubcomponent {
    private DanaRS_Packet_Basal_Set_Suspend_OffSubcomponentImpl(
        DanaRS_Packet_Basal_Set_Suspend_Off arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Set_Suspend_Off arg0) {
      injectDanaRS_Packet_Basal_Set_Suspend_Off(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Set_Suspend_Off injectDanaRS_Packet_Basal_Set_Suspend_Off(
        DanaRS_Packet_Basal_Set_Suspend_Off instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Set_Suspend_OnSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_On.DanaRS_Packet_Basal_Set_Suspend_OnSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_On.DanaRS_Packet_Basal_Set_Suspend_OnSubcomponent create(
        DanaRS_Packet_Basal_Set_Suspend_On arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Set_Suspend_OnSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Set_Suspend_OnSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Suspend_On.DanaRS_Packet_Basal_Set_Suspend_OnSubcomponent {
    private DanaRS_Packet_Basal_Set_Suspend_OnSubcomponentImpl(
        DanaRS_Packet_Basal_Set_Suspend_On arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Set_Suspend_On arg0) {
      injectDanaRS_Packet_Basal_Set_Suspend_On(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Set_Suspend_On injectDanaRS_Packet_Basal_Set_Suspend_On(
        DanaRS_Packet_Basal_Set_Suspend_On instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Temporary_Basal.DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Temporary_Basal.DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponent create(
        DanaRS_Packet_Basal_Set_Temporary_Basal arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Set_Temporary_Basal.DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponent {
    private DanaRS_Packet_Basal_Set_Temporary_BasalSubcomponentImpl(
        DanaRS_Packet_Basal_Set_Temporary_Basal arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Set_Temporary_Basal arg0) {
      injectDanaRS_Packet_Basal_Set_Temporary_Basal(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Set_Temporary_Basal injectDanaRS_Packet_Basal_Set_Temporary_Basal(
        DanaRS_Packet_Basal_Set_Temporary_Basal instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Temporary_Basal_State.DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Temporary_Basal_State.DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponent create(
        DanaRS_Packet_Basal_Get_Temporary_Basal_State arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Basal_Get_Temporary_Basal_State.DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponent {
    private DanaRS_Packet_Basal_Get_Temporary_Basal_StateSubcomponentImpl(
        DanaRS_Packet_Basal_Get_Temporary_Basal_State arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Basal_Get_Temporary_Basal_State arg0) {
      injectDanaRS_Packet_Basal_Get_Temporary_Basal_State(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Basal_Get_Temporary_Basal_State injectDanaRS_Packet_Basal_Get_Temporary_Basal_State(
        DanaRS_Packet_Basal_Get_Temporary_Basal_State instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Basal_Get_Temporary_Basal_State_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Bolus_Option.DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Bolus_Option.DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponent create(
        DanaRS_Packet_Bolus_Get_Bolus_Option arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Bolus_Option.DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponent {
    private DanaRS_Packet_Bolus_Get_Bolus_OptionSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Bolus_Option arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Bolus_Option arg0) {
      injectDanaRS_Packet_Bolus_Get_Bolus_Option(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Bolus_Option injectDanaRS_Packet_Bolus_Get_Bolus_Option(
        DanaRS_Packet_Bolus_Get_Bolus_Option instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_Bolus_Option_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_Bolus_Get_Bolus_Option_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRS_Packet_Bolus_Get_Bolus_Option_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Initial_Bolus.DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Initial_Bolus.DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponent create(
        DanaRS_Packet_Bolus_Get_Initial_Bolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Initial_Bolus.DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponent {
    private DanaRS_Packet_Bolus_Get_Initial_BolusSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Initial_Bolus arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Initial_Bolus arg0) {
      injectDanaRS_Packet_Bolus_Get_Initial_Bolus(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Initial_Bolus injectDanaRS_Packet_Bolus_Get_Initial_Bolus(
        DanaRS_Packet_Bolus_Get_Initial_Bolus instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Calculation_Information.DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Calculation_Information.DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponent create(
        DanaRS_Packet_Bolus_Get_Calculation_Information arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Calculation_Information.DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponent {
    private DanaRS_Packet_Bolus_Get_Calculation_InformationSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Calculation_Information arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Calculation_Information arg0) {
      injectDanaRS_Packet_Bolus_Get_Calculation_Information(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Calculation_Information injectDanaRS_Packet_Bolus_Get_Calculation_Information(
        DanaRS_Packet_Bolus_Get_Calculation_Information instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_Calculation_Information_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponent create(
        DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information.DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponent {
    private DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_InformationSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information arg0) {
      injectDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information injectDanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information(
        DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_Carbohydrate_Calculation_Information_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_CIR_CF_Array.DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_CIR_CF_Array.DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponent create(
        DanaRS_Packet_Bolus_Get_CIR_CF_Array arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_CIR_CF_Array.DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponent {
    private DanaRS_Packet_Bolus_Get_CIR_CF_ArraySubcomponentImpl(
        DanaRS_Packet_Bolus_Get_CIR_CF_Array arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_CIR_CF_Array arg0) {
      injectDanaRS_Packet_Bolus_Get_CIR_CF_Array(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_CIR_CF_Array injectDanaRS_Packet_Bolus_Get_CIR_CF_Array(
        DanaRS_Packet_Bolus_Get_CIR_CF_Array instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_CIR_CF_Array_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_24_CIR_CF_Array.DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_24_CIR_CF_Array.DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponent create(
        DanaRS_Packet_Bolus_Get_24_CIR_CF_Array arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_24_CIR_CF_Array.DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponent {
    private DanaRS_Packet_Bolus_Get_24_CIR_CF_ArraySubcomponentImpl(
        DanaRS_Packet_Bolus_Get_24_CIR_CF_Array arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_24_CIR_CF_Array arg0) {
      injectDanaRS_Packet_Bolus_Get_24_CIR_CF_Array(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_24_CIR_CF_Array injectDanaRS_Packet_Bolus_Get_24_CIR_CF_Array(
        DanaRS_Packet_Bolus_Get_24_CIR_CF_Array instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_24_CIR_CF_Array_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Dual_Bolus.DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Dual_Bolus.DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponent create(
        DanaRS_Packet_Bolus_Get_Dual_Bolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Dual_Bolus.DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponent {
    private DanaRS_Packet_Bolus_Get_Dual_BolusSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Dual_Bolus arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Dual_Bolus arg0) {
      injectDanaRS_Packet_Bolus_Get_Dual_Bolus(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Dual_Bolus injectDanaRS_Packet_Bolus_Get_Dual_Bolus(
        DanaRS_Packet_Bolus_Get_Dual_Bolus instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_Dual_Bolus_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus.DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus.DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponent create(
        DanaRS_Packet_Bolus_Get_Extended_Bolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus.DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponent {
    private DanaRS_Packet_Bolus_Get_Extended_BolusSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Extended_Bolus arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Extended_Bolus arg0) {
      injectDanaRS_Packet_Bolus_Get_Extended_Bolus(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Extended_Bolus injectDanaRS_Packet_Bolus_Get_Extended_Bolus(
        DanaRS_Packet_Bolus_Get_Extended_Bolus instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_Extended_Bolus_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus_State.DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus_State.DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponent create(
        DanaRS_Packet_Bolus_Get_Extended_Bolus_State arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Bolus_State.DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponent {
    private DanaRS_Packet_Bolus_Get_Extended_Bolus_StateSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Extended_Bolus_State arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Extended_Bolus_State arg0) {
      injectDanaRS_Packet_Bolus_Get_Extended_Bolus_State(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Extended_Bolus_State injectDanaRS_Packet_Bolus_Get_Extended_Bolus_State(
        DanaRS_Packet_Bolus_Get_Extended_Bolus_State instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_Extended_Bolus_State_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponent create(
        DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State.DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponent {
    private DanaRS_Packet_Bolus_Get_Extended_Menu_Option_StateSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State arg0) {
      injectDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State injectDanaRS_Packet_Bolus_Get_Extended_Menu_Option_State(
        DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_Extended_Menu_Option_State_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Step_Bolus_Information.DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Step_Bolus_Information.DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponent create(
        DanaRS_Packet_Bolus_Get_Step_Bolus_Information arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Get_Step_Bolus_Information.DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponent {
    private DanaRS_Packet_Bolus_Get_Step_Bolus_InformationSubcomponentImpl(
        DanaRS_Packet_Bolus_Get_Step_Bolus_Information arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Get_Step_Bolus_Information arg0) {
      injectDanaRS_Packet_Bolus_Get_Step_Bolus_Information(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Get_Step_Bolus_Information injectDanaRS_Packet_Bolus_Get_Step_Bolus_Information(
        DanaRS_Packet_Bolus_Get_Step_Bolus_Information instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Get_Step_Bolus_Information_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Bolus_Option.DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Bolus_Option.DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponent create(
        DanaRS_Packet_Bolus_Set_Bolus_Option arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Bolus_Option.DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponent {
    private DanaRS_Packet_Bolus_Set_Bolus_OptionSubcomponentImpl(
        DanaRS_Packet_Bolus_Set_Bolus_Option arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_Bolus_Option arg0) {
      injectDanaRS_Packet_Bolus_Set_Bolus_Option(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_Bolus_Option injectDanaRS_Packet_Bolus_Set_Bolus_Option(
        DanaRS_Packet_Bolus_Set_Bolus_Option instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Initial_Bolus.DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Initial_Bolus.DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponent create(
        DanaRS_Packet_Bolus_Set_Initial_Bolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Initial_Bolus.DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponent {
    private DanaRS_Packet_Bolus_Set_Initial_BolusSubcomponentImpl(
        DanaRS_Packet_Bolus_Set_Initial_Bolus arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_Initial_Bolus arg0) {
      injectDanaRS_Packet_Bolus_Set_Initial_Bolus(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_Initial_Bolus injectDanaRS_Packet_Bolus_Set_Initial_Bolus(
        DanaRS_Packet_Bolus_Set_Initial_Bolus instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_CIR_CF_Array.DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_CIR_CF_Array.DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponent create(
        DanaRS_Packet_Bolus_Set_CIR_CF_Array arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_CIR_CF_Array.DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponent {
    private DanaRS_Packet_Bolus_Set_CIR_CF_ArraySubcomponentImpl(
        DanaRS_Packet_Bolus_Set_CIR_CF_Array arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_CIR_CF_Array arg0) {
      injectDanaRS_Packet_Bolus_Set_CIR_CF_Array(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_CIR_CF_Array injectDanaRS_Packet_Bolus_Set_CIR_CF_Array(
        DanaRS_Packet_Bolus_Set_CIR_CF_Array instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_24_CIR_CF_Array.DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_24_CIR_CF_Array.DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponent create(
        DanaRS_Packet_Bolus_Set_24_CIR_CF_Array arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_24_CIR_CF_Array.DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponent {
    private DanaRS_Packet_Bolus_Set_24_CIR_CF_ArraySubcomponentImpl(
        DanaRS_Packet_Bolus_Set_24_CIR_CF_Array arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_24_CIR_CF_Array arg0) {
      injectDanaRS_Packet_Bolus_Set_24_CIR_CF_Array(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_24_CIR_CF_Array injectDanaRS_Packet_Bolus_Set_24_CIR_CF_Array(
        DanaRS_Packet_Bolus_Set_24_CIR_CF_Array instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Set_24_CIR_CF_Array_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Dual_Bolus.DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Dual_Bolus.DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponent create(
        DanaRS_Packet_Bolus_Set_Dual_Bolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Dual_Bolus.DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponent {
    private DanaRS_Packet_Bolus_Set_Dual_BolusSubcomponentImpl(
        DanaRS_Packet_Bolus_Set_Dual_Bolus arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_Dual_Bolus arg0) {
      injectDanaRS_Packet_Bolus_Set_Dual_Bolus(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_Dual_Bolus injectDanaRS_Packet_Bolus_Set_Dual_Bolus(
        DanaRS_Packet_Bolus_Set_Dual_Bolus instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus.DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus.DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponent create(
        DanaRS_Packet_Bolus_Set_Extended_Bolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus.DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponent {
    private DanaRS_Packet_Bolus_Set_Extended_BolusSubcomponentImpl(
        DanaRS_Packet_Bolus_Set_Extended_Bolus arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_Extended_Bolus arg0) {
      injectDanaRS_Packet_Bolus_Set_Extended_Bolus(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_Extended_Bolus injectDanaRS_Packet_Bolus_Set_Extended_Bolus(
        DanaRS_Packet_Bolus_Set_Extended_Bolus instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponent create(
        DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel.DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponent {
    private DanaRS_Packet_Bolus_Set_Extended_Bolus_CancelSubcomponentImpl(
        DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel arg0) {
      injectDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel injectDanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel(
        DanaRS_Packet_Bolus_Set_Extended_Bolus_Cancel instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Start.DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Start.DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponent create(
        DanaRS_Packet_Bolus_Set_Step_Bolus_Start arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Start.DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponent {
    private DanaRS_Packet_Bolus_Set_Step_Bolus_StartSubcomponentImpl(
        DanaRS_Packet_Bolus_Set_Step_Bolus_Start arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_Step_Bolus_Start arg0) {
      injectDanaRS_Packet_Bolus_Set_Step_Bolus_Start(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_Step_Bolus_Start injectDanaRS_Packet_Bolus_Set_Step_Bolus_Start(
        DanaRS_Packet_Bolus_Set_Step_Bolus_Start instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Set_Step_Bolus_Start_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      DanaRS_Packet_Bolus_Set_Step_Bolus_Start_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Stop.DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Stop.DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponent create(
        DanaRS_Packet_Bolus_Set_Step_Bolus_Stop arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Bolus_Set_Step_Bolus_Stop.DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponent {
    private DanaRS_Packet_Bolus_Set_Step_Bolus_StopSubcomponentImpl(
        DanaRS_Packet_Bolus_Set_Step_Bolus_Stop arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Bolus_Set_Step_Bolus_Stop arg0) {
      injectDanaRS_Packet_Bolus_Set_Step_Bolus_Stop(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Bolus_Set_Step_Bolus_Stop injectDanaRS_Packet_Bolus_Set_Step_Bolus_Stop(
        DanaRS_Packet_Bolus_Set_Step_Bolus_Stop instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Bolus_Set_Step_Bolus_Stop_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_Bolus_Set_Step_Bolus_Stop_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRS_Packet_Bolus_Set_Step_Bolus_Stop_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Etc_Keep_ConnectionSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Etc_Keep_Connection.DanaRS_Packet_Etc_Keep_ConnectionSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Etc_Keep_Connection.DanaRS_Packet_Etc_Keep_ConnectionSubcomponent create(
        DanaRS_Packet_Etc_Keep_Connection arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Etc_Keep_ConnectionSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Etc_Keep_ConnectionSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Etc_Keep_Connection.DanaRS_Packet_Etc_Keep_ConnectionSubcomponent {
    private DanaRS_Packet_Etc_Keep_ConnectionSubcomponentImpl(
        DanaRS_Packet_Etc_Keep_Connection arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Etc_Keep_Connection arg0) {
      injectDanaRS_Packet_Etc_Keep_Connection(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Etc_Keep_Connection injectDanaRS_Packet_Etc_Keep_Connection(
        DanaRS_Packet_Etc_Keep_Connection instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Etc_Set_History_SaveSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Etc_Set_History_Save.DanaRS_Packet_Etc_Set_History_SaveSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Etc_Set_History_Save.DanaRS_Packet_Etc_Set_History_SaveSubcomponent create(
        DanaRS_Packet_Etc_Set_History_Save arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Etc_Set_History_SaveSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Etc_Set_History_SaveSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Etc_Set_History_Save.DanaRS_Packet_Etc_Set_History_SaveSubcomponent {
    private DanaRS_Packet_Etc_Set_History_SaveSubcomponentImpl(
        DanaRS_Packet_Etc_Set_History_Save arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Etc_Set_History_Save arg0) {
      injectDanaRS_Packet_Etc_Set_History_Save(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Etc_Set_History_Save injectDanaRS_Packet_Etc_Set_History_Save(
        DanaRS_Packet_Etc_Set_History_Save instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Delivery_StatusSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Delivery_Status.DanaRS_Packet_General_Delivery_StatusSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Delivery_Status.DanaRS_Packet_General_Delivery_StatusSubcomponent create(
        DanaRS_Packet_General_Delivery_Status arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Delivery_StatusSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Delivery_StatusSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Delivery_Status.DanaRS_Packet_General_Delivery_StatusSubcomponent {
    private DanaRS_Packet_General_Delivery_StatusSubcomponentImpl(
        DanaRS_Packet_General_Delivery_Status arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Delivery_Status arg0) {
      injectDanaRS_Packet_General_Delivery_Status(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Delivery_Status injectDanaRS_Packet_General_Delivery_Status(
        DanaRS_Packet_General_Delivery_Status instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Get_PasswordSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Password.DanaRS_Packet_General_Get_PasswordSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Password.DanaRS_Packet_General_Get_PasswordSubcomponent create(
        DanaRS_Packet_General_Get_Password arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Get_PasswordSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Get_PasswordSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Password.DanaRS_Packet_General_Get_PasswordSubcomponent {
    private DanaRS_Packet_General_Get_PasswordSubcomponentImpl(
        DanaRS_Packet_General_Get_Password arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Get_Password arg0) {
      injectDanaRS_Packet_General_Get_Password(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Get_Password injectDanaRS_Packet_General_Get_Password(
        DanaRS_Packet_General_Get_Password instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_General_Get_Password_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Initial_Screen_InformationSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Initial_Screen_Information.DanaRS_Packet_General_Initial_Screen_InformationSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Initial_Screen_Information.DanaRS_Packet_General_Initial_Screen_InformationSubcomponent create(
        DanaRS_Packet_General_Initial_Screen_Information arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Initial_Screen_InformationSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Initial_Screen_InformationSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Initial_Screen_Information.DanaRS_Packet_General_Initial_Screen_InformationSubcomponent {
    private DanaRS_Packet_General_Initial_Screen_InformationSubcomponentImpl(
        DanaRS_Packet_General_Initial_Screen_Information arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Initial_Screen_Information arg0) {
      injectDanaRS_Packet_General_Initial_Screen_Information(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Initial_Screen_Information injectDanaRS_Packet_General_Initial_Screen_Information(
        DanaRS_Packet_General_Initial_Screen_Information instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_General_Initial_Screen_Information_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Notify_AlarmSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Notify_Alarm.DanaRS_Packet_Notify_AlarmSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Notify_Alarm.DanaRS_Packet_Notify_AlarmSubcomponent create(
        DanaRS_Packet_Notify_Alarm arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Notify_AlarmSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Notify_AlarmSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Notify_Alarm.DanaRS_Packet_Notify_AlarmSubcomponent {
    private DanaRS_Packet_Notify_AlarmSubcomponentImpl(DanaRS_Packet_Notify_Alarm arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Notify_Alarm arg0) {
      injectDanaRS_Packet_Notify_Alarm(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Notify_Alarm injectDanaRS_Packet_Notify_Alarm(
        DanaRS_Packet_Notify_Alarm instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Notify_Alarm_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_Notify_Alarm_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRS_Packet_Notify_Alarm_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Notify_Delivery_CompleteSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Complete.DanaRS_Packet_Notify_Delivery_CompleteSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Complete.DanaRS_Packet_Notify_Delivery_CompleteSubcomponent create(
        DanaRS_Packet_Notify_Delivery_Complete arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Notify_Delivery_CompleteSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Notify_Delivery_CompleteSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Complete.DanaRS_Packet_Notify_Delivery_CompleteSubcomponent {
    private DanaRS_Packet_Notify_Delivery_CompleteSubcomponentImpl(
        DanaRS_Packet_Notify_Delivery_Complete arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Notify_Delivery_Complete arg0) {
      injectDanaRS_Packet_Notify_Delivery_Complete(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Notify_Delivery_Complete injectDanaRS_Packet_Notify_Delivery_Complete(
        DanaRS_Packet_Notify_Delivery_Complete instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Notify_Delivery_Complete_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_Notify_Delivery_Complete_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRS_Packet_Notify_Delivery_Complete_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Rate_Display.DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Rate_Display.DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponent create(
        DanaRS_Packet_Notify_Delivery_Rate_Display arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Notify_Delivery_Rate_Display.DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponent {
    private DanaRS_Packet_Notify_Delivery_Rate_DisplaySubcomponentImpl(
        DanaRS_Packet_Notify_Delivery_Rate_Display arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Notify_Delivery_Rate_Display arg0) {
      injectDanaRS_Packet_Notify_Delivery_Rate_Display(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Notify_Delivery_Rate_Display injectDanaRS_Packet_Notify_Delivery_Rate_Display(
        DanaRS_Packet_Notify_Delivery_Rate_Display instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Notify_Delivery_Rate_Display_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_Notify_Delivery_Rate_Display_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRS_Packet_Notify_Delivery_Rate_Display_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Notify_Missed_Bolus_Alarm.DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Notify_Missed_Bolus_Alarm.DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponent create(
        DanaRS_Packet_Notify_Missed_Bolus_Alarm arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Notify_Missed_Bolus_Alarm.DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponent {
    private DanaRS_Packet_Notify_Missed_Bolus_AlarmSubcomponentImpl(
        DanaRS_Packet_Notify_Missed_Bolus_Alarm arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Notify_Missed_Bolus_Alarm arg0) {
      injectDanaRS_Packet_Notify_Missed_Bolus_Alarm(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Notify_Missed_Bolus_Alarm injectDanaRS_Packet_Notify_Missed_Bolus_Alarm(
        DanaRS_Packet_Notify_Missed_Bolus_Alarm instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Option_Get_Pump_TimeSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_Time.DanaRS_Packet_Option_Get_Pump_TimeSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_Time.DanaRS_Packet_Option_Get_Pump_TimeSubcomponent create(
        DanaRS_Packet_Option_Get_Pump_Time arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Option_Get_Pump_TimeSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Option_Get_Pump_TimeSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_Time.DanaRS_Packet_Option_Get_Pump_TimeSubcomponent {
    private DanaRS_Packet_Option_Get_Pump_TimeSubcomponentImpl(
        DanaRS_Packet_Option_Get_Pump_Time arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Option_Get_Pump_Time arg0) {
      injectDanaRS_Packet_Option_Get_Pump_Time(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Option_Get_Pump_Time injectDanaRS_Packet_Option_Get_Pump_Time(
        DanaRS_Packet_Option_Get_Pump_Time instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Option_Get_Pump_Time_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Option_Get_User_OptionSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_User_Option.DanaRS_Packet_Option_Get_User_OptionSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_User_Option.DanaRS_Packet_Option_Get_User_OptionSubcomponent create(
        DanaRS_Packet_Option_Get_User_Option arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Option_Get_User_OptionSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Option_Get_User_OptionSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_User_Option.DanaRS_Packet_Option_Get_User_OptionSubcomponent {
    private DanaRS_Packet_Option_Get_User_OptionSubcomponentImpl(
        DanaRS_Packet_Option_Get_User_Option arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Option_Get_User_Option arg0) {
      injectDanaRS_Packet_Option_Get_User_Option(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Option_Get_User_Option injectDanaRS_Packet_Option_Get_User_Option(
        DanaRS_Packet_Option_Get_User_Option instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Option_Get_User_Option_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Option_Set_Pump_TimeSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_Time.DanaRS_Packet_Option_Set_Pump_TimeSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_Time.DanaRS_Packet_Option_Set_Pump_TimeSubcomponent create(
        DanaRS_Packet_Option_Set_Pump_Time arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Option_Set_Pump_TimeSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Option_Set_Pump_TimeSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_Time.DanaRS_Packet_Option_Set_Pump_TimeSubcomponent {
    private DanaRS_Packet_Option_Set_Pump_TimeSubcomponentImpl(
        DanaRS_Packet_Option_Set_Pump_Time arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Option_Set_Pump_Time arg0) {
      injectDanaRS_Packet_Option_Set_Pump_Time(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Option_Set_Pump_Time injectDanaRS_Packet_Option_Set_Pump_Time(
        DanaRS_Packet_Option_Set_Pump_Time instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Option_Set_User_OptionSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_User_Option.DanaRS_Packet_Option_Set_User_OptionSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_User_Option.DanaRS_Packet_Option_Set_User_OptionSubcomponent create(
        DanaRS_Packet_Option_Set_User_Option arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Option_Set_User_OptionSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Option_Set_User_OptionSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_User_Option.DanaRS_Packet_Option_Set_User_OptionSubcomponent {
    private DanaRS_Packet_Option_Set_User_OptionSubcomponentImpl(
        DanaRS_Packet_Option_Set_User_Option arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Option_Set_User_Option arg0) {
      injectDanaRS_Packet_Option_Set_User_Option(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Option_Set_User_Option injectDanaRS_Packet_Option_Set_User_Option(
        DanaRS_Packet_Option_Set_User_Option instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Option_Set_User_Option_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_SubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_.DanaRS_Packet_History_Subcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_.DanaRS_Packet_History_Subcomponent create(
        DanaRS_Packet_History_ arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_SubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_SubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_.DanaRS_Packet_History_Subcomponent {
    private DanaRS_Packet_History_SubcomponentImpl(DanaRS_Packet_History_ arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_ arg0) {
      injectDanaRS_Packet_History_(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_ injectDanaRS_Packet_History_(DanaRS_Packet_History_ instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_AlarmSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Alarm.DanaRS_Packet_History_AlarmSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Alarm.DanaRS_Packet_History_AlarmSubcomponent create(
        DanaRS_Packet_History_Alarm arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_AlarmSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_AlarmSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Alarm.DanaRS_Packet_History_AlarmSubcomponent {
    private DanaRS_Packet_History_AlarmSubcomponentImpl(DanaRS_Packet_History_Alarm arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Alarm arg0) {
      injectDanaRS_Packet_History_Alarm(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Alarm injectDanaRS_Packet_History_Alarm(
        DanaRS_Packet_History_Alarm instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_All_HistorySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_All_History.DanaRS_Packet_History_All_HistorySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_All_History.DanaRS_Packet_History_All_HistorySubcomponent create(
        DanaRS_Packet_History_All_History arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_All_HistorySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_All_HistorySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_All_History.DanaRS_Packet_History_All_HistorySubcomponent {
    private DanaRS_Packet_History_All_HistorySubcomponentImpl(
        DanaRS_Packet_History_All_History arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_All_History arg0) {
      injectDanaRS_Packet_History_All_History(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_All_History injectDanaRS_Packet_History_All_History(
        DanaRS_Packet_History_All_History instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_BasalSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Basal.DanaRS_Packet_History_BasalSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Basal.DanaRS_Packet_History_BasalSubcomponent create(
        DanaRS_Packet_History_Basal arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_BasalSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_BasalSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Basal.DanaRS_Packet_History_BasalSubcomponent {
    private DanaRS_Packet_History_BasalSubcomponentImpl(DanaRS_Packet_History_Basal arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Basal arg0) {
      injectDanaRS_Packet_History_Basal(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Basal injectDanaRS_Packet_History_Basal(
        DanaRS_Packet_History_Basal instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_Blood_GlucoseSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Blood_Glucose.DanaRS_Packet_History_Blood_GlucoseSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Blood_Glucose.DanaRS_Packet_History_Blood_GlucoseSubcomponent create(
        DanaRS_Packet_History_Blood_Glucose arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_Blood_GlucoseSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_Blood_GlucoseSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Blood_Glucose.DanaRS_Packet_History_Blood_GlucoseSubcomponent {
    private DanaRS_Packet_History_Blood_GlucoseSubcomponentImpl(
        DanaRS_Packet_History_Blood_Glucose arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Blood_Glucose arg0) {
      injectDanaRS_Packet_History_Blood_Glucose(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Blood_Glucose injectDanaRS_Packet_History_Blood_Glucose(
        DanaRS_Packet_History_Blood_Glucose instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_BolusSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Bolus.DanaRS_Packet_History_BolusSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Bolus.DanaRS_Packet_History_BolusSubcomponent create(
        DanaRS_Packet_History_Bolus arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_BolusSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_BolusSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Bolus.DanaRS_Packet_History_BolusSubcomponent {
    private DanaRS_Packet_History_BolusSubcomponentImpl(DanaRS_Packet_History_Bolus arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Bolus arg0) {
      injectDanaRS_Packet_History_Bolus(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Bolus injectDanaRS_Packet_History_Bolus(
        DanaRS_Packet_History_Bolus instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Review_Bolus_AvgSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Review_Bolus_Avg.DanaRS_Packet_Review_Bolus_AvgSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Review_Bolus_Avg.DanaRS_Packet_Review_Bolus_AvgSubcomponent create(
        DanaRS_Packet_Review_Bolus_Avg arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Review_Bolus_AvgSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Review_Bolus_AvgSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Review_Bolus_Avg.DanaRS_Packet_Review_Bolus_AvgSubcomponent {
    private DanaRS_Packet_Review_Bolus_AvgSubcomponentImpl(DanaRS_Packet_Review_Bolus_Avg arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Review_Bolus_Avg arg0) {
      injectDanaRS_Packet_Review_Bolus_Avg(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Review_Bolus_Avg injectDanaRS_Packet_Review_Bolus_Avg(
        DanaRS_Packet_Review_Bolus_Avg instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_CarbohydrateSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Carbohydrate.DanaRS_Packet_History_CarbohydrateSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Carbohydrate.DanaRS_Packet_History_CarbohydrateSubcomponent create(
        DanaRS_Packet_History_Carbohydrate arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_CarbohydrateSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_CarbohydrateSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Carbohydrate.DanaRS_Packet_History_CarbohydrateSubcomponent {
    private DanaRS_Packet_History_CarbohydrateSubcomponentImpl(
        DanaRS_Packet_History_Carbohydrate arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Carbohydrate arg0) {
      injectDanaRS_Packet_History_Carbohydrate(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Carbohydrate injectDanaRS_Packet_History_Carbohydrate(
        DanaRS_Packet_History_Carbohydrate instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_DailySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Daily.DanaRS_Packet_History_DailySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Daily.DanaRS_Packet_History_DailySubcomponent create(
        DanaRS_Packet_History_Daily arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_DailySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_DailySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Daily.DanaRS_Packet_History_DailySubcomponent {
    private DanaRS_Packet_History_DailySubcomponentImpl(DanaRS_Packet_History_Daily arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Daily arg0) {
      injectDanaRS_Packet_History_Daily(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Daily injectDanaRS_Packet_History_Daily(
        DanaRS_Packet_History_Daily instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Get_More_InformationSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_More_Information.DanaRS_Packet_General_Get_More_InformationSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_More_Information.DanaRS_Packet_General_Get_More_InformationSubcomponent create(
        DanaRS_Packet_General_Get_More_Information arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Get_More_InformationSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Get_More_InformationSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_More_Information.DanaRS_Packet_General_Get_More_InformationSubcomponent {
    private DanaRS_Packet_General_Get_More_InformationSubcomponentImpl(
        DanaRS_Packet_General_Get_More_Information arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Get_More_Information arg0) {
      injectDanaRS_Packet_General_Get_More_Information(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Get_More_Information injectDanaRS_Packet_General_Get_More_Information(
        DanaRS_Packet_General_Get_More_Information instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_General_Get_More_Information_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Get_Pump_CheckSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Pump_Check.DanaRS_Packet_General_Get_Pump_CheckSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Pump_Check.DanaRS_Packet_General_Get_Pump_CheckSubcomponent create(
        DanaRS_Packet_General_Get_Pump_Check arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Get_Pump_CheckSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Get_Pump_CheckSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Pump_Check.DanaRS_Packet_General_Get_Pump_CheckSubcomponent {
    private DanaRS_Packet_General_Get_Pump_CheckSubcomponentImpl(
        DanaRS_Packet_General_Get_Pump_Check arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Get_Pump_Check arg0) {
      injectDanaRS_Packet_General_Get_Pump_Check(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Get_Pump_Check injectDanaRS_Packet_General_Get_Pump_Check(
        DanaRS_Packet_General_Get_Pump_Check instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_General_Get_Pump_Check_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_General_Get_Pump_Check_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRS_Packet_General_Get_Pump_Check_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Get_Shipping_InformationSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Information.DanaRS_Packet_General_Get_Shipping_InformationSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Information.DanaRS_Packet_General_Get_Shipping_InformationSubcomponent create(
        DanaRS_Packet_General_Get_Shipping_Information arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Get_Shipping_InformationSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Get_Shipping_InformationSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Information.DanaRS_Packet_General_Get_Shipping_InformationSubcomponent {
    private DanaRS_Packet_General_Get_Shipping_InformationSubcomponentImpl(
        DanaRS_Packet_General_Get_Shipping_Information arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Get_Shipping_Information arg0) {
      injectDanaRS_Packet_General_Get_Shipping_Information(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Get_Shipping_Information injectDanaRS_Packet_General_Get_Shipping_Information(
        DanaRS_Packet_General_Get_Shipping_Information instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_General_Get_Shipping_Information_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Today_Delivery_Total.DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Today_Delivery_Total.DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponent create(
        DanaRS_Packet_General_Get_Today_Delivery_Total arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Today_Delivery_Total.DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponent {
    private DanaRS_Packet_General_Get_Today_Delivery_TotalSubcomponentImpl(
        DanaRS_Packet_General_Get_Today_Delivery_Total arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Get_Today_Delivery_Total arg0) {
      injectDanaRS_Packet_General_Get_Today_Delivery_Total(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Get_Today_Delivery_Total injectDanaRS_Packet_General_Get_Today_Delivery_Total(
        DanaRS_Packet_General_Get_Today_Delivery_Total instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_General_Get_Today_Delivery_Total_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_User_Time_Change_Flag.DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_User_Time_Change_Flag.DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponent create(
        DanaRS_Packet_General_Get_User_Time_Change_Flag arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_User_Time_Change_Flag.DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponent {
    private DanaRS_Packet_General_Get_User_Time_Change_FlagSubcomponentImpl(
        DanaRS_Packet_General_Get_User_Time_Change_Flag arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Get_User_Time_Change_Flag arg0) {
      injectDanaRS_Packet_General_Get_User_Time_Change_Flag(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Get_User_Time_Change_Flag injectDanaRS_Packet_General_Get_User_Time_Change_Flag(
        DanaRS_Packet_General_Get_User_Time_Change_Flag instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_PrimeSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Prime.DanaRS_Packet_History_PrimeSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Prime.DanaRS_Packet_History_PrimeSubcomponent create(
        DanaRS_Packet_History_Prime arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_PrimeSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_PrimeSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Prime.DanaRS_Packet_History_PrimeSubcomponent {
    private DanaRS_Packet_History_PrimeSubcomponentImpl(DanaRS_Packet_History_Prime arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Prime arg0) {
      injectDanaRS_Packet_History_Prime(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Prime injectDanaRS_Packet_History_Prime(
        DanaRS_Packet_History_Prime instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_RefillSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Refill.DanaRS_Packet_History_RefillSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Refill.DanaRS_Packet_History_RefillSubcomponent create(
        DanaRS_Packet_History_Refill arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_RefillSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_RefillSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Refill.DanaRS_Packet_History_RefillSubcomponent {
    private DanaRS_Packet_History_RefillSubcomponentImpl(DanaRS_Packet_History_Refill arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Refill arg0) {
      injectDanaRS_Packet_History_Refill(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Refill injectDanaRS_Packet_History_Refill(
        DanaRS_Packet_History_Refill instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Set_History_Upload_ModeSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Set_History_Upload_Mode.DanaRS_Packet_General_Set_History_Upload_ModeSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Set_History_Upload_Mode.DanaRS_Packet_General_Set_History_Upload_ModeSubcomponent create(
        DanaRS_Packet_General_Set_History_Upload_Mode arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Set_History_Upload_ModeSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Set_History_Upload_ModeSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Set_History_Upload_Mode.DanaRS_Packet_General_Set_History_Upload_ModeSubcomponent {
    private DanaRS_Packet_General_Set_History_Upload_ModeSubcomponentImpl(
        DanaRS_Packet_General_Set_History_Upload_Mode arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Set_History_Upload_Mode arg0) {
      injectDanaRS_Packet_General_Set_History_Upload_Mode(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Set_History_Upload_Mode injectDanaRS_Packet_General_Set_History_Upload_Mode(
        DanaRS_Packet_General_Set_History_Upload_Mode instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponent create(
        DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear.DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponent {
    private DanaRS_Packet_General_Set_User_Time_Change_Flag_ClearSubcomponentImpl(
        DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear arg0) {
      injectDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear injectDanaRS_Packet_General_Set_User_Time_Change_Flag_Clear(
        DanaRS_Packet_General_Set_User_Time_Change_Flag_Clear instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_SuspendSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Suspend.DanaRS_Packet_History_SuspendSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Suspend.DanaRS_Packet_History_SuspendSubcomponent create(
        DanaRS_Packet_History_Suspend arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_SuspendSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_SuspendSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Suspend.DanaRS_Packet_History_SuspendSubcomponent {
    private DanaRS_Packet_History_SuspendSubcomponentImpl(DanaRS_Packet_History_Suspend arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Suspend arg0) {
      injectDanaRS_Packet_History_Suspend(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Suspend injectDanaRS_Packet_History_Suspend(
        DanaRS_Packet_History_Suspend instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_History_TemporarySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_History_Temporary.DanaRS_Packet_History_TemporarySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_History_Temporary.DanaRS_Packet_History_TemporarySubcomponent create(
        DanaRS_Packet_History_Temporary arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_History_TemporarySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_History_TemporarySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_History_Temporary.DanaRS_Packet_History_TemporarySubcomponent {
    private DanaRS_Packet_History_TemporarySubcomponentImpl(DanaRS_Packet_History_Temporary arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_History_Temporary arg0) {
      injectDanaRS_Packet_History_Temporary(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_History_Temporary injectDanaRS_Packet_History_Temporary(
        DanaRS_Packet_History_Temporary instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_History__MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_History__MembersInjector.injectDatabaseHelper(instance, DaggerAppComponent.this.databaseHelperProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_APS_Basal_Set_Temporary_Basal.DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_APS_Basal_Set_Temporary_Basal.DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponent create(
        DanaRS_Packet_APS_Basal_Set_Temporary_Basal arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_APS_Basal_Set_Temporary_Basal.DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponent {
    private DanaRS_Packet_APS_Basal_Set_Temporary_BasalSubcomponentImpl(
        DanaRS_Packet_APS_Basal_Set_Temporary_Basal arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_APS_Basal_Set_Temporary_Basal arg0) {
      injectDanaRS_Packet_APS_Basal_Set_Temporary_Basal(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_APS_Basal_Set_Temporary_Basal injectDanaRS_Packet_APS_Basal_Set_Temporary_Basal(
        DanaRS_Packet_APS_Basal_Set_Temporary_Basal instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_APS_History_EventsSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_APS_History_Events.DanaRS_Packet_APS_History_EventsSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_APS_History_Events.DanaRS_Packet_APS_History_EventsSubcomponent create(
        DanaRS_Packet_APS_History_Events arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_APS_History_EventsSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_APS_History_EventsSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_APS_History_Events.DanaRS_Packet_APS_History_EventsSubcomponent {
    private DanaRS_Packet_APS_History_EventsSubcomponentImpl(
        DanaRS_Packet_APS_History_Events arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_APS_History_Events arg0) {
      injectDanaRS_Packet_APS_History_Events(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_APS_History_Events injectDanaRS_Packet_APS_History_Events(
        DanaRS_Packet_APS_History_Events instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_APS_History_Events_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRS_Packet_APS_History_Events_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRS_Packet_APS_History_Events_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaRS_Packet_APS_History_Events_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      DanaRS_Packet_APS_History_Events_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      DanaRS_Packet_APS_History_Events_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DanaRS_Packet_APS_History_Events_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_APS_Set_Event_HistorySubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_APS_Set_Event_History.DanaRS_Packet_APS_Set_Event_HistorySubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_APS_Set_Event_History.DanaRS_Packet_APS_Set_Event_HistorySubcomponent create(
        DanaRS_Packet_APS_Set_Event_History arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_APS_Set_Event_HistorySubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_APS_Set_Event_HistorySubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_APS_Set_Event_History.DanaRS_Packet_APS_Set_Event_HistorySubcomponent {
    private DanaRS_Packet_APS_Set_Event_HistorySubcomponentImpl(
        DanaRS_Packet_APS_Set_Event_History arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_APS_Set_Event_History arg0) {
      injectDanaRS_Packet_APS_Set_Event_History(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_APS_Set_Event_History injectDanaRS_Packet_APS_Set_Event_History(
        DanaRS_Packet_APS_Set_Event_History instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_APS_Set_Event_History_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_General_Get_Shipping_VersionSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Version.DanaRS_Packet_General_Get_Shipping_VersionSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Version.DanaRS_Packet_General_Get_Shipping_VersionSubcomponent create(
        DanaRS_Packet_General_Get_Shipping_Version arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_General_Get_Shipping_VersionSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_General_Get_Shipping_VersionSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_General_Get_Shipping_Version.DanaRS_Packet_General_Get_Shipping_VersionSubcomponent {
    private DanaRS_Packet_General_Get_Shipping_VersionSubcomponentImpl(
        DanaRS_Packet_General_Get_Shipping_Version arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_General_Get_Shipping_Version arg0) {
      injectDanaRS_Packet_General_Get_Shipping_Version(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_General_Get_Shipping_Version injectDanaRS_Packet_General_Get_Shipping_Version(
        DanaRS_Packet_General_Get_Shipping_Version instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_General_Get_Shipping_Version_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Review_Get_Pump_Dec_Ratio.DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Review_Get_Pump_Dec_Ratio.DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponent create(
        DanaRS_Packet_Review_Get_Pump_Dec_Ratio arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Review_Get_Pump_Dec_Ratio.DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponent {
    private DanaRS_Packet_Review_Get_Pump_Dec_RatioSubcomponentImpl(
        DanaRS_Packet_Review_Get_Pump_Dec_Ratio arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Review_Get_Pump_Dec_Ratio arg0) {
      injectDanaRS_Packet_Review_Get_Pump_Dec_Ratio(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Review_Get_Pump_Dec_Ratio injectDanaRS_Packet_Review_Get_Pump_Dec_Ratio(
        DanaRS_Packet_Review_Get_Pump_Dec_Ratio instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Review_Get_Pump_Dec_Ratio_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponent create(
        DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponent {
    private DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZoneSubcomponentImpl(
        DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone arg0) {
      injectDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone injectDanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone(
        DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      DanaRS_Packet_Option_Get_Pump_UTC_And_TimeZone_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      return instance;
    }
  }

  private final class DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentFactory implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponent.Factory {
    @Override
    public DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponent create(
        DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentImpl(arg0);
    }
  }

  private final class DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentImpl implements DanaRSCommModule_ContributesDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone.DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponent {
    private DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZoneSubcomponentImpl(
        DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone arg0) {

    }

    @Override
    public void inject(DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone arg0) {
      injectDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone injectDanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone(
        DanaRS_Packet_Option_Set_Pump_UTC_And_TimeZone instance) {
      DanaRS_Packet_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRS_Packet_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class BLEScanActivitySubcomponentFactory implements DanaRSActivitiesModule_ContributesBLEScanActivity.BLEScanActivitySubcomponent.Factory {
    @Override
    public DanaRSActivitiesModule_ContributesBLEScanActivity.BLEScanActivitySubcomponent create(
        BLEScanActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new BLEScanActivitySubcomponentImpl(arg0);
    }
  }

  private final class BLEScanActivitySubcomponentImpl implements DanaRSActivitiesModule_ContributesBLEScanActivity.BLEScanActivitySubcomponent {
    private BLEScanActivitySubcomponentImpl(BLEScanActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(BLEScanActivity arg0) {
      injectBLEScanActivity(arg0);
    }

    @CanIgnoreReturnValue
    private BLEScanActivity injectBLEScanActivity(BLEScanActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      BLEScanActivity_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      BLEScanActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      BLEScanActivity_MembersInjector.injectBlePreCheck(instance, DaggerAppComponent.this.blePreCheckProvider.get());
      return instance;
    }
  }

  private final class PairingHelperActivitySubcomponentFactory implements DanaRSActivitiesModule_ContributesPairingHelperActivity.PairingHelperActivitySubcomponent.Factory {
    @Override
    public DanaRSActivitiesModule_ContributesPairingHelperActivity.PairingHelperActivitySubcomponent create(
        PairingHelperActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PairingHelperActivitySubcomponentImpl(arg0);
    }
  }

  private final class PairingHelperActivitySubcomponentImpl implements DanaRSActivitiesModule_ContributesPairingHelperActivity.PairingHelperActivitySubcomponent {
    private PairingHelperActivitySubcomponentImpl(PairingHelperActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(PairingHelperActivity arg0) {
      injectPairingHelperActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PairingHelperActivity injectPairingHelperActivity(PairingHelperActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      return instance;
    }
  }

  private final class EnterPinActivitySubcomponentFactory implements DanaRSActivitiesModule_ContributeEnterPinActivity.EnterPinActivitySubcomponent.Factory {
    @Override
    public DanaRSActivitiesModule_ContributeEnterPinActivity.EnterPinActivitySubcomponent create(
        EnterPinActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new EnterPinActivitySubcomponentImpl(arg0);
    }
  }

  private final class EnterPinActivitySubcomponentImpl implements DanaRSActivitiesModule_ContributeEnterPinActivity.EnterPinActivitySubcomponent {
    private EnterPinActivitySubcomponentImpl(EnterPinActivity arg0) {

    }

    private ResourceHelperImplementation resourceHelperImplementation() {
      return new ResourceHelperImplementation(DaggerAppComponent.this.application);
    }

    @Override
    public void inject(EnterPinActivity arg0) {
      injectEnterPinActivity(arg0);
    }

    @CanIgnoreReturnValue
    private EnterPinActivity injectEnterPinActivity(EnterPinActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperImplementation());
      DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, DaggerAppComponent.this.importExportPrefsProvider.get());
      EnterPinActivity_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      EnterPinActivity_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      EnterPinActivity_MembersInjector.injectDanaRSPlugin(instance, DaggerAppComponent.this.danaRSPluginProvider.get());
      EnterPinActivity_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      EnterPinActivity_MembersInjector.injectBleComm(instance, DaggerAppComponent.this.bLECommProvider.get());
      return instance;
    }
  }

  private final class PairingProgressDialogSubcomponentFactory implements DanaRSActivitiesModule_ContributesPairingProgressDialog.PairingProgressDialogSubcomponent.Factory {
    @Override
    public DanaRSActivitiesModule_ContributesPairingProgressDialog.PairingProgressDialogSubcomponent create(
        PairingProgressDialog arg0) {
      Preconditions.checkNotNull(arg0);
      return new PairingProgressDialogSubcomponentImpl(arg0);
    }
  }

  private final class PairingProgressDialogSubcomponentImpl implements DanaRSActivitiesModule_ContributesPairingProgressDialog.PairingProgressDialogSubcomponent {
    private PairingProgressDialogSubcomponentImpl(PairingProgressDialog arg0) {

    }

    @Override
    public void inject(PairingProgressDialog arg0) {
      injectPairingProgressDialog(arg0);
    }

    @CanIgnoreReturnValue
    private PairingProgressDialog injectPairingProgressDialog(PairingProgressDialog instance) {
      DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.dispatchingAndroidInjectorOfObject());
      PairingProgressDialog_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      PairingProgressDialog_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      PairingProgressDialog_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      return instance;
    }
  }

  private final class DanaRSServiceSubcomponentFactory implements DanaRSServicesModule_ContributesDanaRSService.DanaRSServiceSubcomponent.Factory {
    @Override
    public DanaRSServicesModule_ContributesDanaRSService.DanaRSServiceSubcomponent create(
        DanaRSService arg0) {
      Preconditions.checkNotNull(arg0);
      return new DanaRSServiceSubcomponentImpl(arg0);
    }
  }

  private final class DanaRSServiceSubcomponentImpl implements DanaRSServicesModule_ContributesDanaRSService.DanaRSServiceSubcomponent {
    private DanaRSServiceSubcomponentImpl(DanaRSService arg0) {

    }

    @Override
    public void inject(DanaRSService arg0) {
      injectDanaRSService(arg0);
    }

    @CanIgnoreReturnValue
    private DanaRSService injectDanaRSService(DanaRSService instance) {
      DanaRSService_MembersInjector.injectInjector(instance, DaggerAppComponent.this.application);
      DanaRSService_MembersInjector.injectAapsLogger(instance, DaggerAppComponent.this.provideAAPSLoggerProvider.get());
      DanaRSService_MembersInjector.injectRxBus(instance, DaggerAppComponent.this.rxBusWrapperProvider.get());
      DanaRSService_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      DanaRSService_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      DanaRSService_MembersInjector.injectProfileFunction(instance, DaggerAppComponent.this.provideProfileFunctionProvider.get());
      DanaRSService_MembersInjector.injectCommandQueue(instance, DaggerAppComponent.this.commandQueueProvider.get());
      DanaRSService_MembersInjector.injectContext(instance, DaggerAppComponent.this.application);
      DanaRSService_MembersInjector.injectDanaRSPlugin(instance, DaggerAppComponent.this.danaRSPluginProvider.get());
      DanaRSService_MembersInjector.injectDanaPump(instance, DaggerAppComponent.this.danaPumpProvider.get());
      DanaRSService_MembersInjector.injectDanaRSMessageHashTable(instance, DaggerAppComponent.this.danaRSMessageHashTableProvider.get());
      DanaRSService_MembersInjector.injectActivePlugin(instance, DaggerAppComponent.this.pluginStoreProvider.get());
      DanaRSService_MembersInjector.injectConstraintChecker(instance, DaggerAppComponent.this.constraintCheckerProvider.get());
      DanaRSService_MembersInjector.injectDetailedBolusInfoStorage(instance, DaggerAppComponent.this.detailedBolusInfoStorageProvider.get());
      DanaRSService_MembersInjector.injectBleComm(instance, DaggerAppComponent.this.bLECommProvider.get());
      DanaRSService_MembersInjector.injectFabricPrivacy(instance, DaggerAppComponent.this.fabricPrivacyProvider.get());
      DanaRSService_MembersInjector.injectNsUpload(instance, DaggerAppComponent.this.nSUploadProvider.get());
      DanaRSService_MembersInjector.injectDateUtil(instance, DaggerAppComponent.this.dateUtilProvider.get());
      return instance;
    }
  }

  private final class OHUploadWorkerSubcomponentFactory implements OHUploaderModule_ContributesOHUploadWorkerInjector.OHUploadWorkerSubcomponent.Factory {
    @Override
    public OHUploaderModule_ContributesOHUploadWorkerInjector.OHUploadWorkerSubcomponent create(
        OHUploadWorker arg0) {
      Preconditions.checkNotNull(arg0);
      return new OHUploadWorkerSubcomponentImpl(arg0);
    }
  }

  private final class OHUploadWorkerSubcomponentImpl implements OHUploaderModule_ContributesOHUploadWorkerInjector.OHUploadWorkerSubcomponent {
    private OHUploadWorkerSubcomponentImpl(OHUploadWorker arg0) {

    }

    @Override
    public void inject(OHUploadWorker arg0) {
      injectOHUploadWorker(arg0);
    }

    @CanIgnoreReturnValue
    private OHUploadWorker injectOHUploadWorker(OHUploadWorker instance) {
      OHUploadWorker_MembersInjector.injectSp(instance, DaggerAppComponent.this.provideSharedPreferencesProvider.get());
      OHUploadWorker_MembersInjector.injectOpenHumansUploader(instance, DaggerAppComponent.this.openHumansUploaderProvider.get());
      OHUploadWorker_MembersInjector.injectResourceHelper(instance, DaggerAppComponent.this.provideResourcesProvider.get());
      return instance;
    }
  }
}
