// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.utils;

import dagger.internal.Factory;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActivityMonitor_Factory implements Factory<ActivityMonitor> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<SP> spProvider;

  public ActivityMonitor_Factory(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<SP> spProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.spProvider = spProvider;
  }

  @Override
  public ActivityMonitor get() {
    return newInstance(aapsLoggerProvider.get(), resourceHelperProvider.get(), spProvider.get());
  }

  public static ActivityMonitor_Factory create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<SP> spProvider) {
    return new ActivityMonitor_Factory(aapsLoggerProvider, resourceHelperProvider, spProvider);
  }

  public static ActivityMonitor newInstance(AAPSLogger aapsLogger, ResourceHelper resourceHelper,
      SP sp) {
    return new ActivityMonitor(aapsLogger, resourceHelper, sp);
  }
}
