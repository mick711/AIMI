// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.receivers;

import dagger.internal.Factory;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.utils.LocalAlertUtils;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class KeepAliveReceiver_KeepAliveManager_Factory implements Factory<KeepAliveReceiver.KeepAliveManager> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<LocalAlertUtils> localAlertUtilsProvider;

  public KeepAliveReceiver_KeepAliveManager_Factory(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<LocalAlertUtils> localAlertUtilsProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.localAlertUtilsProvider = localAlertUtilsProvider;
  }

  @Override
  public KeepAliveReceiver.KeepAliveManager get() {
    return newInstance(aapsLoggerProvider.get(), localAlertUtilsProvider.get());
  }

  public static KeepAliveReceiver_KeepAliveManager_Factory create(
      Provider<AAPSLogger> aapsLoggerProvider, Provider<LocalAlertUtils> localAlertUtilsProvider) {
    return new KeepAliveReceiver_KeepAliveManager_Factory(aapsLoggerProvider, localAlertUtilsProvider);
  }

  public static KeepAliveReceiver.KeepAliveManager newInstance(AAPSLogger aapsLogger,
      LocalAlertUtils localAlertUtils) {
    return new KeepAliveReceiver.KeepAliveManager(aapsLogger, localAlertUtils);
  }
}
