// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.smsCommunicator;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.FabricPrivacy;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SmsCommunicatorFragment_MembersInjector implements MembersInjector<SmsCommunicatorFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<SmsCommunicatorPlugin> smsCommunicatorPluginProvider;

  private final Provider<DateUtil> dateUtilProvider;

  public SmsCommunicatorFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<SmsCommunicatorPlugin> smsCommunicatorPluginProvider,
      Provider<DateUtil> dateUtilProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
    this.rxBusProvider = rxBusProvider;
    this.smsCommunicatorPluginProvider = smsCommunicatorPluginProvider;
    this.dateUtilProvider = dateUtilProvider;
  }

  public static MembersInjector<SmsCommunicatorFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<SmsCommunicatorPlugin> smsCommunicatorPluginProvider,
      Provider<DateUtil> dateUtilProvider) {
    return new SmsCommunicatorFragment_MembersInjector(androidInjectorProvider, fabricPrivacyProvider, rxBusProvider, smsCommunicatorPluginProvider, dateUtilProvider);
  }

  @Override
  public void injectMembers(SmsCommunicatorFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectFabricPrivacy(instance, fabricPrivacyProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectSmsCommunicatorPlugin(instance, smsCommunicatorPluginProvider.get());
    injectDateUtil(instance, dateUtilProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorFragment.fabricPrivacy")
  public static void injectFabricPrivacy(SmsCommunicatorFragment instance,
      FabricPrivacy fabricPrivacy) {
    instance.fabricPrivacy = fabricPrivacy;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorFragment.rxBus")
  public static void injectRxBus(SmsCommunicatorFragment instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorFragment.smsCommunicatorPlugin")
  public static void injectSmsCommunicatorPlugin(SmsCommunicatorFragment instance,
      SmsCommunicatorPlugin smsCommunicatorPlugin) {
    instance.smsCommunicatorPlugin = smsCommunicatorPlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.smsCommunicator.SmsCommunicatorFragment.dateUtil")
  public static void injectDateUtil(SmsCommunicatorFragment instance, DateUtil dateUtil) {
    instance.dateUtil = dateUtil;
  }
}
