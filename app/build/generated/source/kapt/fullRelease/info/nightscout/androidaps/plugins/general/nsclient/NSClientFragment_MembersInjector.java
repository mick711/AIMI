// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.nsclient;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NSClientFragment_MembersInjector implements MembersInjector<NSClientFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<NSClientPlugin> nsClientPluginProvider;

  private final Provider<SP> spProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<UploadQueue> uploadQueueProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  public NSClientFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<NSClientPlugin> nsClientPluginProvider, Provider<SP> spProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<UploadQueue> uploadQueueProvider, Provider<FabricPrivacy> fabricPrivacyProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.nsClientPluginProvider = nsClientPluginProvider;
    this.spProvider = spProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.rxBusProvider = rxBusProvider;
    this.uploadQueueProvider = uploadQueueProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
  }

  public static MembersInjector<NSClientFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<NSClientPlugin> nsClientPluginProvider, Provider<SP> spProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<UploadQueue> uploadQueueProvider, Provider<FabricPrivacy> fabricPrivacyProvider) {
    return new NSClientFragment_MembersInjector(androidInjectorProvider, nsClientPluginProvider, spProvider, resourceHelperProvider, rxBusProvider, uploadQueueProvider, fabricPrivacyProvider);
  }

  @Override
  public void injectMembers(NSClientFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectNsClientPlugin(instance, nsClientPluginProvider.get());
    injectSp(instance, spProvider.get());
    injectResourceHelper(instance, resourceHelperProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectUploadQueue(instance, uploadQueueProvider.get());
    injectFabricPrivacy(instance, fabricPrivacyProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.nsclient.NSClientFragment.nsClientPlugin")
  public static void injectNsClientPlugin(NSClientFragment instance,
      NSClientPlugin nsClientPlugin) {
    instance.nsClientPlugin = nsClientPlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.nsclient.NSClientFragment.sp")
  public static void injectSp(NSClientFragment instance, SP sp) {
    instance.sp = sp;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.nsclient.NSClientFragment.resourceHelper")
  public static void injectResourceHelper(NSClientFragment instance,
      ResourceHelper resourceHelper) {
    instance.resourceHelper = resourceHelper;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.nsclient.NSClientFragment.rxBus")
  public static void injectRxBus(NSClientFragment instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.nsclient.NSClientFragment.uploadQueue")
  public static void injectUploadQueue(NSClientFragment instance, UploadQueue uploadQueue) {
    instance.uploadQueue = uploadQueue;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.general.nsclient.NSClientFragment.fabricPrivacy")
  public static void injectFabricPrivacy(NSClientFragment instance, FabricPrivacy fabricPrivacy) {
    instance.fabricPrivacy = fabricPrivacy;
  }
}
