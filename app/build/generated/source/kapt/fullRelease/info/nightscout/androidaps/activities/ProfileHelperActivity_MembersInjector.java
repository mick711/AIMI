// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.activities;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.data.defaultProfile.DefaultProfile;
import info.nightscout.androidaps.data.defaultProfile.DefaultProfileDPV;
import info.nightscout.androidaps.interfaces.ActivePluginProvider;
import info.nightscout.androidaps.interfaces.DatabaseHelperInterface;
import info.nightscout.androidaps.interfaces.ImportExportPrefsInterface;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.profile.local.LocalProfilePlugin;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.resources.ResourceHelperImplementation;
import info.nightscout.androidaps.utils.stats.TddCalculator;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProfileHelperActivity_MembersInjector implements MembersInjector<ProfileHelperActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ResourceHelperImplementation> resourceHelperProvider;

  private final Provider<ImportExportPrefsInterface> importExportPrefsProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<TddCalculator> tddCalculatorProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<DefaultProfile> defaultProfileProvider;

  private final Provider<DefaultProfileDPV> defaultProfileDPVProvider;

  private final Provider<LocalProfilePlugin> localProfilePluginProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<DateUtil> dateUtilProvider;

  private final Provider<ActivePluginProvider> activePluginProvider;

  private final Provider<DatabaseHelperInterface> databaseHelperProvider;

  public ProfileHelperActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ResourceHelperImplementation> resourceHelperProvider,
      Provider<ImportExportPrefsInterface> importExportPrefsProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<TddCalculator> tddCalculatorProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<DefaultProfile> defaultProfileProvider,
      Provider<DefaultProfileDPV> defaultProfileDPVProvider,
      Provider<LocalProfilePlugin> localProfilePluginProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<DateUtil> dateUtilProvider, Provider<ActivePluginProvider> activePluginProvider,
      Provider<DatabaseHelperInterface> databaseHelperProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.importExportPrefsProvider = importExportPrefsProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.tddCalculatorProvider = tddCalculatorProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.defaultProfileProvider = defaultProfileProvider;
    this.defaultProfileDPVProvider = defaultProfileDPVProvider;
    this.localProfilePluginProvider = localProfilePluginProvider;
    this.rxBusProvider = rxBusProvider;
    this.dateUtilProvider = dateUtilProvider;
    this.activePluginProvider = activePluginProvider;
    this.databaseHelperProvider = databaseHelperProvider;
  }

  public static MembersInjector<ProfileHelperActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ResourceHelperImplementation> resourceHelperProvider,
      Provider<ImportExportPrefsInterface> importExportPrefsProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<TddCalculator> tddCalculatorProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<DefaultProfile> defaultProfileProvider,
      Provider<DefaultProfileDPV> defaultProfileDPVProvider,
      Provider<LocalProfilePlugin> localProfilePluginProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<DateUtil> dateUtilProvider, Provider<ActivePluginProvider> activePluginProvider,
      Provider<DatabaseHelperInterface> databaseHelperProvider) {
    return new ProfileHelperActivity_MembersInjector(androidInjectorProvider, resourceHelperProvider, importExportPrefsProvider, aapsLoggerProvider, tddCalculatorProvider, profileFunctionProvider, defaultProfileProvider, defaultProfileDPVProvider, localProfilePluginProvider, rxBusProvider, dateUtilProvider, activePluginProvider, databaseHelperProvider);
  }

  @Override
  public void injectMembers(ProfileHelperActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperProvider.get());
    DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, importExportPrefsProvider.get());
    injectAapsLogger(instance, aapsLoggerProvider.get());
    injectTddCalculator(instance, tddCalculatorProvider.get());
    injectProfileFunction(instance, profileFunctionProvider.get());
    injectDefaultProfile(instance, defaultProfileProvider.get());
    injectDefaultProfileDPV(instance, defaultProfileDPVProvider.get());
    injectLocalProfilePlugin(instance, localProfilePluginProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectDateUtil(instance, dateUtilProvider.get());
    injectActivePlugin(instance, activePluginProvider.get());
    injectDatabaseHelper(instance, databaseHelperProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.aapsLogger")
  public static void injectAapsLogger(ProfileHelperActivity instance, AAPSLogger aapsLogger) {
    instance.aapsLogger = aapsLogger;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.tddCalculator")
  public static void injectTddCalculator(ProfileHelperActivity instance,
      TddCalculator tddCalculator) {
    instance.tddCalculator = tddCalculator;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.profileFunction")
  public static void injectProfileFunction(ProfileHelperActivity instance,
      ProfileFunction profileFunction) {
    instance.profileFunction = profileFunction;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.defaultProfile")
  public static void injectDefaultProfile(ProfileHelperActivity instance,
      DefaultProfile defaultProfile) {
    instance.defaultProfile = defaultProfile;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.defaultProfileDPV")
  public static void injectDefaultProfileDPV(ProfileHelperActivity instance,
      DefaultProfileDPV defaultProfileDPV) {
    instance.defaultProfileDPV = defaultProfileDPV;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.localProfilePlugin")
  public static void injectLocalProfilePlugin(ProfileHelperActivity instance,
      LocalProfilePlugin localProfilePlugin) {
    instance.localProfilePlugin = localProfilePlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.rxBus")
  public static void injectRxBus(ProfileHelperActivity instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.dateUtil")
  public static void injectDateUtil(ProfileHelperActivity instance, DateUtil dateUtil) {
    instance.dateUtil = dateUtil;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.activePlugin")
  public static void injectActivePlugin(ProfileHelperActivity instance,
      ActivePluginProvider activePlugin) {
    instance.activePlugin = activePlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.activities.ProfileHelperActivity.databaseHelper")
  public static void injectDatabaseHelper(ProfileHelperActivity instance,
      DatabaseHelperInterface databaseHelper) {
    instance.databaseHelper = databaseHelper;
  }
}
