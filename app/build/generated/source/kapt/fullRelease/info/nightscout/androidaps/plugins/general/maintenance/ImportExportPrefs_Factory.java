// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.maintenance;

import dagger.internal.Factory;
import info.nightscout.androidaps.interfaces.ConfigInterface;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.general.maintenance.formats.ClassicPrefsFormat;
import info.nightscout.androidaps.plugins.general.maintenance.formats.EncryptedPrefsFormat;
import info.nightscout.androidaps.utils.AndroidPermission;
import info.nightscout.androidaps.utils.buildHelper.BuildHelper;
import info.nightscout.androidaps.utils.protection.PasswordCheck;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImportExportPrefs_Factory implements Factory<ImportExportPrefs> {
  private final Provider<AAPSLogger> logProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<SP> spProvider;

  private final Provider<BuildHelper> buildHelperProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<PasswordCheck> passwordCheckProvider;

  private final Provider<ConfigInterface> configProvider;

  private final Provider<AndroidPermission> androidPermissionProvider;

  private final Provider<ClassicPrefsFormat> classicPrefsFormatProvider;

  private final Provider<EncryptedPrefsFormat> encryptedPrefsFormatProvider;

  private final Provider<PrefFileListProvider> prefFileListProvider;

  public ImportExportPrefs_Factory(Provider<AAPSLogger> logProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<SP> spProvider,
      Provider<BuildHelper> buildHelperProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<PasswordCheck> passwordCheckProvider, Provider<ConfigInterface> configProvider,
      Provider<AndroidPermission> androidPermissionProvider,
      Provider<ClassicPrefsFormat> classicPrefsFormatProvider,
      Provider<EncryptedPrefsFormat> encryptedPrefsFormatProvider,
      Provider<PrefFileListProvider> prefFileListProvider) {
    this.logProvider = logProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.spProvider = spProvider;
    this.buildHelperProvider = buildHelperProvider;
    this.rxBusProvider = rxBusProvider;
    this.passwordCheckProvider = passwordCheckProvider;
    this.configProvider = configProvider;
    this.androidPermissionProvider = androidPermissionProvider;
    this.classicPrefsFormatProvider = classicPrefsFormatProvider;
    this.encryptedPrefsFormatProvider = encryptedPrefsFormatProvider;
    this.prefFileListProvider = prefFileListProvider;
  }

  @Override
  public ImportExportPrefs get() {
    return newInstance(logProvider.get(), resourceHelperProvider.get(), spProvider.get(), buildHelperProvider.get(), rxBusProvider.get(), passwordCheckProvider.get(), configProvider.get(), androidPermissionProvider.get(), classicPrefsFormatProvider.get(), encryptedPrefsFormatProvider.get(), prefFileListProvider.get());
  }

  public static ImportExportPrefs_Factory create(Provider<AAPSLogger> logProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<SP> spProvider,
      Provider<BuildHelper> buildHelperProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<PasswordCheck> passwordCheckProvider, Provider<ConfigInterface> configProvider,
      Provider<AndroidPermission> androidPermissionProvider,
      Provider<ClassicPrefsFormat> classicPrefsFormatProvider,
      Provider<EncryptedPrefsFormat> encryptedPrefsFormatProvider,
      Provider<PrefFileListProvider> prefFileListProvider) {
    return new ImportExportPrefs_Factory(logProvider, resourceHelperProvider, spProvider, buildHelperProvider, rxBusProvider, passwordCheckProvider, configProvider, androidPermissionProvider, classicPrefsFormatProvider, encryptedPrefsFormatProvider, prefFileListProvider);
  }

  public static ImportExportPrefs newInstance(AAPSLogger log, ResourceHelper resourceHelper, SP sp,
      BuildHelper buildHelper, RxBusWrapper rxBus, PasswordCheck passwordCheck,
      ConfigInterface config, AndroidPermission androidPermission,
      ClassicPrefsFormat classicPrefsFormat, EncryptedPrefsFormat encryptedPrefsFormat,
      PrefFileListProvider prefFileList) {
    return new ImportExportPrefs(log, resourceHelper, sp, buildHelper, rxBus, passwordCheck, config, androidPermission, classicPrefsFormat, encryptedPrefsFormat, prefFileList);
  }
}
