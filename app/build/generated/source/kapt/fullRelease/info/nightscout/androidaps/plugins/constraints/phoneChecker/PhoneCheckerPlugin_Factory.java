// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.constraints.phoneChecker;

import android.content.Context;
import dagger.android.HasAndroidInjector;
import dagger.internal.Factory;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PhoneCheckerPlugin_Factory implements Factory<PhoneCheckerPlugin> {
  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<Context> contextProvider;

  public PhoneCheckerPlugin_Factory(Provider<HasAndroidInjector> injectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<Context> contextProvider) {
    this.injectorProvider = injectorProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public PhoneCheckerPlugin get() {
    return newInstance(injectorProvider.get(), aapsLoggerProvider.get(), resourceHelperProvider.get(), contextProvider.get());
  }

  public static PhoneCheckerPlugin_Factory create(Provider<HasAndroidInjector> injectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<Context> contextProvider) {
    return new PhoneCheckerPlugin_Factory(injectorProvider, aapsLoggerProvider, resourceHelperProvider, contextProvider);
  }

  public static PhoneCheckerPlugin newInstance(HasAndroidInjector injector, AAPSLogger aapsLogger,
      ResourceHelper resourceHelper, Context context) {
    return new PhoneCheckerPlugin(injector, aapsLogger, resourceHelper, context);
  }
}
