// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.pump.virtual;

import dagger.android.HasAndroidInjector;
import dagger.internal.Factory;
import info.nightscout.androidaps.Config;
import info.nightscout.androidaps.interfaces.CommandQueueProvider;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.treatments.TreatmentsPlugin;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VirtualPumpPlugin_Factory implements Factory<VirtualPumpPlugin> {
  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<SP> spProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<TreatmentsPlugin> treatmentsPluginProvider;

  private final Provider<CommandQueueProvider> commandQueueProvider;

  private final Provider<Config> configProvider;

  private final Provider<DateUtil> dateUtilProvider;

  public VirtualPumpPlugin_Factory(Provider<HasAndroidInjector> injectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<SP> spProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<TreatmentsPlugin> treatmentsPluginProvider,
      Provider<CommandQueueProvider> commandQueueProvider, Provider<Config> configProvider,
      Provider<DateUtil> dateUtilProvider) {
    this.injectorProvider = injectorProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.rxBusProvider = rxBusProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.spProvider = spProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.treatmentsPluginProvider = treatmentsPluginProvider;
    this.commandQueueProvider = commandQueueProvider;
    this.configProvider = configProvider;
    this.dateUtilProvider = dateUtilProvider;
  }

  @Override
  public VirtualPumpPlugin get() {
    return newInstance(injectorProvider.get(), aapsLoggerProvider.get(), rxBusProvider.get(), fabricPrivacyProvider.get(), resourceHelperProvider.get(), spProvider.get(), profileFunctionProvider.get(), treatmentsPluginProvider.get(), commandQueueProvider.get(), configProvider.get(), dateUtilProvider.get());
  }

  public static VirtualPumpPlugin_Factory create(Provider<HasAndroidInjector> injectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<RxBusWrapper> rxBusProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<ResourceHelper> resourceHelperProvider, Provider<SP> spProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<TreatmentsPlugin> treatmentsPluginProvider,
      Provider<CommandQueueProvider> commandQueueProvider, Provider<Config> configProvider,
      Provider<DateUtil> dateUtilProvider) {
    return new VirtualPumpPlugin_Factory(injectorProvider, aapsLoggerProvider, rxBusProvider, fabricPrivacyProvider, resourceHelperProvider, spProvider, profileFunctionProvider, treatmentsPluginProvider, commandQueueProvider, configProvider, dateUtilProvider);
  }

  public static VirtualPumpPlugin newInstance(HasAndroidInjector injector, AAPSLogger aapsLogger,
      RxBusWrapper rxBus, FabricPrivacy fabricPrivacy, ResourceHelper resourceHelper, SP sp,
      ProfileFunction profileFunction, TreatmentsPlugin treatmentsPlugin,
      CommandQueueProvider commandQueue, Config config, DateUtil dateUtil) {
    return new VirtualPumpPlugin(injector, aapsLogger, rxBus, fabricPrivacy, resourceHelper, sp, profileFunction, treatmentsPlugin, commandQueue, config, dateUtil);
  }
}
