// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.treatments.fragments;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.general.nsclient.NSUpload;
import info.nightscout.androidaps.plugins.general.nsclient.UploadQueue;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.Translator;
import info.nightscout.androidaps.utils.buildHelper.BuildHelper;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TreatmentsCareportalFragment_MembersInjector implements MembersInjector<TreatmentsCareportalFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<SP> spProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  private final Provider<Translator> translatorProvider;

  private final Provider<NSUpload> nsUploadProvider;

  private final Provider<UploadQueue> uploadQueueProvider;

  private final Provider<DateUtil> dateUtilProvider;

  private final Provider<BuildHelper> buildHelperProvider;

  public TreatmentsCareportalFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<SP> spProvider,
      Provider<ResourceHelper> resourceHelperProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider, Provider<Translator> translatorProvider,
      Provider<NSUpload> nsUploadProvider, Provider<UploadQueue> uploadQueueProvider,
      Provider<DateUtil> dateUtilProvider, Provider<BuildHelper> buildHelperProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.rxBusProvider = rxBusProvider;
    this.spProvider = spProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
    this.translatorProvider = translatorProvider;
    this.nsUploadProvider = nsUploadProvider;
    this.uploadQueueProvider = uploadQueueProvider;
    this.dateUtilProvider = dateUtilProvider;
    this.buildHelperProvider = buildHelperProvider;
  }

  public static MembersInjector<TreatmentsCareportalFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<SP> spProvider,
      Provider<ResourceHelper> resourceHelperProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider, Provider<Translator> translatorProvider,
      Provider<NSUpload> nsUploadProvider, Provider<UploadQueue> uploadQueueProvider,
      Provider<DateUtil> dateUtilProvider, Provider<BuildHelper> buildHelperProvider) {
    return new TreatmentsCareportalFragment_MembersInjector(androidInjectorProvider, rxBusProvider, spProvider, resourceHelperProvider, fabricPrivacyProvider, translatorProvider, nsUploadProvider, uploadQueueProvider, dateUtilProvider, buildHelperProvider);
  }

  @Override
  public void injectMembers(TreatmentsCareportalFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectSp(instance, spProvider.get());
    injectResourceHelper(instance, resourceHelperProvider.get());
    injectFabricPrivacy(instance, fabricPrivacyProvider.get());
    injectTranslator(instance, translatorProvider.get());
    injectNsUpload(instance, nsUploadProvider.get());
    injectUploadQueue(instance, uploadQueueProvider.get());
    injectDateUtil(instance, dateUtilProvider.get());
    injectBuildHelper(instance, buildHelperProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.rxBus")
  public static void injectRxBus(TreatmentsCareportalFragment instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.sp")
  public static void injectSp(TreatmentsCareportalFragment instance, SP sp) {
    instance.sp = sp;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.resourceHelper")
  public static void injectResourceHelper(TreatmentsCareportalFragment instance,
      ResourceHelper resourceHelper) {
    instance.resourceHelper = resourceHelper;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.fabricPrivacy")
  public static void injectFabricPrivacy(TreatmentsCareportalFragment instance,
      FabricPrivacy fabricPrivacy) {
    instance.fabricPrivacy = fabricPrivacy;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.translator")
  public static void injectTranslator(TreatmentsCareportalFragment instance,
      Translator translator) {
    instance.translator = translator;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.nsUpload")
  public static void injectNsUpload(TreatmentsCareportalFragment instance, NSUpload nsUpload) {
    instance.nsUpload = nsUpload;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.uploadQueue")
  public static void injectUploadQueue(TreatmentsCareportalFragment instance,
      UploadQueue uploadQueue) {
    instance.uploadQueue = uploadQueue;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.dateUtil")
  public static void injectDateUtil(TreatmentsCareportalFragment instance, DateUtil dateUtil) {
    instance.dateUtil = dateUtil;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.plugins.treatments.fragments.TreatmentsCareportalFragment.buildHelper")
  public static void injectBuildHelper(TreatmentsCareportalFragment instance,
      BuildHelper buildHelper) {
    instance.buildHelper = buildHelper;
  }
}
