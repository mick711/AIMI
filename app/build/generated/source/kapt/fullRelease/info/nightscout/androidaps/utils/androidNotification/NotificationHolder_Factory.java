// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.utils.androidNotification;

import android.content.Context;
import dagger.internal.Factory;
import info.nightscout.androidaps.utils.resources.IconsProvider;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationHolder_Factory implements Factory<NotificationHolder> {
  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<Context> contextProvider;

  private final Provider<IconsProvider> iconsProvider;

  public NotificationHolder_Factory(Provider<ResourceHelper> resourceHelperProvider,
      Provider<Context> contextProvider, Provider<IconsProvider> iconsProvider) {
    this.resourceHelperProvider = resourceHelperProvider;
    this.contextProvider = contextProvider;
    this.iconsProvider = iconsProvider;
  }

  @Override
  public NotificationHolder get() {
    return newInstance(resourceHelperProvider.get(), contextProvider.get(), iconsProvider.get());
  }

  public static NotificationHolder_Factory create(Provider<ResourceHelper> resourceHelperProvider,
      Provider<Context> contextProvider, Provider<IconsProvider> iconsProvider) {
    return new NotificationHolder_Factory(resourceHelperProvider, contextProvider, iconsProvider);
  }

  public static NotificationHolder newInstance(ResourceHelper resourceHelper, Context context,
      IconsProvider iconsProvider) {
    return new NotificationHolder(resourceHelper, context, iconsProvider);
  }
}
