// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.historyBrowser;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.HasAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.activities.DaggerAppCompatActivityWithResult_MembersInjector;
import info.nightscout.androidaps.interfaces.ActivePluginProvider;
import info.nightscout.androidaps.interfaces.ImportExportPrefsInterface;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.general.overview.OverviewMenus;
import info.nightscout.androidaps.utils.DateUtil;
import info.nightscout.androidaps.utils.DefaultValueHelper;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.buildHelper.BuildHelper;
import info.nightscout.androidaps.utils.resources.ResourceHelperImplementation;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HistoryBrowseActivity_MembersInjector implements MembersInjector<HistoryBrowseActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ResourceHelperImplementation> resourceHelperProvider;

  private final Provider<ImportExportPrefsInterface> importExportPrefsProvider;

  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<SP> spProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<DefaultValueHelper> defaultValueHelperProvider;

  private final Provider<IobCobCalculatorPluginHistory> iobCobCalculatorPluginHistoryProvider;

  private final Provider<TreatmentsPluginHistory> treatmentsPluginHistoryProvider;

  private final Provider<ActivePluginProvider> activePluginProvider;

  private final Provider<BuildHelper> buildHelperProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  private final Provider<OverviewMenus> overviewMenusProvider;

  private final Provider<DateUtil> dateUtilProvider;

  public HistoryBrowseActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ResourceHelperImplementation> resourceHelperProvider,
      Provider<ImportExportPrefsInterface> importExportPrefsProvider,
      Provider<HasAndroidInjector> injectorProvider, Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<SP> spProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<DefaultValueHelper> defaultValueHelperProvider,
      Provider<IobCobCalculatorPluginHistory> iobCobCalculatorPluginHistoryProvider,
      Provider<TreatmentsPluginHistory> treatmentsPluginHistoryProvider,
      Provider<ActivePluginProvider> activePluginProvider,
      Provider<BuildHelper> buildHelperProvider, Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<OverviewMenus> overviewMenusProvider, Provider<DateUtil> dateUtilProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.importExportPrefsProvider = importExportPrefsProvider;
    this.injectorProvider = injectorProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.rxBusProvider = rxBusProvider;
    this.spProvider = spProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.defaultValueHelperProvider = defaultValueHelperProvider;
    this.iobCobCalculatorPluginHistoryProvider = iobCobCalculatorPluginHistoryProvider;
    this.treatmentsPluginHistoryProvider = treatmentsPluginHistoryProvider;
    this.activePluginProvider = activePluginProvider;
    this.buildHelperProvider = buildHelperProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
    this.overviewMenusProvider = overviewMenusProvider;
    this.dateUtilProvider = dateUtilProvider;
  }

  public static MembersInjector<HistoryBrowseActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ResourceHelperImplementation> resourceHelperProvider,
      Provider<ImportExportPrefsInterface> importExportPrefsProvider,
      Provider<HasAndroidInjector> injectorProvider, Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<SP> spProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<DefaultValueHelper> defaultValueHelperProvider,
      Provider<IobCobCalculatorPluginHistory> iobCobCalculatorPluginHistoryProvider,
      Provider<TreatmentsPluginHistory> treatmentsPluginHistoryProvider,
      Provider<ActivePluginProvider> activePluginProvider,
      Provider<BuildHelper> buildHelperProvider, Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<OverviewMenus> overviewMenusProvider, Provider<DateUtil> dateUtilProvider) {
    return new HistoryBrowseActivity_MembersInjector(androidInjectorProvider, resourceHelperProvider, importExportPrefsProvider, injectorProvider, aapsLoggerProvider, rxBusProvider, spProvider, profileFunctionProvider, defaultValueHelperProvider, iobCobCalculatorPluginHistoryProvider, treatmentsPluginHistoryProvider, activePluginProvider, buildHelperProvider, fabricPrivacyProvider, overviewMenusProvider, dateUtilProvider);
  }

  @Override
  public void injectMembers(HistoryBrowseActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    DaggerAppCompatActivityWithResult_MembersInjector.injectResourceHelper(instance, resourceHelperProvider.get());
    DaggerAppCompatActivityWithResult_MembersInjector.injectImportExportPrefs(instance, importExportPrefsProvider.get());
    injectInjector(instance, injectorProvider.get());
    injectAapsLogger(instance, aapsLoggerProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectSp(instance, spProvider.get());
    injectProfileFunction(instance, profileFunctionProvider.get());
    injectDefaultValueHelper(instance, defaultValueHelperProvider.get());
    injectIobCobCalculatorPluginHistory(instance, iobCobCalculatorPluginHistoryProvider.get());
    injectTreatmentsPluginHistory(instance, treatmentsPluginHistoryProvider.get());
    injectActivePlugin(instance, activePluginProvider.get());
    injectBuildHelper(instance, buildHelperProvider.get());
    injectFabricPrivacy(instance, fabricPrivacyProvider.get());
    injectOverviewMenus(instance, overviewMenusProvider.get());
    injectDateUtil(instance, dateUtilProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.injector")
  public static void injectInjector(HistoryBrowseActivity instance, HasAndroidInjector injector) {
    instance.injector = injector;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.aapsLogger")
  public static void injectAapsLogger(HistoryBrowseActivity instance, AAPSLogger aapsLogger) {
    instance.aapsLogger = aapsLogger;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.rxBus")
  public static void injectRxBus(HistoryBrowseActivity instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.sp")
  public static void injectSp(HistoryBrowseActivity instance, SP sp) {
    instance.sp = sp;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.profileFunction")
  public static void injectProfileFunction(HistoryBrowseActivity instance,
      ProfileFunction profileFunction) {
    instance.profileFunction = profileFunction;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.defaultValueHelper")
  public static void injectDefaultValueHelper(HistoryBrowseActivity instance,
      DefaultValueHelper defaultValueHelper) {
    instance.defaultValueHelper = defaultValueHelper;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.iobCobCalculatorPluginHistory")
  public static void injectIobCobCalculatorPluginHistory(HistoryBrowseActivity instance,
      IobCobCalculatorPluginHistory iobCobCalculatorPluginHistory) {
    instance.iobCobCalculatorPluginHistory = iobCobCalculatorPluginHistory;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.treatmentsPluginHistory")
  public static void injectTreatmentsPluginHistory(HistoryBrowseActivity instance,
      TreatmentsPluginHistory treatmentsPluginHistory) {
    instance.treatmentsPluginHistory = treatmentsPluginHistory;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.activePlugin")
  public static void injectActivePlugin(HistoryBrowseActivity instance,
      ActivePluginProvider activePlugin) {
    instance.activePlugin = activePlugin;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.buildHelper")
  public static void injectBuildHelper(HistoryBrowseActivity instance, BuildHelper buildHelper) {
    instance.buildHelper = buildHelper;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.fabricPrivacy")
  public static void injectFabricPrivacy(HistoryBrowseActivity instance,
      FabricPrivacy fabricPrivacy) {
    instance.fabricPrivacy = fabricPrivacy;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.overviewMenus")
  public static void injectOverviewMenus(HistoryBrowseActivity instance,
      OverviewMenus overviewMenus) {
    instance.overviewMenus = overviewMenus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity.dateUtil")
  public static void injectDateUtil(HistoryBrowseActivity instance, DateUtil dateUtil) {
    instance.dateUtil = dateUtil;
  }
}
