// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.services;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.androidNotification.NotificationHolder;
import info.nightscout.androidaps.utils.sharedPreferences.SP;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationService_MembersInjector implements MembersInjector<LocationService> {
  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<SP> spProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  private final Provider<NotificationHolder> notificationHolderProvider;

  private final Provider<LastLocationDataContainer> lastLocationDataContainerProvider;

  public LocationService_MembersInjector(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<SP> spProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<NotificationHolder> notificationHolderProvider,
      Provider<LastLocationDataContainer> lastLocationDataContainerProvider) {
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.rxBusProvider = rxBusProvider;
    this.spProvider = spProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
    this.notificationHolderProvider = notificationHolderProvider;
    this.lastLocationDataContainerProvider = lastLocationDataContainerProvider;
  }

  public static MembersInjector<LocationService> create(Provider<AAPSLogger> aapsLoggerProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<SP> spProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<NotificationHolder> notificationHolderProvider,
      Provider<LastLocationDataContainer> lastLocationDataContainerProvider) {
    return new LocationService_MembersInjector(aapsLoggerProvider, rxBusProvider, spProvider, fabricPrivacyProvider, notificationHolderProvider, lastLocationDataContainerProvider);
  }

  @Override
  public void injectMembers(LocationService instance) {
    injectAapsLogger(instance, aapsLoggerProvider.get());
    injectRxBus(instance, rxBusProvider.get());
    injectSp(instance, spProvider.get());
    injectFabricPrivacy(instance, fabricPrivacyProvider.get());
    injectNotificationHolder(instance, notificationHolderProvider.get());
    injectLastLocationDataContainer(instance, lastLocationDataContainerProvider.get());
  }

  @InjectedFieldSignature("info.nightscout.androidaps.services.LocationService.aapsLogger")
  public static void injectAapsLogger(LocationService instance, AAPSLogger aapsLogger) {
    instance.aapsLogger = aapsLogger;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.services.LocationService.rxBus")
  public static void injectRxBus(LocationService instance, RxBusWrapper rxBus) {
    instance.rxBus = rxBus;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.services.LocationService.sp")
  public static void injectSp(LocationService instance, SP sp) {
    instance.sp = sp;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.services.LocationService.fabricPrivacy")
  public static void injectFabricPrivacy(LocationService instance, FabricPrivacy fabricPrivacy) {
    instance.fabricPrivacy = fabricPrivacy;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.services.LocationService.notificationHolder")
  public static void injectNotificationHolder(LocationService instance,
      NotificationHolder notificationHolder) {
    instance.notificationHolder = notificationHolder;
  }

  @InjectedFieldSignature("info.nightscout.androidaps.services.LocationService.lastLocationDataContainer")
  public static void injectLastLocationDataContainer(LocationService instance,
      LastLocationDataContainer lastLocationDataContainer) {
    instance.lastLocationDataContainer = lastLocationDataContainer;
  }
}
