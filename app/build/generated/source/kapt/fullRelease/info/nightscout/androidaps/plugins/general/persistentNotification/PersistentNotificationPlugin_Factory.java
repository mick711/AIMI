// Generated by Dagger (https://dagger.dev).
package info.nightscout.androidaps.plugins.general.persistentNotification;

import android.content.Context;
import dagger.android.HasAndroidInjector;
import dagger.internal.Factory;
import info.nightscout.androidaps.interfaces.ActivePluginProvider;
import info.nightscout.androidaps.interfaces.DatabaseHelperInterface;
import info.nightscout.androidaps.interfaces.ProfileFunction;
import info.nightscout.androidaps.logging.AAPSLogger;
import info.nightscout.androidaps.plugins.bus.RxBusWrapper;
import info.nightscout.androidaps.plugins.iob.iobCobCalculator.IobCobCalculatorPlugin;
import info.nightscout.androidaps.utils.FabricPrivacy;
import info.nightscout.androidaps.utils.androidNotification.NotificationHolder;
import info.nightscout.androidaps.utils.resources.IconsProvider;
import info.nightscout.androidaps.utils.resources.ResourceHelper;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersistentNotificationPlugin_Factory implements Factory<PersistentNotificationPlugin> {
  private final Provider<HasAndroidInjector> injectorProvider;

  private final Provider<AAPSLogger> aapsLoggerProvider;

  private final Provider<ResourceHelper> resourceHelperProvider;

  private final Provider<ProfileFunction> profileFunctionProvider;

  private final Provider<FabricPrivacy> fabricPrivacyProvider;

  private final Provider<ActivePluginProvider> activePluginsProvider;

  private final Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider;

  private final Provider<RxBusWrapper> rxBusProvider;

  private final Provider<Context> contextProvider;

  private final Provider<NotificationHolder> notificationHolderProvider;

  private final Provider<DummyServiceHelper> dummyServiceHelperProvider;

  private final Provider<IconsProvider> iconsProvider;

  private final Provider<DatabaseHelperInterface> databaseHelperProvider;

  public PersistentNotificationPlugin_Factory(Provider<HasAndroidInjector> injectorProvider,
      Provider<AAPSLogger> aapsLoggerProvider, Provider<ResourceHelper> resourceHelperProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<ActivePluginProvider> activePluginsProvider,
      Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<Context> contextProvider,
      Provider<NotificationHolder> notificationHolderProvider,
      Provider<DummyServiceHelper> dummyServiceHelperProvider,
      Provider<IconsProvider> iconsProvider,
      Provider<DatabaseHelperInterface> databaseHelperProvider) {
    this.injectorProvider = injectorProvider;
    this.aapsLoggerProvider = aapsLoggerProvider;
    this.resourceHelperProvider = resourceHelperProvider;
    this.profileFunctionProvider = profileFunctionProvider;
    this.fabricPrivacyProvider = fabricPrivacyProvider;
    this.activePluginsProvider = activePluginsProvider;
    this.iobCobCalculatorPluginProvider = iobCobCalculatorPluginProvider;
    this.rxBusProvider = rxBusProvider;
    this.contextProvider = contextProvider;
    this.notificationHolderProvider = notificationHolderProvider;
    this.dummyServiceHelperProvider = dummyServiceHelperProvider;
    this.iconsProvider = iconsProvider;
    this.databaseHelperProvider = databaseHelperProvider;
  }

  @Override
  public PersistentNotificationPlugin get() {
    return newInstance(injectorProvider.get(), aapsLoggerProvider.get(), resourceHelperProvider.get(), profileFunctionProvider.get(), fabricPrivacyProvider.get(), activePluginsProvider.get(), iobCobCalculatorPluginProvider.get(), rxBusProvider.get(), contextProvider.get(), notificationHolderProvider.get(), dummyServiceHelperProvider.get(), iconsProvider.get(), databaseHelperProvider.get());
  }

  public static PersistentNotificationPlugin_Factory create(
      Provider<HasAndroidInjector> injectorProvider, Provider<AAPSLogger> aapsLoggerProvider,
      Provider<ResourceHelper> resourceHelperProvider,
      Provider<ProfileFunction> profileFunctionProvider,
      Provider<FabricPrivacy> fabricPrivacyProvider,
      Provider<ActivePluginProvider> activePluginsProvider,
      Provider<IobCobCalculatorPlugin> iobCobCalculatorPluginProvider,
      Provider<RxBusWrapper> rxBusProvider, Provider<Context> contextProvider,
      Provider<NotificationHolder> notificationHolderProvider,
      Provider<DummyServiceHelper> dummyServiceHelperProvider,
      Provider<IconsProvider> iconsProvider,
      Provider<DatabaseHelperInterface> databaseHelperProvider) {
    return new PersistentNotificationPlugin_Factory(injectorProvider, aapsLoggerProvider, resourceHelperProvider, profileFunctionProvider, fabricPrivacyProvider, activePluginsProvider, iobCobCalculatorPluginProvider, rxBusProvider, contextProvider, notificationHolderProvider, dummyServiceHelperProvider, iconsProvider, databaseHelperProvider);
  }

  public static PersistentNotificationPlugin newInstance(HasAndroidInjector injector,
      AAPSLogger aapsLogger, ResourceHelper resourceHelper, ProfileFunction profileFunction,
      FabricPrivacy fabricPrivacy, ActivePluginProvider activePlugins,
      IobCobCalculatorPlugin iobCobCalculatorPlugin, RxBusWrapper rxBus, Context context,
      NotificationHolder notificationHolder, DummyServiceHelper dummyServiceHelper,
      IconsProvider iconsProvider, DatabaseHelperInterface databaseHelper) {
    return new PersistentNotificationPlugin(injector, aapsLogger, resourceHelper, profileFunction, fabricPrivacy, activePlugins, iobCobCalculatorPlugin, rxBus, context, notificationHolder, dummyServiceHelper, iconsProvider, databaseHelper);
  }
}
