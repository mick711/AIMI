// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OverviewStatuslightsLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView careportalBatterylevel;

  @NonNull
  public final TextView careportalCanulaage;

  @NonNull
  public final TextView careportalInsulinage;

  @NonNull
  public final TextView careportalPbage;

  @NonNull
  public final TextView careportalReservoirlevel;

  @NonNull
  public final TextView careportalSensorage;

  @NonNull
  public final LinearLayout overviewStatuslights;

  private OverviewStatuslightsLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView careportalBatterylevel, @NonNull TextView careportalCanulaage,
      @NonNull TextView careportalInsulinage, @NonNull TextView careportalPbage,
      @NonNull TextView careportalReservoirlevel, @NonNull TextView careportalSensorage,
      @NonNull LinearLayout overviewStatuslights) {
    this.rootView = rootView;
    this.careportalBatterylevel = careportalBatterylevel;
    this.careportalCanulaage = careportalCanulaage;
    this.careportalInsulinage = careportalInsulinage;
    this.careportalPbage = careportalPbage;
    this.careportalReservoirlevel = careportalReservoirlevel;
    this.careportalSensorage = careportalSensorage;
    this.overviewStatuslights = overviewStatuslights;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OverviewStatuslightsLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OverviewStatuslightsLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.overview_statuslights_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OverviewStatuslightsLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.careportal_batterylevel;
      TextView careportalBatterylevel = rootView.findViewById(id);
      if (careportalBatterylevel == null) {
        break missingId;
      }

      id = R.id.careportal_canulaage;
      TextView careportalCanulaage = rootView.findViewById(id);
      if (careportalCanulaage == null) {
        break missingId;
      }

      id = R.id.careportal_insulinage;
      TextView careportalInsulinage = rootView.findViewById(id);
      if (careportalInsulinage == null) {
        break missingId;
      }

      id = R.id.careportal_pbage;
      TextView careportalPbage = rootView.findViewById(id);
      if (careportalPbage == null) {
        break missingId;
      }

      id = R.id.careportal_reservoirlevel;
      TextView careportalReservoirlevel = rootView.findViewById(id);
      if (careportalReservoirlevel == null) {
        break missingId;
      }

      id = R.id.careportal_sensorage;
      TextView careportalSensorage = rootView.findViewById(id);
      if (careportalSensorage == null) {
        break missingId;
      }

      LinearLayout overviewStatuslights = (LinearLayout) rootView;

      return new OverviewStatuslightsLayoutBinding((LinearLayout) rootView, careportalBatterylevel,
          careportalCanulaage, careportalInsulinage, careportalPbage, careportalReservoirlevel,
          careportalSensorage, overviewStatuslights);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
