// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.navigation.NavigationView;
import com.google.android.material.tabs.TabLayout;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final DrawerLayout mainDrawerLayout;

  @NonNull
  public final NavigationView mainNavigationView;

  @NonNull
  public final ViewPager2 mainPager;

  @NonNull
  public final TabLayout tabsCompact;

  @NonNull
  public final TabLayout tabsNormal;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull LinearLayout rootView,
      @NonNull DrawerLayout mainDrawerLayout, @NonNull NavigationView mainNavigationView,
      @NonNull ViewPager2 mainPager, @NonNull TabLayout tabsCompact, @NonNull TabLayout tabsNormal,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.mainDrawerLayout = mainDrawerLayout;
    this.mainNavigationView = mainNavigationView;
    this.mainPager = mainPager;
    this.tabsCompact = tabsCompact;
    this.tabsNormal = tabsNormal;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.main_drawer_layout;
      DrawerLayout mainDrawerLayout = rootView.findViewById(id);
      if (mainDrawerLayout == null) {
        break missingId;
      }

      id = R.id.main_navigation_view;
      NavigationView mainNavigationView = rootView.findViewById(id);
      if (mainNavigationView == null) {
        break missingId;
      }

      id = R.id.main_pager;
      ViewPager2 mainPager = rootView.findViewById(id);
      if (mainPager == null) {
        break missingId;
      }

      id = R.id.tabs_compact;
      TabLayout tabsCompact = rootView.findViewById(id);
      if (tabsCompact == null) {
        break missingId;
      }

      id = R.id.tabs_normal;
      TabLayout tabsNormal = rootView.findViewById(id);
      if (tabsNormal == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, mainDrawerLayout, mainNavigationView,
          mainPager, tabsCompact, tabsNormal, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
