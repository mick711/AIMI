// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TreatmentsTemptargetItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView nsSign;

  @NonNull
  public final TextView pumpSign;

  @NonNull
  public final CardView temptargetrangeCardview;

  @NonNull
  public final TextView temptargetrangeDate;

  @NonNull
  public final TextView temptargetrangeDuration;

  @NonNull
  public final TextView temptargetrangeHigh;

  @NonNull
  public final TextView temptargetrangeLow;

  @NonNull
  public final TextView temptargetrangeReason;

  @NonNull
  public final TextView temptargetrangeReasonColon;

  @NonNull
  public final TextView temptargetrangeReasonLabel;

  @NonNull
  public final TextView temptargetrangeRemove;

  private TreatmentsTemptargetItemBinding(@NonNull CardView rootView, @NonNull TextView nsSign,
      @NonNull TextView pumpSign, @NonNull CardView temptargetrangeCardview,
      @NonNull TextView temptargetrangeDate, @NonNull TextView temptargetrangeDuration,
      @NonNull TextView temptargetrangeHigh, @NonNull TextView temptargetrangeLow,
      @NonNull TextView temptargetrangeReason, @NonNull TextView temptargetrangeReasonColon,
      @NonNull TextView temptargetrangeReasonLabel, @NonNull TextView temptargetrangeRemove) {
    this.rootView = rootView;
    this.nsSign = nsSign;
    this.pumpSign = pumpSign;
    this.temptargetrangeCardview = temptargetrangeCardview;
    this.temptargetrangeDate = temptargetrangeDate;
    this.temptargetrangeDuration = temptargetrangeDuration;
    this.temptargetrangeHigh = temptargetrangeHigh;
    this.temptargetrangeLow = temptargetrangeLow;
    this.temptargetrangeReason = temptargetrangeReason;
    this.temptargetrangeReasonColon = temptargetrangeReasonColon;
    this.temptargetrangeReasonLabel = temptargetrangeReasonLabel;
    this.temptargetrangeRemove = temptargetrangeRemove;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static TreatmentsTemptargetItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TreatmentsTemptargetItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.treatments_temptarget_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TreatmentsTemptargetItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ns_sign;
      TextView nsSign = rootView.findViewById(id);
      if (nsSign == null) {
        break missingId;
      }

      id = R.id.pump_sign;
      TextView pumpSign = rootView.findViewById(id);
      if (pumpSign == null) {
        break missingId;
      }

      CardView temptargetrangeCardview = (CardView) rootView;

      id = R.id.temptargetrange_date;
      TextView temptargetrangeDate = rootView.findViewById(id);
      if (temptargetrangeDate == null) {
        break missingId;
      }

      id = R.id.temptargetrange_duration;
      TextView temptargetrangeDuration = rootView.findViewById(id);
      if (temptargetrangeDuration == null) {
        break missingId;
      }

      id = R.id.temptargetrange_high;
      TextView temptargetrangeHigh = rootView.findViewById(id);
      if (temptargetrangeHigh == null) {
        break missingId;
      }

      id = R.id.temptargetrange_low;
      TextView temptargetrangeLow = rootView.findViewById(id);
      if (temptargetrangeLow == null) {
        break missingId;
      }

      id = R.id.temptargetrange_reason;
      TextView temptargetrangeReason = rootView.findViewById(id);
      if (temptargetrangeReason == null) {
        break missingId;
      }

      id = R.id.temptargetrange_reason_colon;
      TextView temptargetrangeReasonColon = rootView.findViewById(id);
      if (temptargetrangeReasonColon == null) {
        break missingId;
      }

      id = R.id.temptargetrange_reason_label;
      TextView temptargetrangeReasonLabel = rootView.findViewById(id);
      if (temptargetrangeReasonLabel == null) {
        break missingId;
      }

      id = R.id.temptargetrange_remove;
      TextView temptargetrangeRemove = rootView.findViewById(id);
      if (temptargetrangeRemove == null) {
        break missingId;
      }

      return new TreatmentsTemptargetItemBinding((CardView) rootView, nsSign, pumpSign,
          temptargetrangeCardview, temptargetrangeDate, temptargetrangeDuration,
          temptargetrangeHigh, temptargetrangeLow, temptargetrangeReason,
          temptargetrangeReasonColon, temptargetrangeReasonLabel, temptargetrangeRemove);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
