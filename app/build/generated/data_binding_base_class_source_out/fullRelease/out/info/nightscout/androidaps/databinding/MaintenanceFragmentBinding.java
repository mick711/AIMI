// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MaintenanceFragmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button logDelete;

  @NonNull
  public final Button logSend;

  @NonNull
  public final Button navExport;

  @NonNull
  public final Button navImport;

  @NonNull
  public final Button navLogsettings;

  @NonNull
  public final Button navResetdb;

  private MaintenanceFragmentBinding(@NonNull FrameLayout rootView, @NonNull Button logDelete,
      @NonNull Button logSend, @NonNull Button navExport, @NonNull Button navImport,
      @NonNull Button navLogsettings, @NonNull Button navResetdb) {
    this.rootView = rootView;
    this.logDelete = logDelete;
    this.logSend = logSend;
    this.navExport = navExport;
    this.navImport = navImport;
    this.navLogsettings = navLogsettings;
    this.navResetdb = navResetdb;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MaintenanceFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MaintenanceFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.maintenance_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MaintenanceFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.log_delete;
      Button logDelete = rootView.findViewById(id);
      if (logDelete == null) {
        break missingId;
      }

      id = R.id.log_send;
      Button logSend = rootView.findViewById(id);
      if (logSend == null) {
        break missingId;
      }

      id = R.id.nav_export;
      Button navExport = rootView.findViewById(id);
      if (navExport == null) {
        break missingId;
      }

      id = R.id.nav_import;
      Button navImport = rootView.findViewById(id);
      if (navImport == null) {
        break missingId;
      }

      id = R.id.nav_logsettings;
      Button navLogsettings = rootView.findViewById(id);
      if (navLogsettings == null) {
        break missingId;
      }

      id = R.id.nav_resetdb;
      Button navResetdb = rootView.findViewById(id);
      if (navResetdb == null) {
        break missingId;
      }

      return new MaintenanceFragmentBinding((FrameLayout) rootView, logDelete, logSend, navExport,
          navImport, navLogsettings, navResetdb);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
