// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import info.nightscout.androidaps.utils.ui.NumberPicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TimelisteditElementBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView timelisteditAdd;

  @NonNull
  public final NumberPicker timelisteditEdit1;

  @NonNull
  public final NumberPicker timelisteditEdit2;

  @NonNull
  public final ImageView timelisteditRemove;

  @NonNull
  public final Spinner timelisteditTime;

  private TimelisteditElementBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView timelisteditAdd, @NonNull NumberPicker timelisteditEdit1,
      @NonNull NumberPicker timelisteditEdit2, @NonNull ImageView timelisteditRemove,
      @NonNull Spinner timelisteditTime) {
    this.rootView = rootView;
    this.timelisteditAdd = timelisteditAdd;
    this.timelisteditEdit1 = timelisteditEdit1;
    this.timelisteditEdit2 = timelisteditEdit2;
    this.timelisteditRemove = timelisteditRemove;
    this.timelisteditTime = timelisteditTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TimelisteditElementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TimelisteditElementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.timelistedit_element, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TimelisteditElementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.timelistedit_add;
      ImageView timelisteditAdd = rootView.findViewById(id);
      if (timelisteditAdd == null) {
        break missingId;
      }

      id = R.id.timelistedit_edit1;
      NumberPicker timelisteditEdit1 = rootView.findViewById(id);
      if (timelisteditEdit1 == null) {
        break missingId;
      }

      id = R.id.timelistedit_edit2;
      NumberPicker timelisteditEdit2 = rootView.findViewById(id);
      if (timelisteditEdit2 == null) {
        break missingId;
      }

      id = R.id.timelistedit_remove;
      ImageView timelisteditRemove = rootView.findViewById(id);
      if (timelisteditRemove == null) {
        break missingId;
      }

      id = R.id.timelistedit_time;
      Spinner timelisteditTime = rootView.findViewById(id);
      if (timelisteditTime == null) {
        break missingId;
      }

      return new TimelisteditElementBinding((LinearLayout) rootView, timelisteditAdd,
          timelisteditEdit1, timelisteditEdit2, timelisteditRemove, timelisteditTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
