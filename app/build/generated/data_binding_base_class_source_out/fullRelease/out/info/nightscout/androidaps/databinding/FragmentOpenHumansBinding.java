// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOpenHumansBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button login;

  @NonNull
  public final Button logout;

  @NonNull
  public final TextView memberId;

  @NonNull
  public final TextView queueSize;

  @NonNull
  public final TextView workerState;

  private FragmentOpenHumansBinding(@NonNull ScrollView rootView, @NonNull Button login,
      @NonNull Button logout, @NonNull TextView memberId, @NonNull TextView queueSize,
      @NonNull TextView workerState) {
    this.rootView = rootView;
    this.login = login;
    this.logout = logout;
    this.memberId = memberId;
    this.queueSize = queueSize;
    this.workerState = workerState;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOpenHumansBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOpenHumansBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_open_humans, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOpenHumansBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login;
      Button login = rootView.findViewById(id);
      if (login == null) {
        break missingId;
      }

      id = R.id.logout;
      Button logout = rootView.findViewById(id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.member_id;
      TextView memberId = rootView.findViewById(id);
      if (memberId == null) {
        break missingId;
      }

      id = R.id.queue_size;
      TextView queueSize = rootView.findViewById(id);
      if (queueSize == null) {
        break missingId;
      }

      id = R.id.worker_state;
      TextView workerState = rootView.findViewById(id);
      if (workerState == null) {
        break missingId;
      }

      return new FragmentOpenHumansBinding((ScrollView) rootView, login, logout, memberId,
          queueSize, workerState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
