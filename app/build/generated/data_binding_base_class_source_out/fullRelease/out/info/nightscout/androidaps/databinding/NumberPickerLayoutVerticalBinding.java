// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NumberPickerLayoutVerticalBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button decrement;

  @NonNull
  public final EditText display;

  @NonNull
  public final Button increment;

  private NumberPickerLayoutVerticalBinding(@NonNull LinearLayout rootView,
      @NonNull Button decrement, @NonNull EditText display, @NonNull Button increment) {
    this.rootView = rootView;
    this.decrement = decrement;
    this.display = display;
    this.increment = increment;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NumberPickerLayoutVerticalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NumberPickerLayoutVerticalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.number_picker_layout_vertical, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NumberPickerLayoutVerticalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.decrement;
      Button decrement = rootView.findViewById(id);
      if (decrement == null) {
        break missingId;
      }

      id = R.id.display;
      EditText display = rootView.findViewById(id);
      if (display == null) {
        break missingId;
      }

      id = R.id.increment;
      Button increment = rootView.findViewById(id);
      if (increment == null) {
        break missingId;
      }

      return new NumberPickerLayoutVerticalBinding((LinearLayout) rootView, decrement, display,
          increment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
