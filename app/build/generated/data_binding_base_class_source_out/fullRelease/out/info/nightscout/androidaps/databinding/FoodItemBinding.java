// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FoodItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView foodCarbs;

  @NonNull
  public final TextView foodEnergy;

  @NonNull
  public final TextView foodFat;

  @NonNull
  public final TextView foodName;

  @NonNull
  public final TextView foodPortion;

  @NonNull
  public final TextView foodProtein;

  @NonNull
  public final TextView foodRemove;

  @NonNull
  public final TextView nsSign;

  private FoodItemBinding(@NonNull CardView rootView, @NonNull TextView foodCarbs,
      @NonNull TextView foodEnergy, @NonNull TextView foodFat, @NonNull TextView foodName,
      @NonNull TextView foodPortion, @NonNull TextView foodProtein, @NonNull TextView foodRemove,
      @NonNull TextView nsSign) {
    this.rootView = rootView;
    this.foodCarbs = foodCarbs;
    this.foodEnergy = foodEnergy;
    this.foodFat = foodFat;
    this.foodName = foodName;
    this.foodPortion = foodPortion;
    this.foodProtein = foodProtein;
    this.foodRemove = foodRemove;
    this.nsSign = nsSign;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FoodItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FoodItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.food_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FoodItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.food_carbs;
      TextView foodCarbs = rootView.findViewById(id);
      if (foodCarbs == null) {
        break missingId;
      }

      id = R.id.food_energy;
      TextView foodEnergy = rootView.findViewById(id);
      if (foodEnergy == null) {
        break missingId;
      }

      id = R.id.food_fat;
      TextView foodFat = rootView.findViewById(id);
      if (foodFat == null) {
        break missingId;
      }

      id = R.id.food_name;
      TextView foodName = rootView.findViewById(id);
      if (foodName == null) {
        break missingId;
      }

      id = R.id.food_portion;
      TextView foodPortion = rootView.findViewById(id);
      if (foodPortion == null) {
        break missingId;
      }

      id = R.id.food_protein;
      TextView foodProtein = rootView.findViewById(id);
      if (foodProtein == null) {
        break missingId;
      }

      id = R.id.food_remove;
      TextView foodRemove = rootView.findViewById(id);
      if (foodRemove == null) {
        break missingId;
      }

      id = R.id.ns_sign;
      TextView nsSign = rootView.findViewById(id);
      if (nsSign == null) {
        break missingId;
      }

      return new FoodItemBinding((CardView) rootView, foodCarbs, foodEnergy, foodFat, foodName,
          foodPortion, foodProtein, foodRemove, nsSign);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
