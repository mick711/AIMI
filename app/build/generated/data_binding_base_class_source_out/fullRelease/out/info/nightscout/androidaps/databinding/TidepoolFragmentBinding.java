// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TidepoolFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView tidepoolLog;

  @NonNull
  public final Button tidepoolLogin;

  @NonNull
  public final ScrollView tidepoolLogscrollview;

  @NonNull
  public final Button tidepoolRemoveall;

  @NonNull
  public final Button tidepoolResertstart;

  @NonNull
  public final TextView tidepoolStatus;

  @NonNull
  public final Button tidepoolUploadnow;

  private TidepoolFragmentBinding(@NonNull ConstraintLayout rootView, @NonNull TextView tidepoolLog,
      @NonNull Button tidepoolLogin, @NonNull ScrollView tidepoolLogscrollview,
      @NonNull Button tidepoolRemoveall, @NonNull Button tidepoolResertstart,
      @NonNull TextView tidepoolStatus, @NonNull Button tidepoolUploadnow) {
    this.rootView = rootView;
    this.tidepoolLog = tidepoolLog;
    this.tidepoolLogin = tidepoolLogin;
    this.tidepoolLogscrollview = tidepoolLogscrollview;
    this.tidepoolRemoveall = tidepoolRemoveall;
    this.tidepoolResertstart = tidepoolResertstart;
    this.tidepoolStatus = tidepoolStatus;
    this.tidepoolUploadnow = tidepoolUploadnow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TidepoolFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TidepoolFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tidepool_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TidepoolFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tidepool_log;
      TextView tidepoolLog = rootView.findViewById(id);
      if (tidepoolLog == null) {
        break missingId;
      }

      id = R.id.tidepool_login;
      Button tidepoolLogin = rootView.findViewById(id);
      if (tidepoolLogin == null) {
        break missingId;
      }

      id = R.id.tidepool_logscrollview;
      ScrollView tidepoolLogscrollview = rootView.findViewById(id);
      if (tidepoolLogscrollview == null) {
        break missingId;
      }

      id = R.id.tidepool_removeall;
      Button tidepoolRemoveall = rootView.findViewById(id);
      if (tidepoolRemoveall == null) {
        break missingId;
      }

      id = R.id.tidepool_resertstart;
      Button tidepoolResertstart = rootView.findViewById(id);
      if (tidepoolResertstart == null) {
        break missingId;
      }

      id = R.id.tidepool_status;
      TextView tidepoolStatus = rootView.findViewById(id);
      if (tidepoolStatus == null) {
        break missingId;
      }

      id = R.id.tidepool_uploadnow;
      Button tidepoolUploadnow = rootView.findViewById(id);
      if (tidepoolUploadnow == null) {
        break missingId;
      }

      return new TidepoolFragmentBinding((ConstraintLayout) rootView, tidepoolLog, tidepoolLogin,
          tidepoolLogscrollview, tidepoolRemoveall, tidepoolResertstart, tidepoolStatus,
          tidepoolUploadnow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
