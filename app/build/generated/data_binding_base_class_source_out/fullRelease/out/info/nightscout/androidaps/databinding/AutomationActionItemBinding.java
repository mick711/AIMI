// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AutomationActionItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView automationActionImage;

  @NonNull
  public final ImageView automationIconTrash;

  @NonNull
  public final LinearLayout automationLayoutText;

  @NonNull
  public final TextView automationViewActionTitle;

  private AutomationActionItemBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView automationActionImage, @NonNull ImageView automationIconTrash,
      @NonNull LinearLayout automationLayoutText, @NonNull TextView automationViewActionTitle) {
    this.rootView = rootView;
    this.automationActionImage = automationActionImage;
    this.automationIconTrash = automationIconTrash;
    this.automationLayoutText = automationLayoutText;
    this.automationViewActionTitle = automationViewActionTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AutomationActionItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AutomationActionItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.automation_action_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AutomationActionItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.automation_action_image;
      ImageView automationActionImage = rootView.findViewById(id);
      if (automationActionImage == null) {
        break missingId;
      }

      id = R.id.automation_iconTrash;
      ImageView automationIconTrash = rootView.findViewById(id);
      if (automationIconTrash == null) {
        break missingId;
      }

      id = R.id.automation_layoutText;
      LinearLayout automationLayoutText = rootView.findViewById(id);
      if (automationLayoutText == null) {
        break missingId;
      }

      id = R.id.automation_viewActionTitle;
      TextView automationViewActionTitle = rootView.findViewById(id);
      if (automationViewActionTitle == null) {
        break missingId;
      }

      return new AutomationActionItemBinding((RelativeLayout) rootView, automationActionImage,
          automationIconTrash, automationLayoutText, automationViewActionTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
