// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NsclientinternalFragmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CheckBox nsclientinternalAutoscroll;

  @NonNull
  public final TextView nsclientinternalClearlog;

  @NonNull
  public final TextView nsclientinternalClearqueue;

  @NonNull
  public final TextView nsclientinternalDelivernow;

  @NonNull
  public final TextView nsclientinternalLog;

  @NonNull
  public final ScrollView nsclientinternalLogscrollview;

  @NonNull
  public final CheckBox nsclientinternalPaused;

  @NonNull
  public final TextView nsclientinternalQueue;

  @NonNull
  public final TextView nsclientinternalRestart;

  @NonNull
  public final TextView nsclientinternalShowqueue;

  @NonNull
  public final TextView nsclientinternalStatus;

  @NonNull
  public final TextView nsclientinternalUrl;

  private NsclientinternalFragmentBinding(@NonNull FrameLayout rootView,
      @NonNull CheckBox nsclientinternalAutoscroll, @NonNull TextView nsclientinternalClearlog,
      @NonNull TextView nsclientinternalClearqueue, @NonNull TextView nsclientinternalDelivernow,
      @NonNull TextView nsclientinternalLog, @NonNull ScrollView nsclientinternalLogscrollview,
      @NonNull CheckBox nsclientinternalPaused, @NonNull TextView nsclientinternalQueue,
      @NonNull TextView nsclientinternalRestart, @NonNull TextView nsclientinternalShowqueue,
      @NonNull TextView nsclientinternalStatus, @NonNull TextView nsclientinternalUrl) {
    this.rootView = rootView;
    this.nsclientinternalAutoscroll = nsclientinternalAutoscroll;
    this.nsclientinternalClearlog = nsclientinternalClearlog;
    this.nsclientinternalClearqueue = nsclientinternalClearqueue;
    this.nsclientinternalDelivernow = nsclientinternalDelivernow;
    this.nsclientinternalLog = nsclientinternalLog;
    this.nsclientinternalLogscrollview = nsclientinternalLogscrollview;
    this.nsclientinternalPaused = nsclientinternalPaused;
    this.nsclientinternalQueue = nsclientinternalQueue;
    this.nsclientinternalRestart = nsclientinternalRestart;
    this.nsclientinternalShowqueue = nsclientinternalShowqueue;
    this.nsclientinternalStatus = nsclientinternalStatus;
    this.nsclientinternalUrl = nsclientinternalUrl;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NsclientinternalFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NsclientinternalFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nsclientinternal_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NsclientinternalFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nsclientinternal_autoscroll;
      CheckBox nsclientinternalAutoscroll = rootView.findViewById(id);
      if (nsclientinternalAutoscroll == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_clearlog;
      TextView nsclientinternalClearlog = rootView.findViewById(id);
      if (nsclientinternalClearlog == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_clearqueue;
      TextView nsclientinternalClearqueue = rootView.findViewById(id);
      if (nsclientinternalClearqueue == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_delivernow;
      TextView nsclientinternalDelivernow = rootView.findViewById(id);
      if (nsclientinternalDelivernow == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_log;
      TextView nsclientinternalLog = rootView.findViewById(id);
      if (nsclientinternalLog == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_logscrollview;
      ScrollView nsclientinternalLogscrollview = rootView.findViewById(id);
      if (nsclientinternalLogscrollview == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_paused;
      CheckBox nsclientinternalPaused = rootView.findViewById(id);
      if (nsclientinternalPaused == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_queue;
      TextView nsclientinternalQueue = rootView.findViewById(id);
      if (nsclientinternalQueue == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_restart;
      TextView nsclientinternalRestart = rootView.findViewById(id);
      if (nsclientinternalRestart == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_showqueue;
      TextView nsclientinternalShowqueue = rootView.findViewById(id);
      if (nsclientinternalShowqueue == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_status;
      TextView nsclientinternalStatus = rootView.findViewById(id);
      if (nsclientinternalStatus == null) {
        break missingId;
      }

      id = R.id.nsclientinternal_url;
      TextView nsclientinternalUrl = rootView.findViewById(id);
      if (nsclientinternalUrl == null) {
        break missingId;
      }

      return new NsclientinternalFragmentBinding((FrameLayout) rootView, nsclientinternalAutoscroll,
          nsclientinternalClearlog, nsclientinternalClearqueue, nsclientinternalDelivernow,
          nsclientinternalLog, nsclientinternalLogscrollview, nsclientinternalPaused,
          nsclientinternalQueue, nsclientinternalRestart, nsclientinternalShowqueue,
          nsclientinternalStatus, nsclientinternalUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
