// Generated by view binder compiler. Do not edit!
package info.nightscout.androidaps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import info.nightscout.androidaps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TreatmentsCareportalItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView careportalCardview;

  @NonNull
  public final TextView careportalDate;

  @NonNull
  public final TextView careportalDuration;

  @NonNull
  public final TextView careportalNote;

  @NonNull
  public final TextView careportalRemove;

  @NonNull
  public final TextView careportalType;

  @NonNull
  public final TextView nsSign;

  private TreatmentsCareportalItemBinding(@NonNull CardView rootView,
      @NonNull CardView careportalCardview, @NonNull TextView careportalDate,
      @NonNull TextView careportalDuration, @NonNull TextView careportalNote,
      @NonNull TextView careportalRemove, @NonNull TextView careportalType,
      @NonNull TextView nsSign) {
    this.rootView = rootView;
    this.careportalCardview = careportalCardview;
    this.careportalDate = careportalDate;
    this.careportalDuration = careportalDuration;
    this.careportalNote = careportalNote;
    this.careportalRemove = careportalRemove;
    this.careportalType = careportalType;
    this.nsSign = nsSign;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static TreatmentsCareportalItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TreatmentsCareportalItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.treatments_careportal_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TreatmentsCareportalItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView careportalCardview = (CardView) rootView;

      id = R.id.careportal_date;
      TextView careportalDate = rootView.findViewById(id);
      if (careportalDate == null) {
        break missingId;
      }

      id = R.id.careportal_duration;
      TextView careportalDuration = rootView.findViewById(id);
      if (careportalDuration == null) {
        break missingId;
      }

      id = R.id.careportal_note;
      TextView careportalNote = rootView.findViewById(id);
      if (careportalNote == null) {
        break missingId;
      }

      id = R.id.careportal_remove;
      TextView careportalRemove = rootView.findViewById(id);
      if (careportalRemove == null) {
        break missingId;
      }

      id = R.id.careportal_type;
      TextView careportalType = rootView.findViewById(id);
      if (careportalType == null) {
        break missingId;
      }

      id = R.id.ns_sign;
      TextView nsSign = rootView.findViewById(id);
      if (nsSign == null) {
        break missingId;
      }

      return new TreatmentsCareportalItemBinding((CardView) rootView, careportalCardview,
          careportalDate, careportalDuration, careportalNote, careportalRemove, careportalType,
          nsSign);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
